saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/../condensed_model_save, but does not seem to exist
saved_filename is /home/douglas/gits/kernelkernel/condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node91017109-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node91017109-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node91017109-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node91017109-6\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-6\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-4\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-5\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 958, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 816, in MY_KDEpredictMSE
    y_err = y_batch_i - yhat_unstd[batch_i]
TypeError: unsupported operand type(s) for -: 'float' and 'NoneType'
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-46\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-46\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 958, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 816, in MY_KDEpredictMSE
    y_err = y_batch_i - yhat_unstd[batch_i]
TypeError: unsupported operand type(s) for -: 'float' and 'NoneType'
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-71\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-71\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 958, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 816, in MY_KDEpredictMSE
    y_err = y_batch_i - yhat_unstd[batch_i]
TypeError: unsupported operand type(s) for -: 'float' and 'NoneType'
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-52\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node90165339-52\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node95836640-6\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node95836640-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node95836640-4\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node95836640-5\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node95836640-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node95836640-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup)
UnboundLocalError: local variable 'yhat_unstd_outtup' referenced before assignment
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup)
UnboundLocalError: local variable 'yhat_unstd_outtup' referenced before assignment
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-4\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-5\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-6\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-41\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-41\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-72\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-72\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-9\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node42694041-9\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-5\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-5:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-3:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-4\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-4:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-6\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-6:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-7:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-43\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-43\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-43:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node38146976-43:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-74\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-74\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-74:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 33, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node38146976-74:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 33, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-81\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-81\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-81\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-81:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node38146976-81:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node38146976-81:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 959, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 812, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-9\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-9\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-9\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node38146976-9\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node38146976-9:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 33, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node38146976-9:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 33, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node38146976-9:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 33, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node38146976-9:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 33, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 32, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node33374187-5\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node33374187-5:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
batch_crossval yhat: [0.1973367164107992 0.15407798158267513 0.004979939035783633
 0.002342676680346793 0.001821630999077616 0.010277449759552271
 0.4122355228028792 0.00555281320965911 0.010763691336127345
 0.03619708100128189 0.007773788378417697 0.0050075988237648205
 0.0005287910061992352 0.04064982933695704 0.4217724732617177
 0.008040199924186682]
batch_crossval yhat: [0.017396604249511897 0.014769323953166836 2.9626974483093615
 0.014618956812711222 0.06286312689059878 0.03065558263476675
 0.02430480501851518 0.018698423547955256 0.020905593832897952
 0.021080805551444454 0.1085539446098912 0.11563754930316839
 0.02784262053572134 0.03264957067787487 0.04813480590687016
 0.014605314753393633]
batch_crossval yhat: [0.5512653989316321 0.0071013304002382985 0.00085561064180845
 0.0032611461945571156 0.0018725342391157586 0.0008668534077817287
 0.001697405813515356 0.0024693013690049366 0.003345405315570252
 0.24487195369341924 11.789024107203655 0.0013782914154579207
 0.00362673148620319 0.0013762288153982127 1.0347480838006815
 0.002680942996410739]
batch_crossval yhat: [-1.2810995408195738 -0.04689308095564238 -0.04688502777981664
 -0.09137263840188395 -0.3304262699055097 -0.04829147601509281
 -2.74779590666754 -0.07108040317605974 -0.1998121757355071
 -0.043315110883457554 -0.04429203669889416 -0.06371209188727714
 -0.11847863718050476 -0.073026694571479 -0.0688784887527555
 -0.08154993249598191]
batch_crossval yhat: [-0.1912742134621329 -0.2038798963634985 -0.11165109218418755
 -0.12136600677861549 -0.4068745663403828 -0.22613702928866414
 -0.20604959905931136 -0.2045001098886408 -0.11916502700144457
 -0.10499666628038043 -2.026585935391316 -0.46593741122287485
 -0.19026684920006412 -0.21905466061151974 -0.15434343646668125
 -0.11824517489154618]
batch_crossval yhat: [-0.022427064859790062 -0.01220215437018158 -0.1669172324470526
 -0.01834251950004033 -0.040032080350103895 -0.02012829046741304
 -0.02490402152510428 -0.052979199282732314 -0.034640733564912964
 -0.015469283149656309 -0.06820839730580674 -0.02724994660079596
 0.7383046023283799 -0.009641324030150727 -0.012388789263731475
 -0.0851238536435017]
batch_crossval yhat: [-0.2637101961539156 -0.9454026136305769 -1.2527109797530342
 -0.18450009378970608 -0.047956893212823676 -0.154297998706459
 -0.7048400292344712 -0.8391728609347462 -0.48983056897211863
 -0.6955098396658546 -0.03979389139864009 -0.8043315571862493
 -0.04326217196362461 -0.09700955321802368 -0.12834193751082287
 -0.038679931460774926]
batch_crossval yhat: [0.4307835317572002 0.27165115319023125 0.02908848164755814
 0.048802723897665386 -0.11708522444821332 0.057654119137886345
 0.013334547319725209 0.09184750342404349 0.4953988761541652
 0.045297720323461126 0.21365055034203148 0.0346793527564853
 0.01782353889849074 0.011910406529305338 0.04283902244920518
 0.019539639487734684]
batch_crossval yhat: [-0.10879818794358823 -0.7633149557013831 -0.577161741954391
 -0.13182791439713307 -0.1430820104775969 -0.1605956139834621
 -0.12570813620485766 -0.20645660816995978 -0.4443724085423728
 -0.13646477219271694 -0.9669483209181163 -0.3448110433524729
 -2.192424615831448 -0.18040414635437138 -0.23938514198875444
 -0.4737052346901798]
batch_crossval yhat: [0.042833037094178975 0.043813261167345255 0.17483445785820742
 0.10021628316252987 0.041044786424584395 0.047141397904565424
 0.09443780677852565 0.058702957591487234 2.1071736684713245
 0.14863087523142623 0.09847119714611705 0.11465508936062696
 0.554841635416363 0.042893789568327 0.0935257650434332
 0.24875350693773496]
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 960, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 813, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node33374187-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node33374187-3:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node33374187-4\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node33374187-4:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-4\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node11848968-4:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9461451770585313 0.6675724267050691 0.013547385590106209
 0.016864347776311434 0.0153419937190008 0.062255622598832557
 0.7487604858903694 0.02249059384245307 0.37390831376309047
 0.18011996957845078 0.05507250624517007 0.01353553196306071
 0.02440408202523448 0.14431817224808063 1.3140361205624151
 0.030769917772582124]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06085272537924088 0.12503062317506541 0.059857583784853945
 0.04140144737965885 0.11900662352505097 0.08361209347288968
 0.0579813143899624 0.148614024160573 0.33030971622502775
 0.06128321954655316 0.7118523582538571 0.516290467482997
 0.1877523763713588 0.1335349060994667 0.03925605079952717
 0.08147970162026184]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6689772033603508 -0.2499486462598544 -0.2844912107272245
 -0.577954778959859 -0.23868501950541146 -0.6639696303284742
 -0.281742427550743 -2.9070463010778718 -4.451589944822596
 -0.2723799500765111 -0.8019856762264027 -1.0112725662726978
 -0.27264632225880747 -0.6410625652336526 -0.892153273073632
 -0.29929984869321397]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12977708144150724 0.1574864173112807 0.17045430323745545
 0.22215426794009027 1.1778973906053687 0.36803555882438244
 0.11118202649185063 0.22958941072932673 0.12888580443915915
 2.021738090809853 1.9377031393361352 1.3503262202074697
 0.22980559626707553 0.3126529650958404 0.14837020551213692
 0.11515282876405505]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07037749605364012 -0.33361646782880683 -0.10190068167154992
 -0.08301637450060831 -0.2081741405770791 -0.6575586930197143
 -0.18526588477518255 -0.15382341336675903 -0.12486517073503406
 -0.3067879303917664 -0.07165851136266321 -0.26285409273764737
 -0.755799587234443 -0.13302540793859513 -0.8317574509990195
 -0.36439997025267057]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.46063964758983106 0.42812324342609787 0.5412314879328751
 0.20030278604628077 0.7009228364579024 0.5212244320653604
 0.3970005596894922 0.39933195378627484 0.300648892243291
 0.2148629771724214 0.1968937004910883 0.2416666395451585
 0.7550737240221237 0.2969340629975025 0.40464900339631515
 0.3661105762787732]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1128150596391772 0.15503813144908576 0.08711833454722011
 0.13879519674745022 0.04616505075683888 0.052567719318864864
 0.15049044766078482 0.1390367212279445 0.10682459762250869
 0.2547139367313965 0.4255197620029234 0.12707947507134373
 0.10727152998823357 0.12614898752224715 0.48440657701239476
 0.06160953506238172]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33930739840450247 0.18901582020730912 0.5280830696316795
 0.46173307796615665 0.24175883159378384 1.0951635004813878
 0.40672614892519854 0.26875852964889363 0.26369918700682593
 0.25969522941810314 0.1855088836043464 0.32911636162660246
 0.16187717552934228 0.6436476927057886 0.6741698434696162
 0.2050951115750917]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09611447581306332 -0.07061040303571203 -0.13586262011703695
 -0.11810234540431577 -0.11989604156829473 -0.5349158513333601
 -0.31017996263773495 -0.13793872849120664 -0.17643036846067148
 -0.07822351795545635 -0.07895631879567436 -2.059692319851204
 -0.1123661573068938 -0.6357550540916583 -0.14183512046075508
 -0.11009993209644506]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6556999276689893 -0.2644283348125575 -0.4670395864174392
 -0.4347629109117719 -0.6209772912151837 -0.2297602706767629
 -0.5669634701203834 -0.2351151305841433 -0.42649592380317936
 -0.7527792985888018 -0.26737685241507664 -0.26494023695852315
 -0.8532024871535051 -0.38157195556994405 -0.2852282327039664
 -0.6696348684221034]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9461565134978446 0.6675680505528743 0.013546965569075253
 0.016863816327908492 0.015341506575868009 0.06225403981594153
 0.7487620717903427 0.02248993430230499 0.3739079996188979
 0.18011762267543535 0.05507100710143854 0.013535113454267396
 0.024403317692317985 0.14431648073228193 1.3140391800084916
 0.030769027623467636]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.060852300701512284 0.12503011233189895 0.05985717320949429
 0.04140111791466717 0.11900619212518179 0.08361174440345391
 0.057980898220774395 0.14861263296564675 0.33030851644997977
 0.06128278212351576 0.71185543418867 0.5162946278396533
 0.18775260620069015 0.13353422494386408 0.0392557170532446
 0.0814791509940979]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6689757944582948 -0.24994727706513326 -0.2844898546878617
 -0.5779522347901742 -0.23868378293233655 -0.6639676226025221
 -0.2817410731414246 -2.907053908444013 -4.451603579346666
 -0.27237863229596404 -0.8019835369274192 -1.0112736959766824
 -0.2726448258330229 -0.6410596412170738 -0.8921514866575475
 -0.2992984180511694]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12977524851653338 0.1574841430576908 0.17045208859894156
 0.22215125920767936 1.1779021439345492 0.36803206198952987
 0.11118036477559386 0.2295865611816934 0.1288839015306173
 2.0217573301109506 1.9376997063720678 1.3503348885418813
 0.22980301729298186 0.31264949883244153 0.14836797896491277
 0.11515111410492264]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07037717693040361 -0.33361588994605224 -0.1019003173204058
 -0.08301599094507489 -0.20817379204262126 -0.6575586122246793
 -0.18526533314049443 -0.15382306732761653 -0.12486470680216963
 -0.30678722026612226 -0.0716581847599252 -0.26285303089648276
 -0.7558029692230932 -0.13302515832974554 -0.8317584097509817
 -0.36440141353931166]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.46064035972084255 0.4281228790974919 0.5412320831335765
 0.2003024380784278 0.700922628398479 0.5212242952865619
 0.3970004392490879 0.39933183013319795 0.3006484452934473
 0.21486254337677346 0.19689334877779893 0.24166624834168973
 0.7550758570984709 0.29693388285404126 0.40464892385521667
 0.3661103204456851]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11281401393330927 0.15503780985926946 0.0871176948832708
 0.13879551591085554 0.04616453123585271 0.052567265767745786
 0.15048951998695093 0.13903538693308512 0.10682399511391501
 0.2547151202988508 0.4255238980689132 0.1270792309871004
 0.1072705023185708 0.12614808124784851 0.48440971953168643
 0.06160877628357136]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33930713179896926 0.18901511572144394 0.528082875680012
 0.46173220513579755 0.24175808171725333 1.0951696214169113
 0.4067251452101708 0.2687576945064203 0.263698239006065
 0.25969497933370306 0.18550827326874694 0.3291160612657823
 0.1618765452176678 0.6436493885371319 0.6741700578740545
 0.20509444610449848]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09611375782297944 -0.07060984492992627 -0.13586176233609357
 -0.11810150720260765 -0.11989517477307941 -0.5349150249055583
 -0.3101788494994022 -0.13793775199393996 -0.1764293470556864
 -0.07822291675331766 -0.07895568928535981 -2.0597051718985817
 -0.1123653887516393 -0.6357536138459794 -0.1418342168823606
 -0.11009919948297099]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6557004460482132 -0.2644280276868117 -0.4670395574586003
 -0.434762548502865 -0.6209776153047654 -0.22976001325298748
 -0.5669633458241898 -0.23511484783536193 -0.4264957051348138
 -0.752780538756679 -0.26737656598876636 -0.26493995939401993
 -0.8532019222137212 -0.38157161657413025 -0.28522802017277576
 -0.6696360478736305]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9461451779793608 0.6675724263873013 0.013547385564710194
 0.016864347744546187 0.015341993690296478 0.06225562249603421
 0.7487604859115276 0.022490593801116163 0.37390831370152566
 0.1801199693938498 0.05507250615068109 0.013535531937730574
 0.02440408198027644 0.14431817210762712 1.314036120775705
 0.030769917716469378]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06085272535433776 0.12503062315995014 0.05985758376065223
 0.041401447361522806 0.11900662351462465 0.08361209345252725
 0.05798131436496173 0.14861402401676305 0.3303097161504199
 0.06128321952024615 0.7118523585072001 0.5162904677066007
 0.18775237637910033 0.13353490605017107 0.03925605078131462
 0.08147970158595236]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6689772033052278 -0.24994864621023336 -0.28449121067760036
 -0.5779547788737293 -0.23868501945842205 -0.663969630251304
 -0.2817424274975768 -2.907046301372436 -4.451589945265728
 -0.27237995002660503 -0.801985676165594 -1.011272566288945
 -0.27264632220515306 -0.6410625651324761 -0.8921532730548524
 -0.2992998486414212]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12977708135652782 0.15748641720670864 0.17045430312782459
 0.2221542677989249 1.1778973908049983 0.36803555863982035
 0.11118202641703986 0.22958941058430843 0.1288858043511501
 2.021738091991936 1.9377031390150927 1.3503262205882833
 0.22980559612930934 0.31265296490476857 0.1483702054107978
 0.115152828685496]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07037749604160565 -0.33361646779684423 -0.10190068165529932
 -0.08301637448611954 -0.20817414055824435 -0.657558693040309
 -0.18526588475703665 -0.15382341335097083 -0.12486517071624421
 -0.30678793036625746 -0.07165851135041913 -0.2628540927079
 -0.7557995873560925 -0.13302540792431017 -0.831757451051649
 -0.364399970285878]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4606396476258588 0.42812324341100977 0.5412314879504926
 0.20030278603275 0.7009228364668499 0.5212244320736289
 0.39700055967981573 0.39933195378465514 0.3006488922270799
 0.21486297715911873 0.19689370047899768 0.24166663953141235
 0.7550737240716626 0.29693406298902186 0.4046490033930552
 0.3661105762653787]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11281505955712529 0.1550381313989962 0.08711833449659685
 0.13879519680952077 0.046165050723729374 0.05256771929753086
 0.15049044755482366 0.13903672112669396 0.10682459757689006
 0.2547139367928975 0.4255197623180705 0.1270794750519138
 0.10727152989804944 0.12614898744912384 0.4844065773054892
 0.06160953500334435]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33930739838367846 0.18901582018457486 0.5280830695982517
 0.4617330779295481 0.24175883156648345 1.095163500743062
 0.4067261488994021 0.2687585296174344 0.2636991869788271
 0.2596952294006034 0.18550888358461462 0.32911636161706875
 0.16187717550819974 0.64364769277172 0.674169843460928 0.2050951115502316]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09611447578233816 -0.07061040301164093 -0.135862620076782
 -0.11810234536701886 -0.11989604153004962 -0.53491585126107
 -0.3101799625720256 -0.13793872844862395 -0.17643036841349719
 -0.07822351792940632 -0.07895631876946671 -2.059692320504739
 -0.11236615727300081 -0.6357550539984708 -0.14183512041861537
 -0.11009993206273777]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6556999276880068 -0.26442833480027333 -0.4670395864086585
 -0.43476291090156804 -0.6209772912310139 -0.22976027066438995
 -0.5669634701268949 -0.23511513057166644 -0.4264959237969674
 -0.752779298616486 -0.26737685240408576 -0.2649402369472734
 -0.8532024871735041 -0.38157195555924206 -0.2852282326918988
 -0.6696348684404028]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1058247327476474 0.6298207234970831 0.012338909349793425
 0.01612488925357086 0.014500064316889353 0.06318340388972077
 0.7064227160944297 0.02116570074379301 0.3628164093228753
 0.19433309016913605 0.05243537807184535 0.012335237644889046
 0.023600787981394845 0.13742388039717093 1.2485744419057168
 0.028242281952801335]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06033765767985878 0.12116148210980532 0.058177736794955776
 0.0400554361330929 0.11529810472301963 0.08226035651605122
 0.0558987110554276 0.14186433859819825 0.32799449034624
 0.05904147111019405 0.7124082320169366 0.5432438166363968
 0.1934015195071415 0.12961025368793608 0.03779531416537047
 0.07956631058571999]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6628885601967586 -0.250673786275795 -0.2854106901571209
 -0.6073644532626277 -0.2358280954128516 -0.7042587769542761
 -0.2814745967531581 -2.9019195905054387 -4.387501727463825
 -0.2693019557481295 -0.8217418748265828 -0.9994884244219799
 -0.2697847656664699 -0.6321742444409593 -0.9059095064571319
 -0.29948431588420105]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12606828830224 0.15784997045844207 0.16825855610451596
 0.213281728512916 1.1325635638672065 0.35909623839801635
 0.10862784851084083 0.2276347135718812 0.12624331748513593
 2.208573057712651 1.8786059084771352 1.3162934746798403
 0.22927367416865965 0.3026898329000629 0.14489942683306767
 0.11125170703037442]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.06852231288741437 -0.32747951722756885 -0.10279179339984244
 -0.08138080671147019 -0.20221648487003346 -0.6427498560194504
 -0.17682315033034957 -0.14957028077751647 -0.12319057491114159
 -0.3096647756746578 -0.06967418102486989 -0.24896501952617486
 -0.7605120047835707 -0.1334135571069694 -0.888435566851846
 -0.35949139134230373]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4539133048860447 0.4362250818611797 0.5283987045724248
 0.1960582542525982 0.6977348076455622 0.535953813734618
 0.39773376292181645 0.4096104405047707 0.29298560229018905
 0.2091775819306417 0.19193237651189854 0.2354016272358557
 0.7858524591740368 0.2959639383976086 0.39858686673579663
 0.3600879004857458]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11702780034030652 0.15106363785995705 0.08590827557838193
 0.13628969959272985 0.04431569201114027 0.05013647507244806
 0.14525503245468066 0.13903119471153505 0.10673011065404649
 0.26191534366979746 0.4313016510719144 0.1266353319232152
 0.10452221510728107 0.12852596617643322 0.486253173096184
 0.0606894630407453]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3323577520362163 0.18140501073042714 0.5126957287789722
 0.45922274464041685 0.23475204061216123 1.176342463117222
 0.3885769179455255 0.26872414546045953 0.253109763541961
 0.25638966130156443 0.18006720610481822 0.32689696999533485
 0.15744061230912093 0.6454102382147029 0.6763698757912064
 0.20359473121451882]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09366662905378968 -0.06935939947226466 -0.13233442710129215
 -0.11794034872139694 -0.11637954465266084 -0.5414837974515451
 -0.3037656528789826 -0.1334701631313766 -0.17442251183095495
 -0.07618768918250181 -0.07691213470866785 -2.0152820894558694
 -0.11026267108142082 -0.7035770110696891 -0.1428154142569294
 -0.10911973337014136]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6559818002659435 -0.26686941205245535 -0.47158624547301764
 -0.42653656623163605 -0.6159644709527128 -0.2280203960968918
 -0.5643248308205364 -0.23420024044016582 -0.42507468685545036
 -0.774675423289971 -0.2672314400442569 -0.262541951652992
 -0.8363748130964859 -0.37632353854021894 -0.2833471771461095
 -0.6869237850634876]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0057264813537046 0.6961642488984613 0.012141869547542868
 0.014998963888457641 0.013556215683610219 0.0557653200869656
 0.7275279313482399 0.020761839682234946 0.43009258963233343
 0.17096006181921555 0.04899559178038282 0.012124216882111986
 0.021565233622384546 0.13580152742702062 1.2340349325799798
 0.02892562310611292]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.05757561312015394 0.11733248747153634 0.05643021390098537
 0.03911511963974198 0.11222603364772041 0.08040351530508413
 0.057181416152529946 0.15162646664592283 0.3198844447311683
 0.058082550474557 0.7539819673116415 0.5254490493912019
 0.18467023618482983 0.12910370081408423 0.03707949332971226
 0.07797292354547553]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6395450928453293 -0.23956618782099076 -0.271889844442171
 -0.5489279673390043 -0.23379105410513856 -0.6269678385896417
 -0.2726680779351554 -2.88558381291392 -4.702282288547899
 -0.2640307064167452 -0.7727339933759669 -0.9894366722785766
 -0.2644488010597157 -0.6496751587374584 -0.8650555520015467
 -0.2886023160180443]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12288482696891072 0.14867594866833442 0.16589004660158607
 0.21413693576746826 1.1856065747066293 0.3574549607904764
 0.10423006675802529 0.2218940697649712 0.12207887030357378
 2.0240567129503844 1.8854143710124323 1.4683374959694993
 0.23443498743900654 0.3085461428552744 0.13953299507704944
 0.10803630137936573]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.06881309588971499 -0.3291360562367305 -0.10062217414627564
 -0.08115168493539444 -0.21347240746682122 -0.658153413182341
 -0.18354941351657988 -0.15098660393340796 -0.12175438543856335
 -0.30302031147547787 -0.0702861924537379 -0.2571478024338727
 -0.7723118351494136 -0.1302877556302488 -0.8164283156770146
 -0.3877598258795845]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4461651634455235 0.4198778478979517 0.5726829064618131
 0.19616450963353585 0.7094456029551462 0.5121860868868168
 0.3995152599144482 0.39865095542385715 0.2979848412065799
 0.2101583169611661 0.1918537603401664 0.23850601965086377
 0.762050526944576 0.29876971333906815 0.4126002757680317
 0.35900473631124435]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.10616933021543526 0.1614209383557424 0.08388846559306122
 0.1400360542175637 0.04422304895419958 0.05070275080046469
 0.14516698909474932 0.1320860769873385 0.1024053597855624
 0.2813668309154598 0.41883644486930316 0.12688330729472946
 0.10795654305063106 0.1197908595962596 0.49555778067151723
 0.0591102819587781]
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node11848968-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3469755914944145 0.18770566937871674 0.5388228516987018
 0.46110522599821047 0.24360159072994242 1.0838772864049933
 0.3990827756858904 0.26465186232912624 0.257530953361105
 0.2561259313671083 0.18133900103285241 0.32529343305607555
 0.15838696137126848 0.6785535957046022 0.6685334073209791
 0.2017697248606413]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.16332519370858284 -0.9379037009647146 -0.8814544710477499
 -0.24661063171438408 -0.9542658993134661 -0.15607679998423787
 -0.4416653712420707 -0.14412900691466113 -0.38036153522999866
 -2.1066616737901653 -1.0125763193871444 -0.3458862138267226
 -0.15318095601077072 -0.3697438520583493 -0.17697968989526927
 -0.15469444604757202]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09493518694706408 -0.06933356207444433 -0.13337513908965298
 -0.11562339610519012 -0.1219851061618265 -0.5610943697498242
 -0.3448365597110691 -0.14065296123278412 -0.17239907485894718
 -0.07665325072958283 -0.07746993845500927 -2.0127121797468623
 -0.11320778067276005 -0.633079636335139 -0.14063235349771563
 -0.1089887220516112]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3539658722859145 -0.17049350296526278 -0.3811065815947372
 -0.17965085495336305 -0.18351469677794094 -0.1710683037311272
 -0.15201958002971377 -0.18876665590214736 -0.19679188691542385
 -0.16256544382266033 -0.14911040147947513 -0.3417839439541252
 -0.27048943031798367 -0.16202952017498182 -0.16198909243675771
 -0.23675326205748964]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6727526535003306 -0.26009053493646533 -0.46580372631157907
 -0.42579700475673427 -0.6490602916667325 -0.22501767795263053
 -0.563242416193697 -0.23165729865898405 -0.4338642386570849
 -0.7450056141683338 -0.2640999657092164 -0.264602447399635
 -0.8305978094268828 -0.3753311671206902 -0.2791423255943619
 -0.6899116059689727]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.23571242876852452 0.3712633287756421 0.018385114933439143
 0.04298197118592267 0.015113755050446704 0.019604091423253978
 0.03713115429237021 0.013873118967685444 0.06394173909906965
 0.01656054376018872 0.014247874702455757 0.022498405790736413
 10.743522793669825 0.0417991435233332 0.02028697905421135
 0.02265204258342222]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8705167123985357 0.6733613915965325 0.012058694567971089
 0.015082915005274597 0.013503228559561323 0.05684674416749103
 0.7821547676330514 0.02026459770722803 0.33969127275321215
 0.16821973108761273 0.05590547602170964 0.01203688491232332
 0.021419970842969198 0.12906588522226678 1.4302213806986945
 0.028792994164323005]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8408145344991381 1.2096762472738183 0.37954777989967337
 0.3983744359221413 0.37245998654913887 0.3693300769549208
 0.7702943582770023 0.5895009805408551 4.055367856728421 0.475686741493202
 0.38443003554945077 1.2110689031479147 0.3706187235196139
 0.7275598820787896 0.44268145206083387 0.6905360681015624]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.05963670393754627 0.12393178347779431 0.05773203764151857
 0.040154371871657865 0.11797781414973023 0.08576078220488911
 0.05574293183604402 0.1483999918953962 0.32456521619114953
 0.05891727742665821 0.71880299649735 0.522924868818989
 0.19065441376558093 0.13337692386167666 0.03773646804224839
 0.08180065004811471]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.4421883895669687 -0.2640957610051397 -1.0416909998924797
 -0.2759440043188252 -0.26461401129550904 -0.8217186497525488
 -0.4313636302218869 -0.4147557403973054 -0.5675901294768024
 -0.6301742855533565 -0.2753762465583113 -6.2683005655536865
 -0.5301055213937851 -3.507997215379696 -0.2912579731590081
 -0.26795828232246643]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6763838215740762 -0.24174727646340938 -0.2766842964092375
 -0.5619634550269395 -0.23270067925948365 -0.6675827923691185
 -0.2756443652474926 -3.1196367366666165 -4.376904384657751
 -0.2692570272358388 -0.7726370554400113 -1.0165378539951482
 -0.2613903279209755 -0.6118931618136758 -0.8605361984585032
 -0.29370593188902816]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.5878660127743855 0.9474048135151458 0.6399376282019203
 0.5152393739882948 0.5562357648618861 0.4716753989011446
 4.469668617022994 0.5691542310760663 0.48369870765673334
 0.803458995972256 0.6747105667187698 0.4762721690897647
 0.6042542732626373 0.5192216992230886 0.5810486653026928
 0.9387008644357251]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11931215095839201 0.14304927832999254 0.1572524344258279
 0.21158485164625027 1.26202837520538 0.3361836073255026
 0.10128592974178731 0.2143846653007901 0.12052642025130786
 2.075178913851882 1.9286440103340816 1.3701283036071972
 0.21404028944755166 0.31694004792426056 0.13438067591523142
 0.10629135274755204]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0031967747094919638 -0.01090324663419565 0.011809489096024181
 -0.005579968319199623 0.13977823279502444 0.21713546100236697
 -0.007394479567310694 0.006906656997997417 0.001425338091970381
 0.0028180134566623827 0.013300803613833064 -0.011841836440293203
 -0.003022159645216258 0.009087445584739486 -0.0006968006198128747
 0.006641464389919087]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.06915038281956278 -0.34227596087391654 -0.09967705089567902
 -0.08153859098186696 -0.21290971349769888 -0.6647288653720504
 -0.18139090883319547 -0.15470712434033673 -0.12427673713707481
 -0.301943617875306 -0.0708683025093854 -0.2543578017367992
 -0.7618396046965561 -0.13371013525155187 -0.8030653570596487
 -0.38844111956455074]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5337481269288944 -0.6450822370284532 -1.3155793778084608
 -0.5554620897894956 -0.49519343213055184 -0.5204464579425779
 -0.640816200457722 -0.648667578538884 -0.5089981294542798
 -0.6486472379079287 -0.5538766939894916 -0.5185975111666137
 -0.9603610751745097 -0.5529035493350016 -1.0645590163709744
 -0.5253502625975841]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4522885347547965 0.4261885433903316 0.5486307301390927
 0.19924118790234643 0.6971984785305677 0.5112030814849697
 0.3998206070385181 0.39189038892420486 0.30031145840818196
 0.21723517061632552 0.19502234100427746 0.2392829109939324
 0.7662372191069973 0.29947758963009313 0.41147700909276147
 0.3701112721233915]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.010478653893160494 0.0245321918184084 0.032840807603935256
 0.02923468771109203 0.018551311193162664 0.06316732107251936
 0.02502711793492545 0.0370679488539975 0.0532144202506782
 0.04907798814060254 0.04161979381367609 0.07038436902234865
 0.025419892392584652 0.020467393027289952 0.060701492833495616
 0.04003068661765614]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.10782699565927982 0.15997189401152806 0.08738977859908312
 0.1336213705225584 0.04406163728524251 0.050050996827736144
 0.15218210946343397 0.13565505259503619 0.10754647434638294
 0.24781299796829148 0.44701325159755173 0.12458047429460997
 0.10607220570444306 0.12210716044500894 0.4893768814245487
 0.06033178161606107]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21876326525938478 0.00833237901507658 -0.008004500343772331
 -0.007439211833513652 -0.005506236388696805 0.021658020938640558
 -0.012415232067980113 -0.028946691017001355 0.018906200900394944
 -0.01907516506124929 0.15170685064415135 0.07090518041951595
 -0.04354653630071845 -0.01668655388512435 -0.026184227374281235
 -0.024629107567404555]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3403326587595163 0.18466496399924753 0.5426425834102508
 0.4569995326977581 0.23486080835641676 1.085760660198036
 0.39601669509048476 0.26063579210850873 0.2540745851462303
 0.2722058080886401 0.18711712509672648 0.3203196590326841
 0.15807994117469282 0.6656341692960165 0.6946985200547939
 0.19931235928462473]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.16332441790755184 -0.9379019171791075 -0.8814532753284093
 -0.24661012835809437 -0.9542642095250016 -0.15607612296189957
 -0.4416647871314427 -0.14412832531324335 -0.3803606946893183
 -2.106671713625027 -1.012578373037822 -0.34588568413894255
 -0.15318026116590824 -0.3697431999336457 -0.17697897398838183
 -0.15469367685206412]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.08746657303097854 -0.06298599305496601 -0.1261953696004957
 -0.10611388482632739 -0.10690166374589272 -0.4715754071290691
 -0.2752989626336384 -0.12302073898486213 -0.16832618882145134
 -0.07120716838804886 -0.07109083519263616 -2.3578560724572926
 -0.10046238457059282 -0.564155623133392 -0.12568940054141042
 -0.09863295130842903]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3539663762839052 -0.17049337413461269 -0.3811073686307669
 -0.17965072735780047 -0.18351457107669683 -0.17106818967347787
 -0.15201941013552048 -0.18876653709952945 -0.19679174494911067
 -0.1625652878641546 -0.14911023554885522 -0.34178418159845136
 -0.2704894535227292 -0.16202936806361248 -0.16198896515290395
 -0.23675323830697717]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.655098243923799 -0.26290916475485665 -0.4721594767766251
 -0.42874342068958016 -0.6120102647920311 -0.22931710627650764
 -0.5877446311135306 -0.23561328682124574 -0.42059669827352025
 -0.7504585103551501 -0.2666537371691613 -0.2624353720339648
 -0.849507828855612 -0.3753265796053635 -0.2889642893803204
 -0.6784381672010631]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8668462561118087 0.6446609681594805 0.012107236946951075
 0.015352154657126374 0.013981060351866121 0.05871804614687254
 0.799351194289838 0.021346058293578732 0.36954688998155816
 0.1705106779942105 0.04941051870063295 0.01210953266811748
 0.022095796245625483 0.16498458706050353 1.3794201157938875
 0.028701553936700694]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2357121274280671 0.37125997956929013 0.018384772389752158
 0.04298133650608863 0.01511348378445642 0.019603738634698054
 0.03713052923195727 0.013872866724045856 0.06394107457651
 0.016560266400174224 0.014247622787586744 0.022498048850598737
 10.74353180790433 0.04179851336292348 0.020286645513614438
 0.02265167191643843]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.05872196987592936 0.12130956949258351 0.059215679878217936
 0.03986491575619321 0.11579812395660642 0.08131816715484955
 0.05614794388114256 0.14545894489040645 0.3369566948975511
 0.06100180270225409 0.7103691788712625 0.5297747475212089
 0.18841686489585857 0.13619845365465805 0.03805074000410305
 0.07951143423352022]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8408135458674145 1.2096751926852098 0.3795464961392025
 0.39837319438843605 0.3724587278958856 0.369328784247406
 0.7702931305732168 0.589499860492107 4.055384555502941 0.4756854637366182
 0.3844287252940233 1.2110690767260046 0.3706174794349327
 0.7275586575774163 0.44268005125936666 0.6905351207762965]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6737803291457253 -0.23561598193215794 -0.26941990455673903
 -0.5430804287121854 -0.22703863989921017 -0.6270285295844313
 -0.2693742386534427 -2.8961153233295844 -4.652996893946255
 -0.26025771750719184 -0.7808690835893197 -1.0718540392133775
 -0.25721718900523743 -0.6015690434965715 -0.8665137020361651
 -0.2824743198197115]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.4421787169048157 -0.26409328271914184 -1.041688058024869
 -0.27594144304326007 -0.2646115295510902 -0.8217125286740551
 -0.43136012931062834 -0.4147523463822839 -0.5675860916406157
 -0.6301694054234777 -0.27537371935453847 -6.268339841912979
 -0.5301018264918677 -3.5080113755256526 -0.29125534931421687
 -0.26795576157428463]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12280000541216955 0.14707392988625131 0.1633606067393675
 0.206441331255692 1.192330971406438 0.3821878726748737
 0.10334323430329098 0.22048577501021152 0.11986805421956993
 1.9725521708759963 2.0707351625287864 1.3559354405939064
 0.21463453881049496 0.2885873293447534 0.14171756193100196
 0.10915732202018172]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.5878644766516874 0.9474040907728367 0.6399358790658395
 0.5152377545884855 0.5562341489782158 0.4716738232782346
 4.469691470615115 0.5691525363918877 0.48369713000728315
 0.8034578974609276 0.674708825140498 0.47627058042278364
 0.6042525638520564 0.5192200528767027 0.5810470178253002
 0.9386995340756531]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.06790292421594217 -0.3357040870460583 -0.09871529963586374
 -0.07932782580469963 -0.20156171212060864 -0.6651505975858216
 -0.17760908574759698 -0.1528306680203257 -0.12063767914454455
 -0.305736243837615 -0.06851789069319485 -0.2510241784654468
 -0.7890639046565907 -0.1319882426899269 -0.8458618976484444
 -0.35324903613249936]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.003196819792788864 -0.010903290044551216 0.01180943974198885
 -0.0055800737174922736 0.13977853025612247 0.2171358624074124
 -0.007394528365043029 0.006906610722468005 0.0014253009397595358
 0.0028179739784233147 0.013300748045237946 -0.011841898179380559
 -0.0030221959601683087 0.009087397867752306 -0.0006968364396336101
 0.00664141763291017]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.5045918341753871 0.42188933895049974 0.5312556477045496
 0.1983441940133047 0.7050909495972016 0.5110461257487295
 0.39656083839353456 0.39530953824285064 0.2950762912509886
 0.2129278417837903 0.19894116760062777 0.24071510468552101
 0.7684718840513017 0.29152881813426623 0.39466646739611216
 0.35920048141212313]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5337476273103302 -0.6450819380540433 -1.3155825760472097
 -0.555461757537221 -0.49519291921567105 -0.520445959352321
 -0.6408158610782809 -0.6486673577209641 -0.508997568664017
 -0.6486471103289035 -0.5538763616111712 -0.518597083437738
 -0.9603615318496697 -0.5529030359672796 -1.0645605508755533
 -0.5253497375710505]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11194257488624516 0.15056955020290883 0.08446570429704563
 0.14229096756838738 0.043695133270785703 0.04928187238614655
 0.15732366301682868 0.1373056497125904 0.10484996038973093
 0.24446541249903983 0.4468203199620834 0.126773114654364
 0.10459547999776879 0.1258191016541733 0.4857303660657013
 0.05967219179699665]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.010478757036416805 0.024532180678160535 0.03284078402516658
 0.02923466571701363 0.01855131578649484 0.06316743674856894
 0.025027132464087515 0.037067932384034497 0.053214408114092754
 0.049077985611307946 0.041619786461310024 0.07038443287024002
 0.02541990549717721 0.02046738868034087 0.06070150199182328
 0.04003066839980992]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3413902068299055 0.18126862412385947 0.5320470080540206
 0.46434485394289043 0.24273097194179016 1.1331272600131808
 0.4019349636057227 0.2692949087063655 0.2631611607677974
 0.2547709015306434 0.17914133415306766 0.3325947935194197
 0.15612582030398828 0.621961535608002 0.6759019143938184
 0.20355960430015654]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21876334145314769 0.00833231283199249 -0.008004508745700748
 -0.00743921360870068 -0.005506244726298688 0.021657907896601335
 -0.012415219508175403 -0.02894661522843153 0.018906099907685468
 -0.01907512049096791 0.1517066662662388 0.07090521247380498
 -0.043546450185682345 -0.016686521253202646 -0.02618416880423897
 -0.024629042940649888]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0945932901092378 -0.06952269863733312 -0.13594907924627522
 -0.11782184749460774 -0.11804744777968443 -0.5687201347565551
 -0.30662258960362465 -0.13541050493090337 -0.17240039805467244
 -0.07657833304213094 -0.07791371770033878 -2.040866581799135
 -0.11155771104422973 -0.6380503885389002 -0.14248024384657915
 -0.11044425083527488]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.16332519366737513 -0.9379037009073168 -0.8814544709884067
 -0.2466106316692424 -0.9542658992130323 -0.15607679994497542
 -0.4416653712029761 -0.14412900687799535 -0.3803615351795959
 -2.1066616743678312 -1.0125763194827315 -0.3458862137879239
 -0.15318095597267745 -0.36974385201346627 -0.17697968985330534
 -0.15469444600700782]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6507770922562268 -0.2599497649622098 -0.4665023052327058
 -0.4376636149954187 -0.6109181701134454 -0.22510230703534945
 -0.5533445697759342 -0.22917874844962421 -0.42956392626944284
 -0.7925963143434496 -0.2603602876666671 -0.2598064197991587
 -0.8634117488624578 -0.38427794679604493 -0.2795636552616333
 -0.672959906202564]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.35396587230916937 -0.1704935029608619 -0.38110658161535044
 -0.1796508549497781 -0.18351469677465096 -0.17106830372680165
 -0.15201958002187968 -0.18876665589902758 -0.19679188691037375
 -0.16256544381639126 -0.14911040147199667 -0.3417839439657317
 -0.27048943031868755 -0.16202952016874475 -0.16198909243192391
 -0.23675326205773486]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9461451760093187 0.6675724270727161 0.013547385620900944
 0.016864347814736665 0.015341993753889942 0.06225562272078379
 0.7487604858475495 0.022490593891862313 0.37390831382680023
 0.18011996978968384 0.055072506357965643 0.01353553199377213
 0.02440408207988588 0.14431817240772205 1.3140361203116173
 0.03076991783955329]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.23571242862653494 0.3712633282568115 0.01838511489808784
 0.04298197112091798 0.015113755023089965 0.019604091386605644
 0.03713115422214752 0.013873118942014984 0.06394173901124875
 0.01656054373220577 0.014247874676504613 0.02249840575509184
 10.743522794914487 0.041799143450043694 0.020286979020317657
 0.02265204254441854]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.060852725409652794 0.1250306231985192 0.059857583814528895
 0.04140144740220511 0.11900662354272737 0.08361209349762684
 0.05798131442035599 0.14861402431944237 0.3303097163141139
 0.061283219578644396 0.7118523579628536 0.5162904672052837
 0.18775237636014008 0.13353490615667504 0.03925605082218393
 0.08147970166139237]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8408145344344669 1.2096762472042388 0.37954777983100174
 0.39837443585044463 0.3724599864814133 0.3693300768868407
 0.7702943581809114 0.5895009804638071 4.055367857798034
 0.47568674141320266 0.38443003547946375 1.2110689031244575
 0.37061872345100655 0.7275598819897351 0.44268145198264414
 0.6905360680248086]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6689772034347622 -0.24994864632991112 -0.2844912107973832
 -0.5779547790828798 -0.2386850195702081 -0.6639696304332754
 -0.28174242762332796 -2.9070463006717713 -4.4515899441766695
 -0.27237995014533783 -0.8019856763203997 -1.0112725662378161
 -0.27264632233515973 -0.6410625653785801 -0.8921532731236772
 -0.29929984876614596]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.4421883889323854 -0.26409576085846465 -1.041690999634442
 -0.2759440041666841 -0.26461401114847866 -0.821718649387916
 -0.4313636299983085 -0.41475574018066264 -0.5675901292101372
 -0.6301742852579779 -0.2753762464065926 -6.268300568063778
 -0.5301055211430555 -3.507997216286596 -0.291257972998561
 -0.2679582821737376]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12977708155095635 0.1574864174463391 0.17045430337563733
 0.2221542681211986 1.1778973903414778 0.3680355590530613
 0.11118202658918595 0.22958941091116675 0.12888580455233484
 2.0217380893919192 1.937703139691049 1.3503262197127817
 0.22980559643713547 0.312652965329778 0.14837020564346942
 0.11515282886549671]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.5878660126767927 0.9474048134291837 0.6399376280904076
 0.5152393738927591 0.556235764764546 0.47167539880787795
 4.469668618528602 0.5691542309699046 0.48369870756471267
 0.8034589958778412 0.6747105666024396 0.4762721689949331
 0.6042542731524382 0.5192216991258265 0.5810486651962393
 0.9387008643290015]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0703774960704993 -0.33361646786696825 -0.1019006816928523
 -0.08301637452091039 -0.20817414060033723 -0.6575586930000549
 -0.18526588480297657 -0.15382341338757774 -0.12486517076064732
 -0.3067879304261872 -0.07165851137985337 -0.2628540927857594
 -0.7557995870651072 -0.13302540795610118 -0.831757450931129
 -0.36439997019821824]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0031967747123280658 -0.010903246636657787 0.011809489092335174
 -0.005579968325394168 0.1397782328080337 0.21713546103472012
 -0.00739447957024592 0.006906656994972244 0.0014253380895632626
 0.0028180134540780593 0.013300803609225819 -0.011841836443488725
 -0.003022159647521303 0.009087445581240774 -0.0006968006221098094
 0.00664146438659369]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.46063964754439685 0.4281232434463738 0.5412314879057711
 0.2003027860651771 0.7009228364515834 0.5212244320609687
 0.3970005596995783 0.3993319537900373 0.3006488922666942
 0.21486297719211975 0.1968937005084973 0.241666639564977
 0.7550737239382965 0.29693406300848424 0.4046490034008855
 0.3661105762969472]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5337481269051734 -0.645082237012838 -1.3155793779800427
 -0.5554620897690818 -0.49519343210765343 -0.5204464579200219
 -0.6408162004407646 -0.6486675785280298 -0.508998129427793
 -0.6486472378844613 -0.5538766939683446 -0.5185975111441573
 -0.9603610751989148 -0.5529035493090744 -1.0645590164536662
 -0.5253502625714064]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11281505973337033 0.15503813150150667 0.08711833460543303
 0.13879519668340667 0.04616505079677194 0.052567719346759904
 0.1504904477758346 0.139036721344935 0.10682459767524552
 0.25471393665445186 0.42551976163859767 0.12707947509368678
 0.10727153008976714 0.12614898760589568 0.4844065766848301
 0.06160953513030247]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.010478653897099621 0.024532191817984106 0.03284080760285524
 0.029234687710095814 0.018551311193931948 0.0631673210773033
 0.025027117935952522 0.037067948853267925 0.053214420249958067
 0.049077988140298505 0.04161979381329142 0.07038436902457441
 0.025419892393378215 0.020467393027433625 0.060701492833348414
 0.04003068661663793]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.339307398427488 0.18901582024135952 0.5280830696647943
 0.4617330780135875 0.24175883163125328 1.0951635001358195
 0.40672614896857184 0.2687585296914882 0.2636991870496686
 0.2596952294382629 0.1855088836332784 0.3291163616411868
 0.16187717556037623 0.6436476926152664 0.6741698434729239
 0.20509511160930338]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.218763265248433 0.008332379010798384 -0.008004500343117862
 -0.007439211832381842 -0.005506236388295761 0.021658020930530125
 -0.012415232065342199 -0.028946691009623177 0.018906200893066934
 -0.019075165056308033 0.15170685064106876 0.070905180410382
 -0.0435465362917579 -0.01668655388116042 -0.026184227367915088
 -0.024629107560954953]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09611447585387134 -0.07061040306771567 -0.13586262016903894
 -0.11810234545316656 -0.1198960416186432 -0.5349158514134611
 -0.3101799627172585 -0.13793872854755818 -0.1764303685217661
 -0.07822351799005389 -0.07895631883079858 -2.059692319028167
 -0.11236615735144567 -0.635755054201042 -0.1418351205152571
 -0.11009993214023917]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.15296824997753622 -0.9125279052773442 -0.8895735690386105
 -0.2419406845429721 -0.9223330371638754 -0.14699859784416958
 -0.43032178390477543 -0.1361407696116576 -0.36528314775341597
 -2.2236498972983942 -1.0453735836033395 -0.3451523104311714
 -0.1452933714254041 -0.3542787590665486 -0.16785481869774851
 -0.14582527549889618]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6556999276422738 -0.26442833482957384 -0.46703958642517696
 -0.4347629109288806 -0.6209772911952135 -0.22976027069379587
 -0.5669634701155536 -0.23511513060133507 -0.4264959238115631
 -0.752779298539143 -0.26737685243105624 -0.2649402369745417
 -0.8532024871454226 -0.3815719555865995 -0.2852282327198984
 -0.6696348683823039]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3490450045395641 -0.17016225888640865 -0.39480944801381285
 -0.17876342533731787 -0.18259723479045917 -0.17118775358436447
 -0.1519253673118169 -0.1882904236869628 -0.19532894238230958
 -0.16163002860730177 -0.1487214492092169 -0.33840402359620125
 -0.26805047572675084 -0.16152265307031463 -0.16169670513742804
 -0.23996383551887454]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9230768737897898 0.6756944488086747 0.015292867782682702
 0.018711665154277943 0.017181270444584045 0.06667092332638029
 0.7427041319245967 0.024462554992839808 0.3732410334684137
 0.18472216857003393 0.05933741227191386 0.015278360075674959
 0.02723758513953083 0.14751898919791667 1.3046467569084668
 0.03336560548298165]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.27482598317604845 0.35035023875315907 0.01756432785852183
 0.04016717031736187 0.01419568634057797 0.018646161725165
 0.035621349258695235 0.013098178517547606 0.06462612396031467
 0.015452097894142425 0.013404433311641156 0.021133003753484956
 10.738173527626385 0.04132599124204909 0.01919531041712852
 0.021794901428305754]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06286277866312871 0.12973814648633084 0.06209921215732056
 0.04319570222390025 0.12320541058720763 0.08492287903703108
 0.0599609389047874 0.15112044428186377 0.333929347276601
 0.06359650732345548 0.698122107231149 0.4995329586120304
 0.185957207497096 0.1353268944083073 0.04103357502863502
 0.08351112194750064]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8232684953530333 1.1589660896907554 0.35825167136263053
 0.37870981313042335 0.35149297311357075 0.34733262076043786
 0.7738504611452772 0.5752835209888782 4.402524796242306
 0.46089855989734285 0.3612047670646291 1.159663148772817
 0.351522080620814 0.7123065982840072 0.42041004903966284
 0.6522624171298903]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6750928905215847 -0.2591527263806442 -0.29416246743493724
 -0.5928246230084654 -0.2457985102582858 -0.6730492704659637
 -0.2894517019978903 -2.858987953242394 -4.364393677162597
 -0.27984355980543546 -0.8177948946890647 -1.0012140442046134
 -0.2834313269501912 -0.6609872573014024 -0.910554639959413
 -0.30846582104442144]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.3975106624722842 -0.24246079546898958 -1.0076308250756632
 -0.2539061839259892 -0.24291320875224848 -0.769172064093504
 -0.4108227444881334 -0.3977283761335578 -0.5502467020525128
 -0.5942354575088469 -0.2542303166260835 -6.346610540428509
 -0.48967999890026176 -3.8210190433320266 -0.27083000100445875
 -0.24613448558470616]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13795349384075725 0.16750668472316352 0.17834125893182134
 0.23485074189613073 1.1576887568919711 0.37893263750155404
 0.11922385255199586 0.23954378698895054 0.1368467097689092
 1.9646346359950229 1.9358954469867706 1.3183925476811404
 0.23779170691782306 0.32254250227774783 0.15830171772678
 0.12276482633244742]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.5858018053140485 0.9680588491603774 0.6348842166869346
 0.511843480737423 0.5566997084961514 0.46730270297512966
 4.4391505619655325 0.568414066474266 0.4792351265263906
 0.8010590814549231 0.6733220752015434 0.4728050525500112
 0.6075934351744658 0.5144723697725501 0.5851757001109059
 0.9727295494028547]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07246707405575278 -0.33379639234413255 -0.10359768457148671
 -0.08556558042085045 -0.20900921799655967 -0.6570751029830513
 -0.19146009165881753 -0.15584047123598455 -0.1276218216472022
 -0.30880681955039496 -0.0737946796995123 -0.27467236897162317
 -0.7378045492846359 -0.13369800155402953 -0.8238285511550476
 -0.3558428663160981]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0034141681537380756 -0.011136014946765041 0.011635943968011972
 -0.006723940095310823 0.14249281098799227 0.2191549039967199
 -0.007594416415943699 0.00657958496949013 0.0011935756522956924
 0.0025690426046044057 0.013121215515039144 -0.012697019241792012
 -0.0032093865810034388 0.00882756256748296 -0.0009032540600289081
 0.006371198325962506]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4570490517283733 0.4304818472686933 0.5367420281928703
 0.20330830086712845 0.6996060054623857 0.5251985192572579
 0.39556095058299706 0.3997861002131001 0.3051153990497865
 0.21761607235038039 0.19950118720226648 0.2450764321767405
 0.7380701122096798 0.2973589297169779 0.4048394803112515
 0.37030610655089946]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5292515185037528 -0.6371016568254821 -1.36951407642841
 -0.5494738866836982 -0.48801421813095697 -0.5150030409059012
 -0.6306083616966893 -0.6497099749527656 -0.5002372208731022
 -0.6559494168562594 -0.5487618781359782 -0.5112941338925496
 -0.9600747284289319 -0.5455851240486955 -1.0805098568139713
 -0.5171998834442797]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11550306944380338 0.15442071322450468 0.08911234442388029
 0.1393512812579216 0.04868296722560095 0.0555732268119501
 0.15129664251861774 0.1427715268351059 0.10850763193763761
 0.24998039114188547 0.413325541892157 0.12781779712963243
 0.10926783861127905 0.128589736312038 0.4777201198758475
 0.0636802337189347]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.011336620344301135 0.02412895763972383 0.032497469279176204
 0.028861772172969112 0.018067283091038094 0.06545112709630899
 0.024943111152602223 0.03676488469846897 0.05278964755413263
 0.048815253491716115 0.041626390169671 0.07204150586390853
 0.02510104291987676 0.020020664061595195 0.061167831470709734
 0.039918448075615565]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.338065553084193 0.19509167429103325 0.5243356085167599
 0.46341852220249274 0.24505558893261717 1.0662381593148587
 0.4185206923147325 0.27214660765400644 0.27150277070006396
 0.2596447469366611 0.18966534633877827 0.33194565150705646
 0.16688831328313478 0.6331523315868219 0.6691046679923653
 0.2085796271390528]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.22789465231167622 0.007691990211955501 -0.008265705214034767
 -0.0074682198058896795 -0.005596146427094072 0.020693815644895877
 -0.012151921380816812 -0.028034176277746188 0.0182862134325676
 -0.018548809802364865 0.14269620992610282 0.0682795048969269
 -0.04192228688060818 -0.016475094253347408 -0.025336234260882814
 -0.023905356783917482]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09991341211041468 -0.07373497830636869 -0.13999202702522
 -0.12221921969145708 -0.12446575483752717 -0.5339049979831515
 -0.313384931245331 -0.14334236940950124 -0.18116177749944232
 -0.08160130673226644 -0.08239416401304839 -2.007370375594859
 -0.11620226323197218 -0.6374538744184378 -0.1461667510303531
 -0.11367101429013228]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.1582286056926791 -0.9232939975822739 -0.8559319977612204
 -0.24838913824654302 -0.9585394019358122 -0.15362732239011148
 -0.44002066709234683 -0.13863143691271307 -0.37633182085568795
 -2.1718599173791358 -1.0220440943223958 -0.33778715083036426
 -0.14765050588153283 -0.3707200841743275 -0.17393875925603902
 -0.14852086082267604]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6521864786008432 -0.26653296385449443 -0.4646457588422599
 -0.4403573207796809 -0.6199857634050269 -0.2328444752324626
 -0.5669038193334863 -0.2377456408095948 -0.4257693903352607
 -0.7387296366641984 -0.2703928160505542 -0.2677740204898904
 -0.8628276610450337 -0.3857278412452462 -0.28785615813371557
 -0.6556970332005833]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.37448846995163665 -0.16638557550974448 -0.39389698545658924
 -0.1755047904581596 -0.17935406383649316 -0.1670689732054042
 -0.14870944152275659 -0.18422398951505398 -0.19485461995456513
 -0.15911212081501572 -0.1457914423150462 -0.3503519661391313
 -0.27406272070648935 -0.15847957550925135 -0.1580621381872862
 -0.231752156316481]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.947938884314426 0.6661254913767489 0.01353073363915942
 0.01681765070956013 0.015305272987674378 0.06210868739368264
 0.7496333617004798 0.02243276053268309 0.3742214277750093
 0.1797526015778133 0.05506884401639097 0.013520348198487553
 0.02436581501213614 0.14458715197845276 1.3130383610179217
 0.030695255108132077]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21074817000802473 0.38885947063260357 0.01614395995788338
 0.04020727913760064 0.013389664543977496 0.01752475355798152
 0.0339207545730412 0.012248422506168803 0.059707671616894976
 0.015022660776479048 0.012785976859451917 0.02028624727294777
 10.782264260778803 0.03795236780887429 0.018352096688276892
 0.02016072886151964]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.060570662051922686 0.12501935183146265 0.05958729712592352
 0.0411753885377009 0.11905333352665821 0.08338138331523391
 0.05771877753681255 0.1489973946478126 0.3294966012741512
 0.06100779944257997 0.7142209976534597 0.5167717823564548
 0.18780962324720632 0.13313340321121672 0.03901731667768122
 0.08115411923006809]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8369504184823039 1.244418845522207 0.3727279421061976
 0.39327074755765046 0.3657226454604182 0.36284300050179646
 0.7566476955032055 0.5837352758859413 3.993501858800059
 0.4694167757971466 0.37972019316442596 1.2730023350725261
 0.36366063318473785 0.7304651947686013 0.4382723003730146
 0.7235922004162451]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6690334405132731 -0.25017793363930807 -0.28471626473377454
 -0.5779986493328998 -0.23888454208917825 -0.6640430155489259
 -0.2819278807612938 -2.9063348205999846 -4.450500952889929
 -0.2725676306481835 -0.8020875742544203 -1.0112271656068172
 -0.2728754360423921 -0.6410944195134616 -0.8922352828709393
 -0.29950035538252284]
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node11848968-3:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.366600922505333 -0.2419228481397872 -1.0531028064854238
 -0.2528242537716559 -0.24256792702038935 -0.7691506266422085
 -0.40017778383725483 -0.381682037087416 -0.5222179471089001
 -0.5805635620817572 -0.2522086154382682 -6.788343831181536
 -0.5268661980256275 -3.403185050609201 -0.26848432424094704
 -0.24523267167206927]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12938889826813288 0.15737955226948624 0.17025436045659223
 0.2218490672528466 1.1770441569195318 0.3676822612218335
 0.11082503873912686 0.2299034754376127 0.1285538574551083
 2.025631141047194 1.9379148276109022 1.3502471942998937
 0.22928025639920552 0.3120324652893231 0.14842623169792676
 0.11479852264826966]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.0590681093717011 -0.30827651490358393 0.08037767705062818
 -0.5212135765794184 -0.43732662125239746 -0.8260174843468258
 -0.0984637793635928 -0.8976588825064479 -0.3429758247391699
 -0.5432854775735473 -0.11370622406014248 -0.22873405658582607
 -0.8823467308258122 -0.4429019384108259 -0.9543760554124644
 -1.0495421622547325]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.5638698562985989 0.9307283560073032 0.6166796896019929
 0.4866849661004568 0.5255368128282643 0.4465876704976879
 4.864727950628467 0.5403918555200513 0.45645279731299837
 0.799578733168078 0.6493847786968604 0.4509706961415947
 0.5726864888326911 0.49186249265793136 0.5502756376996437
 0.8921290000108869]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07063645505355984 -0.3330967965281197 -0.10207605956708445
 -0.08332608359501195 -0.20845971002880742 -0.65669699540095
 -0.18550103536407084 -0.1540108522333249 -0.12518370676863447
 -0.30621600118195436 -0.07194526884244248 -0.26290807307655045
 -0.7564907096081022 -0.13332478344881984 -0.8302315606792292
 -0.36477718206851767]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3226959202594571 -0.2565490533383024 -0.08709704232089836
 -0.24596723793915298 -0.24475376618138056 -0.26256142840911906
 -0.23324366764218915 -0.2272442826635843 -0.19565257290749052
 -0.22480084622971322 -0.24590054385828577 -0.10573309185301923
 -0.1204207250543212 -0.2406632691984704 -0.27234837000995965
 -0.17646721153376038]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.003479957754432066 -0.011349475362938594 0.011707681293577235
 -0.006145890839760396 0.1432142855887934 0.21681714990959025
 -0.007853371874034041 0.00680638227960346 0.001274173313502323
 0.0026586289646859484 0.013448316653613202 -0.012250268708773313
 -0.003218504941747846 0.009005568357699358 -0.0008979083378008461
 0.006530830551438821]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.46137766265562685 0.427765101306193 0.5405690712459441
 0.20003275466067355 0.7021589543862482 0.520944493407826
 0.39678055700672005 0.400233450841752 0.3002040755719732
 0.21479562386302065 0.19677757292231496 0.24133446986644713
 0.7543199807628451 0.2974868287544049 0.40522002475204405
 0.3656159011367545]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0408722858758666 -0.45858897487938666 0.40473907036391626
 1.3414491861398867 0.7585720084080843 0.5666875799191373
 0.1934390779869007 0.6415600657425439 0.9111400985729134
 1.0238717510612199 0.753793781312617 1.2088180593147142
 1.0949010633068388 0.37634254753032903 1.0672313441584025
 0.7747455407665467]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5274843390058042 -0.6441120981562857 -1.3223793295781887
 -0.5565850983256095 -0.48989598491194913 -0.5140689225335394
 -0.641447588516691 -0.6440112802890795 -0.5052567009149334
 -0.6509663159764206 -0.554854942370015 -0.5174549743892007
 -0.9690340808835339 -0.5501054700650538 -1.0785526516253707
 -0.522079199079748]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11262315285714675 0.15488923506077917 0.08696598269705225
 0.1390245433805573 0.04610788269268568 0.05254229431519172
 0.15021240801900904 0.13880614147532644 0.1067122650303022
 0.2548467767960383 0.4262169741440218 0.12703293294457677
 0.1070602134316075 0.12594348059064583 0.4851279266098273
 0.061488852316027576]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8922982049215276 0.6895482579290128 0.8201002586908115
 0.8151414100123493 0.8331678035382347 0.8773121817785309
 0.7695382388653313 0.9122045304490094 0.7389153624746935
 0.8474107667384702 0.9153070131011498 0.674601288301137
 0.8524986478288834 0.7498307012458366 0.8820814248007041
 1.0179919719207935]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.012449967909103361 0.02467177285468491 0.032599489578893644
 0.029132156010371547 0.018880686150385035 0.06416335323970114
 0.025365484071958374 0.03687181737600901 0.05338582976456714
 0.04921012651696348 0.041457691760812154 0.0704412663831869
 0.02599619168029453 0.020624224130113684 0.0607201099257465
 0.039788536858627044]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3393202933154193 0.18922870546191306 0.5281534744093991
 0.4618818154337249 0.24155403668411246 1.0953292180250296
 0.40630027806550695 0.26850083721404644 0.26344466073071093
 0.2597095208068937 0.18556616926698113 0.32924209874803373
 0.16208610318747171 0.6437909298836929 0.674220422656349
 0.2050272979053439]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.33080521869034546 -1.2137859927681882 -1.2163283800909634
 -1.1807220965634238 -1.213059354972946 -0.3706818894400184
 -1.2850952315187014 -1.3168217097365933 -0.547111943797798
 -0.4064018013079202 -1.167187534614772 -1.4303822066492242
 -1.348689508272604 -1.9081380162224053 -1.1572015019658959
 -1.2027190192359762]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21554544694974911 0.008061435143082312 -0.007724476217376191
 -0.0069454890841884435 -0.005127144416061314 0.0208834787860989
 -0.011893146199825243 -0.028007424132039944 0.018047778422072894
 -0.018270411543064784 0.1464033653682561 0.07529364046622317
 -0.0433835073431942 -0.015921906006096522 -0.02543810308176715
 -0.02368510177444634]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09623625748530032 -0.07074474710194345 -0.13595493209874138
 -0.11818368051840462 -0.11996477809017142 -0.5346049293554473
 -0.31019414927212796 -0.13799648679102283 -0.17654017367430797
 -0.07836243679675388 -0.07908635782507817 -2.059206652300357
 -0.11249407148293927 -0.6352672998129871 -0.1419145376052986
 -0.11022772720860162]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0267555583236263 0.7882515271669667 0.7274400177660515
 0.8570850433634942 0.9368370940403915 0.8685705615869326
 1.7401501311460024 0.6550378438735811 0.8758662587035216
 1.1460945723316331 0.6136422024737 0.8367337475428169 0.6267033115773838
 0.7994036662353701 0.6984970261259861 0.6414792197460499]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.1633251937279881 -0.937903700973346 -0.8814544710666423
 -0.24661063174052933 -0.9542658993588841 -0.15607680000338414
 -0.44166537126258937 -0.14412900693220973 -0.3803615352560836
 -2.106661673523902 -1.0125763193471489 -0.3458862138474724
 -0.15318095602915938 -0.3697438520841423 -0.1769796899159744
 -0.15469444606640453]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6556045144008475 -0.2647844390916705 -0.4671121617781056
 -0.43438055543777715 -0.6207501463119173 -0.2302055586350108
 -0.5669145160994132 -0.23550829540263277 -0.42647682734901204
 -0.7526100932194919 -0.26775002428005734 -0.2652855408312654
 -0.8523380262273303 -0.3813516643546828 -0.28560968975957796
 -0.6692947248435397]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.09005576687242757 0.12073492121444448 -0.006452819772654393
 0.060264780601757426 -0.1714717632360994 -0.19753873360862162
 0.100558278775775 0.023889775977287052 0.04663252919253157
 0.03424689903928666 0.008906156053832819 0.11473047339992797
 0.08590044564269075 -0.004959086993867934 0.05565971125447103
 0.005110304679827961]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3539658722746917 -0.1704935029670679 -0.3811065815903529
 -0.17965085495471178 -0.18351469677909713 -0.17106830373310097
 -0.1520195800327256 -0.18876665590334069 -0.19679188691672425
 -0.16256544382521163 -0.14911040148247254 -0.34178394394876155
 -0.27048943031732775 -0.1620295201774635 -0.16198909243891493
 -0.23675326205713945]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0482575422293956 0.6495139608331385 0.014379267166383835
 0.017978771373526544 0.016586644918944102 0.06589821733981088
 0.7112062551498403 0.024067295307337346 0.4162109046454505
 0.19059059745075707 0.05193224750718913 0.014385632051146322
 0.026536640482713696 0.16136251229371157 1.188683273024793
 0.03155288556461989]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6636468023408849 -0.4480217057514386 -0.9128968623520457
 -0.8252333701149192 -0.7368214906395162 -0.6998135919453947
 -0.4550506307423689 -0.7682406024923002 -0.5713116448699849
 -0.572390897835663 -0.8235291613593422 -0.8064694719004484
 -0.3522481480779474 -0.5647940447826184 -0.9637639905227263
 -0.5240565608938245]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.23571242889039792 0.371263329155483 0.018385114956431838
 0.04298197122786045 0.015113755068155824 0.019604091447094196
 0.03713115433931729 0.013873118984351972 0.06394173916096538
 0.0165605437782603 0.014247874719350231 0.022498405813706872
 10.743522792781183 0.04179914357285593 0.02028697907608416
 0.022652042609032568]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06092491302418974 0.1237926195957429 0.0609922979771498
 0.04175083339962202 0.11810507836473497 0.08030676995583956
 0.05939351536119943 0.14764196246684702 0.33510574971401075
 0.06270051842293088 0.7130193708222295 0.5172768853014651
 0.18451424446582684 0.13279700442538844 0.039924149347780775
 0.07986931902138686]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.18862945279215343 0.08040441484657329 -0.004032907091133662
 0.030240233271268808 0.14087916101786943 0.03821353285162565
 0.11394983209511973 -0.0029816912755165313 -0.06068790132460608
 -0.031815688982357516 0.005714041805220128 -0.04836109078131536
 0.10701927025719032 0.11538674413065905 -0.06628596636846466
 -0.02541266885107428]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8408145345342063 1.209676247308581 0.37954777993238176
 0.39837443595753513 0.3724599865816883 0.36933007698702197
 0.7702943583282761 0.589500980582943 4.05536785617912 0.4756867415331734
 0.38443003558242556 1.2110689031713073 0.37061872355270004
 0.7275598821243798 0.44268145209756915 0.690536068143169]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6554259582833787 -0.25409692831937974 -0.2879085988496647
 -0.587080071043818 -0.24125082661665886 -0.6542560430758185
 -0.2839240906365368 -2.704412536023831 -4.579684968543912
 -0.2714194762976267 -0.826609646247519 -1.0077617122581461
 -0.2796037294327927 -0.663805777227035 -0.9177512908738231
 -0.30021371069736313]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7289931200759091 -0.15195465511324344 0.044020365887058724
 0.04541005976025252 -0.0030432001786196566 -0.2594439361062722
 0.15495994620179426 0.33885541620526094 -0.22448616855233622
 0.22004924095515377 -0.1310386747220345 -0.15747293029164616
 0.3940096903116567 0.15623473316948716 0.3106142795726183
 0.29011738831420153]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.442188389872343 -0.2640957610762158 -1.041691000042273
 -0.27594400439267175 -0.26461401136676455 -0.8217186499254767
 -0.43136363033294695 -0.41475574050487124 -0.5675901296122191
 -0.6301742856963801 -0.27537624663252486 -6.268300564321066
 -0.5301055215195278 -3.5079972149208505 -0.29125797323733305
 -0.26795828239431113]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13830795264695217 0.17067729713935562 0.18302893567588213
 0.22855433047976167 1.0872406356854378 0.40354044985499593
 0.11915855912365725 0.2439966746644195 0.13520037778435995
 1.9842239776337918 1.947399989584978 1.3388503068690032
 0.24511438389132828 0.3027518047772914 0.1611891669985014
 0.12197646420327023]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.059068705804418 -0.3082758360914885 0.08037810453843645
 -0.5212138542836913 -0.43732790612623984 -0.8260181604443175
 -0.09846219928528631 -0.8976595622886423 -0.3429751267012776
 -0.5432849852319014 -0.11370605295938963 -0.22873315322050808
 -0.8823474566569126 -0.44290142649036296 -0.9543767206435786
 -1.0495427194462819]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.5878660128251115 0.9474048135706326 0.6399376282579867
 0.5152393740357817 0.5562357649110867 0.4716753989465324
 4.4696686162409245 0.5691542311290582 0.48369870770211837
 0.8034589960277524 0.6747105667786764 0.47627216913570886
 0.6042542733184268 0.5192216992710148 0.5810486653565783
 0.9387008644961146]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07091496506744133 -0.32442020088831097 -0.10386050398268991
 -0.08372031233460464 -0.20269383917452372 -0.6474647524780164
 -0.18643058454038414 -0.1520513472581833 -0.12454134975717102
 -0.31185104557196247 -0.07168680288534221 -0.2669817331953588
 -0.7511815045160354 -0.13202746859513453 -0.8730988224307632
 -0.3419560407692573]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.32269589411847377 -0.25654907681825084 -0.08709695510775657
 -0.24596723824886943 -0.24475376788920988 -0.26256146617636067
 -0.23324368629075806 -0.22724429767390147 -0.1956525784950371
 -0.22480087405908936 -0.24590056617188208 -0.10573301219155282
 -0.12042067998845873 -0.24066328731583816 -0.27234839116709586
 -0.1764672576865696]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.003196774708058234 -0.010903246632960856 0.01180948909787783
 -0.005579968316291392 0.13977823279005455 0.21713546098478792
 -0.007394479565838476 0.006906656999470613 0.0014253380931804728
 0.0028180134579541024 0.013300803616172936 -0.011841836438753684
 -0.00302215964403241 0.009087445586510916 -0.000696800618647549
 0.006641464391590311]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4730624707911004 0.42924410378248745 0.53541855304786
 0.19957911838310494 0.7071895730241016 0.5316426339291047
 0.39477529428983943 0.40698542247931757 0.29908223659172517
 0.21126721019392358 0.19749290475003115 0.24244162204675584
 0.7500403751161429 0.29281546983469114 0.3958546342864646
 0.35872490059413775]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0408716649151037 -0.45859094294308184 0.40473855541820536
 1.3414495697196471 0.7585719901665605 0.566687584259697
 0.19343878810618242 0.6415598691567115 0.9111407926032867
 1.0238720848304295 0.7537938486709992 1.2088185184963338
 1.0949033864469433 0.37634163586827823 1.0672317725503815
 0.7747453673148519]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5337481269388422 -0.6450822370359733 -1.3155793777326452
 -0.5554620897997083 -0.49519343214028844 -0.5204464579521397
 -0.6408162004653836 -0.6486675785436108 -0.5089981294649363
 -0.648647237920412 -0.5538766940000167 -0.5185975111770528
 -0.9603610751627618 -0.5529035493456522 -1.0645590163335314
 -0.5253502626084691]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11718140626827883 0.15065501485081262 0.08574161267028792
 0.14463954177273614 0.04740136056117107 0.05407382310638449
 0.1471826058169879 0.14057340400904575 0.10444404363876247
 0.26490246970836373 0.4091056415874646 0.12867297097659272
 0.10793015881503797 0.12920667769175323 0.4817903298305709
 0.062100001056546596]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8922982347101306 0.689547999762265 0.8201003338763486
 0.8151415077732184 0.8331678740093499 0.8773122432006416
 0.7695381550501527 0.9122045828553532 0.7389150684358741
 0.8474108325885781 0.9153070725441774 0.67460109875426 0.8524987383278693
 0.749830738048524 0.8820814759576713 1.0179921067020623]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3376616964281848 0.19088381141728966 0.513473141611729
 0.46693829494669487 0.2482721566393882 1.1144489216330546
 0.41424536387358396 0.2768978445090766 0.2716069533690498
 0.24674220570015407 0.18151232790895394 0.33731558153272156
 0.1637621163008525 0.6226758296355789 0.6569014186242289
 0.21001819766408686]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.010478653891575533 0.024532191818600543 0.03284080760431742
 0.029234687711454137 0.018551311192852367 0.06316732107059553
 0.02502711793452108 0.03706794885426237 0.05321442025092591
 0.04907798814074384 0.04161979381378364 0.07038436902154083
 0.02541989239231951 0.020467393027251514 0.06070149283358667
 0.040030686618031955]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3308042734095135 -1.2137863024467628 -1.2163298158191034
 -1.1807224824842335 -1.2130596679446122 -0.37068075508275883
 -1.2850953107569518 -1.3168216868307778 -0.5471105259446428
 -0.40640023610598597 -1.1671879447507783 -1.4303823416647181
 -1.348689866194137 -1.9081389245499283 -1.157201932504805
 -1.2027193393580664]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10291186086818925 -0.0772570240712681 -0.14278805128482538
 -0.12877768065679063 -0.13164573092460496 -0.6078767598100849
 -0.3475619281616481 -0.15132119362343852 -0.18014493649252636
 -0.08366568256784432 -0.08547653384061578 -1.7609621688747068
 -0.12325231578315171 -0.7153471079221045 -0.15753221975918638
 -0.12045802277849763]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21876326526994 0.008332379017334697 -0.008004500344208486
 -0.007439211834111694 -0.005506236388916293 0.021658020943050978
 -0.012415232069388504 -0.0289466910209922 0.018906200904388024
 -0.019075165063838096 0.15170685063892309 0.07090518042689957
 -0.04354653630583198 -0.016686553887245235 -0.026184227377748778
 -0.024629107570832434]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0267557244772967 0.7882511775648382 0.7274399400390662
 0.8570850833329434 0.936837200855439 0.8685705537931082
 1.7401511563126346 0.6550376332369335 0.8758662879628315
 1.1460948266586528 0.6136419966270077 0.8367336877804591
 0.6267030878446973 0.7994036534155468 0.6984968415308411
 0.6414789305712101]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6572196895757065 -0.265177371856856 -0.4616352878304235
 -0.4388364263809944 -0.6318595017686716 -0.2284793056163507
 -0.5429521189218599 -0.23287927660102822 -0.4339713239578104
 -0.7635824004809817 -0.2664587856840499 -0.26624826247466393
 -0.8532070348404662 -0.3866757616294754 -0.2792235749896466
 -0.6675706554133466]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.1676037871673109 -0.9489008192986828 -0.8864788733113936
 -0.24752360030960469 -0.962079134816036 -0.15927554017987525
 -0.4448501271489027 -0.14782708995156665 -0.38547201825659455
 -2.0575604644304564 -1.0002759645259276 -0.3480733353874279
 -0.15687187637698066 -0.37351925976348094 -0.180339086707641
 -0.15886478350397765]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.09005581407462415 0.12073496297126712 -0.006452771931493414
 0.06026478550905198 -0.17147200995550502 -0.19753897753939295
 0.10055832275402894 0.02388982691762999 0.04663255449558267
 0.0342469260755986 0.008906196052129407 0.114730537605296
 0.08590047391153048 -0.004959055089820663 0.055659724173292444
 0.005110329069197509]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0952095127552894 0.6802183074434903 0.014936693940410778
 0.0183533780300294 0.016686131594776447 0.06584675102828257
 0.6819177179810723 0.023569836838308808 0.38892959979932096
 0.19289577876803976 0.058764710121899814 0.014914054863220842
 0.026886796035232603 0.12597649881006806 1.1916434557606113
 0.0323934235687044]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3501061462958418 -0.171534167474284 -0.374524569471028
 -0.18085891165210627 -0.18474521903613444 -0.1719438373120486
 -0.15282309613520406 -0.19000726973897972 -0.19771642151815802
 -0.16363574927103555 -0.14996504302724695 -0.3406661751048334
 -0.27038158034202503 -0.1629855593625962 -0.16292763857282896
 -0.23727764508475332]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6636468290103039 -0.44802139065183594 -0.9128973891217667
 -0.8252335158252132 -0.7368215437791548 -0.699813654085653
 -0.4550503354190951 -0.7682407364563073 -0.5713115304059784
 -0.5723907035493946 -0.8235293040237988 -0.8064695732895454
 -0.3522477577753416 -0.5647939619795969 -0.963764353742299
 -0.5240563975061389]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.062497721852077984 0.1268169560791161 0.06015874494102623
 0.04255775185269622 0.1204752656378605 0.08441110664778562
 0.05983622661530762 0.1514890916946816 0.3225660818308698
 0.061207983036690665 0.720189376175944 0.5074298841230165
 0.18705951207462107 0.1291140719970846 0.04016309195645656
 0.08214236515111037]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.23346168486265742 0.37444736759865327 0.019389958443029303
 0.04476233631067697 0.0159587449396124 0.020597242611880253
 0.03869372078338618 0.014645134871171377 0.0651206455944106
 0.017401666289507758 0.014989200373283204 0.023627214758390476
 10.728262949350444 0.04323736666063716 0.021254626335731774
 0.023724625797058443]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1886295883970009 0.08040442660997191 -0.004032950232217392
 0.03024021850709891 0.14087923791104914 0.038213536018608774
 0.11394988496216978 -0.0029817228711102074 -0.06068793174166831
 -0.03181573352383696 0.005714025681228651 -0.04836117162563439
 0.10701932003689243 0.11538677461756533 -0.06628601617992663
 -0.025412718173980366]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6543447327327415 -0.26447786629541126 -0.299238422190247
 -0.6167710288972119 -0.2500760687698205 -0.6993376197331678
 -0.2936093021518555 -2.852406623862866 -4.310155630654054
 -0.28259405773460594 -0.8281318927450096 -0.9466195111890581
 -0.28887830745477405 -0.689059174947922 -0.9240356761916128
 -0.315469448876947]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.846061240558762 1.2145740760282777 0.3868709890518653
 0.4048300694473629 0.37963883876659593 0.37674010827371984
 0.7733110684535346 0.5945477645358394 3.9788198423622116
 0.4812546362589089 0.3917293614062868 1.2088338461740558
 0.3773577001677739 0.7311349664995469 0.4497955861729878
 0.6924479684387477]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7289941816118516 -0.15195484780109236 0.04402037064372554
 0.045410146836159605 -0.0030432138372729 -0.25944419627474274
 0.15496022137635151 0.3388557521466371 -0.2244864365421282
 0.22004949486833097 -0.13103909982921808 -0.15747296885291362
 0.39401014560327613 0.15623489240623178 0.31061467648400687
 0.290117679721922]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13776753844143533 0.171006137557407 0.18004810259910656
 0.23815077440266819 1.1303229723390795 0.3611895823296704
 0.12034859387640975 0.24166076627861197 0.1387880545119777
 2.0778021418372816 1.8030733741283798 1.3485664157929416
 0.250855346185098 0.33292700283340504 0.15704697588194835
 0.121657528017566]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.4769490058784283 -0.2762231236084796 -1.0476291557378294
 -0.28847322330525166 -0.27672752671994755 -0.8514173910938962
 -0.4460349565982663 -0.42893778130020277 -0.5849710444718325
 -0.6541522762749578 -0.28763352802704006 -6.104478237699247
 -0.5426370961255004 -3.4452959120938176 -0.30324783334454997
 -0.28032331356852774]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.059068109412056 -0.3082765148608321 0.08037767707982443
 -0.5212135765964987 -0.4373266213215672 -0.8260174843852865
 -0.09846377927736663 -0.897658882546534 -0.34297582469688
 -0.5432854775340319 -0.11370622404313585 -0.22873405654104384
 -0.8823467308674453 -0.4429019383864554 -0.9543760554543455
 -1.0495421622922052]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.5946906102778464 0.9470239963510771 0.6477302871655364
 0.5235111791929467 0.5641908073446336 0.47917195400769946
 4.370977971135218 0.5770847651025103 0.49176767319192627
 0.805465331139441 0.6822477750470216 0.4836413707677354
 0.6120113913168862 0.5275682133711573 0.5882853433066378
 0.9431791132852324]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07269640978499475 -0.32723469205389355 -0.10571583810736175
 -0.08661693621984838 -0.21331210389987698 -0.644793570227213
 -0.19213096767796112 -0.15317187673968213 -0.1284065039671595
 -0.30918932431021035 -0.07452386320073856 -0.2732937252721307
 -0.7243891231466788 -0.13331778353121215 -0.8337520202863131
 -0.37233653501990505]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3226959202618072 -0.2565490533395787 -0.08709704231407382
 -0.2459672379408024 -0.24475376618307268 -0.26256142841123153
 -0.23324366764305504 -0.22724428266515406 -0.19565257290697136
 -0.22480084623000107 -0.2459005438590487 -0.10573309184726581
 -0.12042072505077624 -0.24066326920018977 -0.2723483700116103
 -0.17646721153446554]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.003122646066206192 -0.010836880890019183 0.011931801242307976
 -0.005232488637684607 0.1383413033515893 0.21695638896621702
 -0.007306825651331471 0.007048873058798883 0.0015074277438902523
 0.0029188982349986556 0.013327269045389747 -0.011636002693422794
 -0.0029776473021103566 0.009215269932612204 -0.0006296323027782883
 0.006762531060766018]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4200968817160002 0.4347588021836319 0.5517297650946261
 0.20063711433996742 0.6998401110603418 0.5354374067220646
 0.39696730995772805 0.4071667466801811 0.3038713950517382
 0.21396104778859265 0.1935637688109191 0.2410895898217546
 0.7440263307951077 0.3014070108429748 0.41243433370835847
 0.3686289085668017]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0408722857735637 -0.45858897505309887 0.4047390703286175
 1.3414491861368942 0.7585720083961396 0.5666875799069252
 0.19343907795087606 0.6415600657198827 0.9111400985987383
 1.0238717510594535 0.7537937813003656 1.2088180593161835
 1.0949010637660248 0.37634254746230916 1.0672313441628452
 0.7747455407548084]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.536482351140483 -0.6474803006534523 -1.299775684297415
 -0.5565369832789574 -0.4981744328100785 -0.5233843796134269
 -0.6433948162555393 -0.6497191104587559 -0.5120914443180813
 -0.646440229244376 -0.5547734231884457 -0.5205347442024637
 -0.9589705831129626 -0.5555412580989187 -1.0567808758259183
 -0.5282083601221487]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11408433112226485 0.1575009556089512 0.08847897387257317
 0.1371108082629406 0.0483514856835645 0.05567346751757011
 0.1409927992500354 0.14025402069085108 0.10761123201922174
 0.2734798574939391 0.40133335165317247 0.1277137750292513
 0.10956743539802642 0.1253029675951168 0.48505110136037033
 0.06309449980294726]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8922982049228156 0.6895482579167735 0.8201002586948446
 0.8151414100164208 0.8331678035425937 0.8773121817838088
 0.769538238860968 0.9122045304531802 0.7389153624470743 0.847410766741792
 0.9153070131072271 0.6746012882902982 0.8524986478345169
 0.7498307012460227 0.8820814248050726 1.0179919719330677]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.009977677422020784 0.02454005748807276 0.03301287642666423
 0.029351322959822065 0.018465722466163636 0.06237018109664394
 0.024877003579268354 0.037224753188635606 0.053414642197276076
 0.04919284720546097 0.04169718934175144 0.0700671044389806
 0.025271550040310696 0.020437932920740934 0.060729301591272045
 0.04018396087416922]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33682674552868763 0.19663786720680015 0.5197093796294516
 0.46046016701418946 0.24200514146234273 1.0716656506690003
 0.40871429220799416 0.2696769952890641 0.26362027836805746
 0.26014889430099686 0.1896682092788946 0.32710441953192243
 0.16744784366818316 0.6660211346751118 0.6660581519712093
 0.20759069099272232]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.33080521862410983 -1.213785992786107 -1.2163283801749638
 -1.1807220965826106 -1.2130593549909294 -0.37068188937079194
 -1.2850952315151964 -1.316821709729879 -0.5471119437394001
 -0.4064018012300567 -1.1671875346344718 -1.4303822066672032
 -1.3486895082974706 -1.908138016265224 -1.1572015019861255
 -1.2027190192532362]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2176358707931366 0.008734516053851511 -0.007953013364094517
 -0.007427449044565663 -0.0054629424964187795 0.02233757819168421
 -0.012488861623385313 -0.029414936839055893 0.019495681466846805
 -0.019337954494209476 0.1538594783956181 0.07036683861604369
 -0.04406084874885724 -0.016872833545095736 -0.026550248841512275
 -0.02502243918256409]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09945406444592883 -0.0734905522954723 -0.13705681299893957
 -0.12118669258260005 -0.12530223699539816 -0.5266201130520957
 -0.32946285653067436 -0.1444692490452562 -0.18127881182628344
 -0.08120667184179745 -0.08154493881341274 -1.9767188503281965
 -0.11620554358388432 -0.664788775318267 -0.14566797830602543
 -0.1125250694552511]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0267555583282193 0.7882515271522348 0.727440017761539 0.857085043363071
 0.9368370940434142 0.8685705615839199 1.7401501312119327
 0.6550378438658857 0.8758662587023641 1.1460945723412106
 0.6136422024638016 0.8367337475389001 0.6267033115678747
 0.7994036662332129 0.6984970261177808 0.6414792197281457]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.16389804156132304 -0.9381715159202317 -0.8802565211668237
 -0.24665656337742867 -0.9533189994241638 -0.15659873097455704
 -0.4411199213724811 -0.14471533391648636 -0.3802187672725689
 -2.1076014380062404 -1.011081747172843 -0.3455478529989655
 -0.15375554753122095 -0.36974962948013473 -0.1775483822857421
 -0.1552767686746479]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6631233221072796 -0.26896840847510717 -0.46660631676845354
 -0.42902404386919063 -0.6382155426342961 -0.23327907240878598
 -0.5735115999669914 -0.2399954877843663 -0.4270335097006659
 -0.7207534094608519 -0.2740856062952565 -0.2703364719634354
 -0.833999037071024 -0.3781690180613645 -0.2882012018661306
 -0.6706747295891322]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.09005576687624986 0.12073492121879488 -0.00645281977043799
 0.06026478060411586 -0.1714717632546785 -0.19753873363164026
 0.10055827877999433 0.023889775980186885 0.0466325291954793
 0.03424689904206649 0.008906156055588553 0.11473047340505774
 0.085900445645991 -0.004959086992405408 0.0556597112573357
 0.0051103046813185705]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3536468060202125 -0.17073422218239662 -0.38015931837572775
 -0.17987035723666278 -0.1837219426479659 -0.17130235561131352
 -0.1522422773033132 -0.18893089070740338 -0.19684600826065576
 -0.16277898265567267 -0.14936831905365922 -0.3411907374006822
 -0.2701516987083141 -0.16226027921418298 -0.16226482170588857
 -0.2366300123150532]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1203235803243876 0.6830135051560493 0.015246716864915993
 0.01866915892613236 0.016967051723463494 0.0665332355116595
 0.6705132210634392 0.023781884254926354 0.3894360309355398
 0.19505524593005152 0.05975718578429335 0.015221126818718957
 0.0274026229689903 0.12205443718260883 1.172407975730587
 0.03275966816299401]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6636468023397877 -0.4480217057375038 -0.9128968623857329
 -0.8252333701200831 -0.7368214906401342 -0.6998135919457815
 -0.45505063072896973 -0.7682406024980837 -0.5713116448644724
 -0.5723908978285208 -0.8235291613641746 -0.8064694719035248
 -0.3522481480540599 -0.564794044776978 -0.9637639905467643
 -0.5240565608868519]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2357118338496281 0.3709819360094399 0.018402186417551772
 0.042986971911945185 0.015140601513223013 0.01962389849409295
 0.037125989166921405 0.013898046773212935 0.06397207732033623
 0.01658410776640536 0.014272063991648891 0.02251751901182054
 10.743565588203948 0.0418037949730389 0.020309446690057863
 0.022678423487257546]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06290934509215367 0.12737902026707926 0.06029044601015109
 0.042860107825749845 0.12094065145718302 0.08475727932930775
 0.06024258374068965 0.15229452761367124 0.32095566827687744
 0.06125591054182607 0.7212048264545307 0.5048479467550115
 0.18701948385006992 0.12833817799363825 0.0404060613134962
 0.08241319514490922]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.18862945280433774 0.08040441484741245 -0.0040329070932165235
 0.030240233270576535 0.14087916102341305 0.03821353285131891
 0.11394983209859863 -0.0029816912773797007 -0.06068790132834187
 -0.031815688985736376 0.005714041803921301 -0.04836109078746886
 0.1070192702603128 0.11538674413301016 -0.06628596637340914
 -0.025412668854137316]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8409005787369874 1.2088283005470775 0.3803903276298414
 0.3991006934461546 0.37333192349245986 0.3702500388919636
 0.7701879418516183 0.5899145517469382 4.0506574286608075
 0.47623321555018344 0.38530444962626204 1.2099733581230703
 0.3714741408974942 0.7274175654469461 0.44339187491586773
 0.6905916730328039]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6520429615742626 -0.2674857480420957 -0.30231950231144605
 -0.6245945372471678 -0.25241929045010775 -0.7069155450869061
 -0.2960819587557553 -2.8471957872708593 -4.275100352120737
 -0.2848335856630099 -0.8326989731196857 -0.9340436830737566
 -0.29216685042927937 -0.6984548295266251 -0.9299385073552258
 -0.3189132524003847]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7289931201379789 -0.15195465511885237 0.04402036589011217
 0.04541005976651181 -0.003043200175029001 -0.25944393611670885
 0.15495994621335488 0.3388554162222179 -0.2244861685617265
 0.22004924096674872 -0.13103867474917452 -0.15747293029995835
 0.394009690338772 0.15623473317937364 0.31061427959131827
 0.2901173883284409]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.4404171219507218 -0.26480459412008 -1.0420354225126969
 -0.27660509953327284 -0.26531968235843484 -0.8209570653791061
 -0.43197648484807727 -0.4153932014720072 -0.5671827963511866
 -0.6296776223048771 -0.2760165005646077 -6.268979670464649
 -0.5306370506924326 -3.504643639958273 -0.2918309634573729
 -0.2686544898799809]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1393513162122242 0.17363372386623027 0.18176488169323363
 0.24160398377697195 1.1232448461470521 0.3591478387047269
 0.12221935155715641 0.24390390247849625 0.14085981484072504
 2.086344806152728 1.7781252863017374 1.346773352303783 0.2548600026612669
 0.33769293386842775 0.15868792083855116 0.12299734560967418]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.0624599974969586 -0.30679387333898267 0.08410381303691795
 -0.5184670327751102 -0.4332407127412876 -0.8316930131755773
 -0.08540117944823876 -0.9027817430226497 -0.3486347428485582
 -0.5472193569911067 -0.10858882245941295 -0.21370044566526541
 -0.8880560133522577 -0.44869218297611124 -0.9604530326364784
 -1.0534374252447822]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07321760333650057 -0.32635915994676473 -0.10646037891249288
 -0.08740053323872218 -0.21455769089684767 -0.642576291151582
 -0.1936618359356902 -0.15316656508867335 -0.12920841878293748
 -0.30958914425991657 -0.07517171494550536 -0.27559802525673066
 -0.7176670705048583 -0.13340851146843302 -0.8323925476010127
 -0.37444578211851165]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.5889848619381439 0.9477373229993872 0.6402281877935079
 0.5160134184777361 0.5571985630555766 0.472422439749177 4.461967862926429
 0.569332243354323 0.48452091448737744 0.8046466795830325
 0.6746736001686708 0.4769216189713175 0.6043156653433864
 0.5198399603916207 0.5812811149403425 0.9384633278234767]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3223476238403319 -0.25703597300248765 -0.08651049893997005
 -0.24541364633967563 -0.24420818016514118 -0.26300655256130645
 -0.23300150490441185 -0.22672753124414702 -0.19637605181850298
 -0.22524166238436708 -0.24604174515077631 -0.10624984769278309
 -0.1207723666508004 -0.2403833022190707 -0.27269128104257456
 -0.17609126144275727]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.41208493288496545 0.4361120823888651 0.5537698631127229
 0.20082402118486403 0.699402498469122 0.5380206236742232
 0.3969645571414547 0.4084030978728383 0.3046893390598346
 0.21400490311385972 0.19301273410334202 0.24103869500702577
 0.7412230389740344 0.30239308467446 0.41419717946349455
 0.3694758720156817]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0030512038141648837 -0.010702742867929627 0.011793541668794767
 -0.005421770985418831 0.13922941901458663 0.2163748431945157
 -0.007219479950204793 0.006941454854411939 0.001506756568230897
 0.002882051867922243 0.013298400748502755 -0.011625581132456004
 -0.0028861055512397612 0.009084784864640275 -0.0005966136828772493
 0.006659884295702737]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0458611319797542 -0.46164115665262445 0.3979610301459366
 1.3452027061107596 0.7639023154863992 0.5738405758388982
 0.1847426850565505 0.6429882622426079 0.9006580816086319
 1.0279296673940053 0.7555470836485141 1.213187910418969
 1.1026990630972062 0.3604820632262294 1.067425287455165
 0.7787877785235261]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11422686893510653 0.15798729492331243 0.08882544651529098
 0.13663211220215365 0.04880935596959348 0.056328947892852047
 0.13927419983062464 0.14057593728191842 0.10791304705815875
 0.2766857682901381 0.39706321947022544 0.1277702889603355
 0.11004864383191368 0.12492827058880335 0.4850990146841728
 0.06343264592619587]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5342709271816288 -0.6447381210171262 -1.3141515165456676
 -0.556055257320725 -0.49600693943459445 -0.5211112260573496
 -0.6405081796392237 -0.6490178342944574 -0.5093872656284315
 -0.6482308499289703 -0.5544509874702441 -0.519328355898189
 -0.9587522501264883 -0.5530880720339063 -1.0636536557904446
 -0.5255375382539769]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8912838861445302 0.6891998698855903 0.8215261445489233
 0.8166898098668596 0.8345055605586177 0.8782172991844204
 0.7665601426650762 0.9116284729727783 0.7358978306592857
 0.8475182200891462 0.9160423184030475 0.6746350454629401
 0.8533966187909872 0.7499241470382548 0.8825336115340715
 1.0183890847919477]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33632326582130334 0.1983392597672787 0.5185324233439512
 0.4601435392853266 0.2419775781293193 1.0650890292988469
 0.40913456549033894 0.26967859959230495 0.2635814636589966
 0.26075928900676193 0.19080092456599382 0.3265019632159838
 0.16869347126750112 0.6708638889228838 0.6648726794966775
 0.20806392093115983]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.010094626664213416 0.024628621768690837 0.03280114788376057
 0.029247178778552603 0.018757002978729467 0.06306474578585815
 0.025182562288004102 0.03701554038107073 0.05303423429212284
 0.04894093446930593 0.04155608609598563 0.07013273203336988
 0.025558360071053932 0.02062557538187707 0.060475431261913376
 0.03993324158713002]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3227157789915283 -1.217338844109931 -1.2221092334708963
 -1.185290148958582 -1.2166696493141604 -0.3608130768551408
 -1.288384231705091 -1.3184805571848142 -0.5252157857252848
 -0.3892868265202968 -1.1733855778076092 -1.4399685915221607
 -1.3519559944847444 -1.912141887997554 -1.1652768462911454
 -1.2060983749088354]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10000367197098445 -0.07393718372223394 -0.1371396510144751
 -0.12152994796202304 -0.1261153378987372 -0.5224058305972983
 -0.3321136937643423 -0.14546757559893594 -0.18222486610954153
 -0.08171860672468145 -0.08193255943972196 -1.9694259474207862
 -0.11668061373945823 -0.6675685997302485 -0.1459825898428661
 -0.1127325418831487]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2182483549714458 0.008290737571337723 -0.007797128223520494
 -0.007174211522186905 -0.005305426225332144 0.021474720093402882
 -0.012028594740030343 -0.02840405909322317 0.018747349495084956
 -0.018604795276570114 0.14926730658874 0.07011434725969913
 -0.04294859288595177 -0.016293496896768733 -0.025636562568658122
 -0.024111513210046443]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0311095102189658 0.7783569087495186 0.7309018241662866
 0.8617595432119123 0.9418192974754075 0.8700184841379195
 1.742137303755091 0.6511697218572333 0.8797802980459392
 1.1501728388936117 0.6110916179827638 0.8363036278833059
 0.621947602933635 0.8033184106661245 0.6929834577939457
 0.6356773342318455]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.664295692951462 -0.2699130577444203 -0.4666121039679826
 -0.4277969719894702 -0.6412693637675575 -0.2341287025680269
 -0.5756965879091045 -0.24112458945075765 -0.42695014750216603
 -0.7140579475015917 -0.2755677745490318 -0.2714694858648716
 -0.830140784613564 -0.3774405711717308 -0.2890898312736988
 -0.6704231651968956]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.16742341720051662 -0.9438883567263047 -0.9101372557780378
 -0.24531597522422718 -0.9403977893758204 -0.1576707471486113
 -0.4420227882439224 -0.14905371958760133 -0.38095379520335915
 -2.0660737271892486 -1.0046480669764604 -0.35491972793715754
 -0.15817446042660346 -0.3652430687724018 -0.17929992911824863
 -0.16029293622733964]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.09001224556714851 0.12119839182730316 -0.006767275934631567
 0.06160854646597619 -0.17417103124275735 -0.19988336664327883
 0.10032783025478516 0.023879162948847794 0.046885238575383306
 0.03452456541599791 0.010179248289793389 0.11577218249473964
 0.08590323737565778 -0.004823560317003235 0.05611920953936001
 0.005503014475695164]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3341686285225697 -0.17472574246550807 -0.3699517275075836
 -0.18362369538841286 -0.1875000011790044 -0.17516895765870774
 -0.1552884113143231 -0.19321724075384708 -0.198661871571174
 -0.16600960649864163 -0.15239461971170346 -0.33161182213577145
 -0.2659900155445488 -0.1654210154417335 -0.1659676757224135
 -0.2423979979831614]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9626306488926181 0.6435855225437407 0.015844585111546922
 0.01996557320046085 0.01835901083718449 0.07259281823644251
 0.7261893798284698 0.025279112153414624 0.34142186953979015
 0.19914562747637227 0.06239711930168196 0.015840050675848927
 0.029480905406527966 0.15052953818970263 1.3122541423139988
 0.03362674363095717]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6658246754207454 -0.4461383512915434 -0.9149235755885788
 -0.8246194521684739 -0.7373599721310687 -0.7011659867354284
 -0.45420022962426826 -0.7686056120792482 -0.5723359696348036
 -0.569446111600776 -0.8228654964683925 -0.8059826256300252
 -0.35040715359741953 -0.5672340736871936 -0.9640376925475708
 -0.5231419984158874]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2769885338598934 0.36508678705816505 0.021495427029361375
 0.046524219115898595 0.01738783920707623 0.02244518004523972
 0.041770396107328994 0.016052417876708785 0.07005238301671443
 0.018546627319694923 0.016209852751596785 0.025292962052491555
 10.66546486155064 0.0474926640282656 0.022774533016312833
 0.025989801545142233]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06466485586600125 0.1328219464723765 0.06346964555287421
 0.04400129933390289 0.12573938056122416 0.08593545586439828
 0.05938653743082026 0.14587919567968366 0.33828281586457865
 0.06448374597319437 0.6751927765911495 0.5063616555383919
 0.1902488873818424 0.135540790576091 0.0417165417789487
 0.08438970120086772]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.18810282671394762 0.08003571004936193 -0.004214959897447936
 0.03003917673815761 0.14089441681649453 0.03774729449936741
 0.1147806823007448 -0.0026442059753988834 -0.06021670851117403
 -0.0313431510482486 0.0063828247010882105 -0.048631886331504476
 0.1066421936857808 0.11522471436480203 -0.06628675705197774
 -0.02565340266078161]
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-5\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node11848968-5:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6885936109424162 -0.26696489838995346 -0.3034233889093174
 -0.6281871011289362 -0.24791164464987567 -0.7176573688133994
 -0.29524151381471203 -2.849728896852853 -4.185518237276714
 -0.2839805713082544 -0.8506254194388658 -1.0037305906201455
 -0.2880583480184797 -0.6519682341959595 -0.9379854534639632
 -0.3156300866034584]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8401515840863363 1.1650184170284066 0.3820662208732945
 0.39938756480659776 0.3749533766236347 0.371485761138977
 0.7849538660497528 0.5915554943713836 4.186530683126406 0.478605241998642
 0.3845698937195689 1.1389490551170784 0.3736589707119426
 0.7215171028403682 0.44272688120819365 0.6518179488958925]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7390411707556964 -0.15346611814757533 0.04998020152230016
 0.046612648796161116 -0.002811587329640798 -0.2619672397825169
 0.15321100776999408 0.3395622423420925 -0.2298503438673653
 0.22070761629712624 -0.13104654520441242 -0.14894979225849206
 0.39315519091089135 0.1601451902965173 0.31022610854431165
 0.29137102620372646]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0479135095760235 0.06824654001243113 0.09238971688508518
 -0.01091889935612153 0.11735021432365664 -0.02194136861935514
 -0.005260797215501545 -0.03078508231103677 -0.02972892942761618
 0.002707560932586256 0.05079152395015463 -0.009575787399073082
 -0.034404953681665906 -0.04229078571650344 -0.04926271931984527
 -0.04940272348117172]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.5115511063759945 -0.28312000864222947 -1.0184904025777735
 -0.2957976938686085 -0.2834934900461252 -0.8657725318020555
 -0.46008269127573803 -0.446406266633976 -0.6120380992803627
 -0.6754760376676113 -0.2954951234871602 -5.777909247846482
 -0.5252423497624196 -3.645594461712922 -0.31114756651667735
 -0.2875143283516396]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.14124351125169876 0.17514641655212915 0.18076288858144077
 0.23607068735355033 1.1175129745415724 0.38187471082345986
 0.12344550486086758 0.2445359246286918 0.14095088589464394
 2.052798072278017 1.9393069723634375 1.2320429108693973
 0.23605495818726555 0.3194719120601854 0.16379620900110306
 0.12619676776552655]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.0605679323908719 -0.3055158981868567 0.07979398585132338
 -0.5263939868598668 -0.45796773647094935 -0.8282638501707372
 -0.0932638007959651 -0.9004850194414903 -0.3308900023905112
 -0.5373949467046575 -0.11608064517493161 -0.2304518779184186
 -0.8857592267980071 -0.4265898521856457 -0.9552712280645834
 -1.0504137434336902]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.013023204437173086 0.004076835733066747 -0.00540633824723924
 0.0009204599164202298 0.0003683785648054827 0.004007240176061466
 0.0021082727193501016 -0.000368359261857909 0.003157151427397198
 0.0011509381174485134 0.0025136480011593854 -0.0018233206228927823
 -0.0014316952202507172 0.0030465705244176744 0.0045043793502204665
 -0.003800956740931588]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0726869977610072 -0.33249382742603983 -0.10506228804969586
 -0.08618551498251911 -0.20253191878690774 -0.6478058197875012
 -0.18804105185598352 -0.15544349720182962 -0.12903134826628043
 -0.31299878874411724 -0.07379994049799173 -0.27117330022820996
 -0.7286767631114348 -0.13567888594528077 -0.8654289396513345
 -0.3378423911490458]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6117367606760188 0.9668231269255496 0.6618108824602359
 0.5440157681147973 0.5881368648580027 0.49658118353529934
 4.062121788571107 0.598280636153813 0.5109625751259891 0.8061818682492703
 0.6992885531691275 0.5015757296730454 0.6372999917685397
 0.5462595045455497 0.6136495096694464 0.9938230385077127]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3236062916691309 -0.25761393631574575 -0.08466272220646529
 -0.24624610283191803 -0.24503625841108395 -0.2638287241439535
 -0.23416680035734633 -0.22763345911819802 -0.19498414212155665
 -0.22585707766874433 -0.24711778286276448 -0.10201011392161415
 -0.11740763849481244 -0.24119416634794907 -0.27352520789923906
 -0.17720860502858232]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06008726566720629 -0.17878338748889933 -0.05393224574771349
 0.068008186287848 0.009120647440491125 -0.05440208912239711
 -0.12581412863745603 -0.011351384109033108 0.04185901488691107
 0.033389042957663595 0.0006244450780792388 0.05032599622640527
 0.16147271156662996 -0.04613550254142024 0.02475314500797904
 0.02077828252770411]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4631936361407564 0.4399003257710373 0.5097144739268499
 0.2037808010187958 0.6927657799563303 0.5401876634057998
 0.39398310836670797 0.4064261427740846 0.30284029500690923
 0.21761121783866183 0.20035266459019604 0.24366718169656174
 0.7477443307098359 0.2955958907542234 0.39638049806456765
 0.37147251311947066]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0029060074644080957 -0.010437342641924419 0.011909723314539964
 -0.005146164866723113 0.13657579857609214 0.21747182271832957
 -0.006917414847502996 0.006987522114970478 0.0015678253712970922
 0.002964938138264859 0.0131635616599622 -0.011534795459823863
 -0.0028205424365879053 0.00915232464369401 -0.0005001317093158487
 0.006736521982152867]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0323483963222033 -0.46663221124607546 0.4049241649035876
 1.3417840394785014 0.7524546288768912 0.5611651952426339
 0.2028408938524833 0.6385208755492704 0.929790930343659
 1.0255677614337424 0.75257305026561 1.2099732937360312 1.0923499859475814
 0.3823208155179336 1.0723953419254137 0.7671973234310628]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.003284906457315828 8.744750913217136e-05 -0.001954400483308638
 -0.0011045475972239482 -0.0031290351809502015 -0.0032454399059509142
 0.009075620301751713 0.0008150721428665797 -0.00980251312380348
 -0.00038548934939164337 -0.003368276147307142 0.003524866673404764
 -0.005733197662655454 0.006109258970651232 0.0031775471347144646
 0.0026481802607541405]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12321454257103809 0.14842269391454316 0.09095382573871957
 0.1370360825442293 0.049390719733667 0.05580370029210259
 0.15284734855502552 0.1482158898222821 0.11139471269257908
 0.2388771552038241 0.41460031200481784 0.12827002142359428
 0.10815609635435931 0.13497750128452263 0.46800365909589137
 0.0654368011296001]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5402665941643491 -0.6440391049928249 -1.3168658135670075
 -0.5532408995728682 -0.5000256253492444 -0.5268640572126455
 -0.6377105169184364 -0.6544715918780312 -0.5115999677815408
 -0.6487393938714254 -0.5519901480618862 -0.5187216124601164
 -0.9502813692343887 -0.5548158487132089 -1.0512271595614822
 -0.5274292732819682]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8964500952497918 0.6823779307669385 0.8195366503705757
 0.8149014794478381 0.8326147452280086 0.8777209190317259
 0.7697758680430005 0.915046025141821 0.7398129219232782
 0.8492791258015295 0.91615039485297 0.6685293735126477 0.8526328003334398
 0.7488078770579378 0.8833669405292048 1.020944915305769]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12750119794596113 -0.00020590473501480577 0.05436775749211725
 0.01228073068261018 -0.00021952346701620273 0.049271867143717174
 -0.07765542517718588 -0.07407447746898849 0.03208557504285592
 0.03726586056769415 0.02484340236415905 -0.16430696722442129
 -0.002090032524688923 -0.0472690936540856 0.03568904451841387
 -0.007484011506125293]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.32947876312090424 0.19230765451833715 0.5086543420699061
 0.46307485719837854 0.24084547966279682 1.1135949010902448
 0.41459015085291245 0.2753650628149429 0.2707831091152486
 0.2592263364829353 0.18950405127676023 0.33367176366185464
 0.16724695897518035 0.6114716485305844 0.6732806250956477
 0.210260157327994]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.008628570050605196 0.024341668771985143 0.033015494320836294
 0.029285952826897554 0.01816955014896331 0.0626721832786345
 0.02470626934766607 0.03719983950612507 0.05288982649559834
 0.04883960432257678 0.0417901501441883 0.07057184023779149
 0.024818253726578938 0.02025458838833586 0.060696161520379904
 0.040235955407259404]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3343155926605488 -1.21194385458913 -1.2316829763298083
 -1.1793805378346327 -1.211210222548063 -0.37131160980414113
 -1.2841567326500334 -1.3150993892810734 -0.5447040279135774
 -0.4055538335382136 -1.1654894915566165 -1.4218082040612625
 -1.3498908693168825 -1.912092346767105 -1.1553560331383084
 -1.201135683858379]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [8.93664624462831e-06 0.010621592433650545 -0.012289728678361006
 -0.011854038745449713 -0.0029432206531438965 0.00852379973838846
 0.047211392601983454 -0.005296594403273763 -0.0028343635871641015
 -0.006069499760725738 -0.005199973321574097 0.008337183479629834
 -0.0031984377287130883 -0.015833357273055404 -0.001343093188865191
 -0.007840597559569895]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10015198047382098 -0.07455937138809964 -0.1403561018833687
 -0.12464792403208522 -0.12213826299187036 -0.5241872368970593
 -0.2921101539742087 -0.14027355896018523 -0.18311087626783862
 -0.08213528895667054 -0.08294315330814109 -1.9922036890033665
 -0.11541780278038553 -0.6793312478714657 -0.14858523583405092
 -0.11482733279686652]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2244717160656411 0.008473863389753814 -0.008334036985941571
 -0.007885492864709898 -0.005872429618854501 0.022251286697295206
 -0.012773837437264835 -0.02960056465437606 0.01969977383879765
 -0.019678499352590504 0.1536421793338128 0.06594701996269255
 -0.04319057469238506 -0.017349956450990394 -0.02662217899739651
 -0.025339832896062234]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0279898811541759 0.7924706700172588 0.7224654728376557
 0.8553358162712118 0.9359852282710278 0.8697126801010313
 1.7466277617813804 0.6523874011012736 0.8751607187954547
 1.1476634386528863 0.6102169336511606 0.8379266138937277
 0.6250826045104453 0.7966178160930231 0.6997267562228993
 0.643177988648895]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.008342275733070115 0.006011612484860013 -0.0010125596830528605
 0.010959726139459836 -0.014969603137438114 -0.022129029982235288
 0.00798821970792929 0.00026862795334489653 -0.002198185329799207
 -0.002968844134582288 0.00010557206206313063 0.006695546144386666
 0.005758963369032699 -0.0001490649256556953 -0.0019058440725675252
 -0.0007974123288153057]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6418296464359549 -0.2710286934470945 -0.4678319143513986
 -0.4419545783940747 -0.5996957056422576 -0.23537181550855252
 -0.566684555296513 -0.23965891098467995 -0.42080447818916805
 -0.7547983321655815 -0.2726700365769681 -0.26702734999382666
 -0.8677429779281994 -0.3871704762905072 -0.2907282126339311
 -0.6509790941836243]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.16892078277944989 -0.9452382918496551 -0.9176913978315648
 -0.24537180157397703 -0.937100182030138 -0.15846446168360906
 -0.44256467540833777 -0.15069207765710618 -0.381410555788022
 -2.0527715817203016 -1.0011288692079074 -0.35748604535247175
 -0.15982975774723118 -0.3643754202463966 -0.18030377036035145
 -0.16216608989934025]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.09194165311589875 0.12226747382015733 -0.00623788140429876
 0.05912839680095388 -0.1745933589947693 -0.1994411517107366
 0.10255535036297904 0.02437928203059273 0.04644188236868986
 0.03389004481399222 0.008163182391745384 0.11607081106643491
 0.08708863537246124 -0.005172527770434753 0.05513955915391455
 0.004646287675436459]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0018855881310829992 -0.016325560393980865 0.00989306420966915
 0.01468226657290278 0.005926860913445131 0.0036451754369419553
 -0.014136768713032238 0.0068716031359651875 -0.008915187797873259
 -0.0068888227272246305 0.01485836421444997 0.012908332095956349
 -0.014753136314491211 -0.005721396031618559 0.009633271438791974
 -0.013563654170985845]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9544738481052181 0.6401976688697035 0.016310583723713398
 0.02060224918961107 0.01898830284091716 0.0746587336252344
 0.7242974522920782 0.025847536545231732 0.33438829319319124
 0.20219201359761688 0.06401569975597055 0.016307203551872995
 0.03052716152698391 0.15215818935551134 1.3199363969262612
 0.03424131423964188]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6628473180200418 -0.44157521160271324 -0.9198830130959408
 -0.830769893597867 -0.7390802475247864 -0.7009679407621773
 -0.4483091963215744 -0.7712501377702872 -0.5671953468779353
 -0.5702245902260749 -0.8291613978962046 -0.8111918334393986
 -0.34644574742964407 -0.56037852852154 -0.9692842387028221
 -0.5197243348324158]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3293953413486776 -0.17585742082211325 -0.36661616580268
 -0.1846667554883666 -0.18854691789533393 -0.176236096720852
 -0.15613820880658208 -0.19437440446332754 -0.1992147273540185
 -0.16695154885754296 -0.15326393915549139 -0.32891652115569564
 -0.26481781785392255 -0.1663011494553598 -0.16701961633405157
 -0.24378239788508885]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.007647001722750929 -0.004856160260472475 0.0055667695708385145
 0.0009600004967493525 -0.007925938931375498 -0.0027273867523711914
 -0.004396347803699213 0.0035595742657339724 0.007370005067320384
 0.003679110374104816 0.0013089350946986211 0.0035484478937720665
 -0.00642710348046957 -0.007801943296165209 0.008497212480772343
 0.007291827003313989]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06540335764713272 0.13443862662543593 0.06420162442914691
 0.04451360553014281 0.12712552085292186 0.08647226371986395
 0.05960505483483167 0.145427675625328 0.3399915873564635
 0.06513825023249187 0.6676403887272194 0.5040393701685777
 0.19075332707775733 0.136148819815843 0.0422023033292938
 0.08501345569389547]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.19208298135146137 0.08187973211789955 -0.0054090587873530036
 0.030145149553794333 0.1437113361070107 0.03913583940301284
 0.11564749646022703 -0.004822298658850727 -0.06270971264210518
 -0.034140881285667585 0.003989288276000251 -0.05048954413553454
 0.1095309332828605 0.11753393074815993 -0.06817769596717735
 -0.027048727430526484]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2893867178408793 0.3674548478977295 0.022600109806236113
 0.04787163064976634 0.018196866319533652 0.02346276641302254
 0.04348090205915392 0.016827692275264178 0.07212836228725077
 0.019270538727802787 0.01691985509478697 0.02628368102419798
 10.63537659154598 0.04950725086448333 0.023657371067121506
 0.027149301707321122]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.02211955285639927 0.012480352328911481 0.00109389011535721
 -0.005133435817773702 -0.00043328792241098535 0.018021198517984838
 -0.005407741177303471 0.011236669445709058 0.017314601221271597
 -0.0012900444570389524 -0.026110417504444344 -0.04208422924550631
 0.020486587581864057 -0.0008826356516454803 0.014662811108459073
 0.008165234312963815]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6932834028812453 -0.2698621387086105 -0.3066628674315418
 -0.6367172404455141 -0.2493730642169305 -0.7273444310433239
 -0.2974717210713494 -2.844393450427545 -4.135386352365346
 -0.2860716372756394 -0.8587561874938924 -1.0039305011598
 -0.29051294672789507 -0.6519591808131042 -0.9451663499855063
 -0.31831389238005997]
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 960, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 813, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7311791418573391 -0.15709632031906273 0.03820207289292941
 0.04409912344119514 -0.006241329247039996 -0.26383728188884087
 0.16192189863916462 0.344637744055848 -0.2271183110149958
 0.22493874165497987 -0.13446968905599765 -0.16578016125536787
 0.40131650616357073 0.15494524749014543 0.3184933584144284
 0.2950059772238045]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8400622457645215 1.1545614469236694 0.38318896654269596
 0.40006186022426304 0.3760608775415904 0.3725523570668314
 0.7887050725493084 0.5922063501743452 4.21298358428766
 0.47962109993772833 0.38514368830176626 1.1214810649176292
 0.374860774754947 0.7202451142550755 0.44325005265572687
 0.6429635066987175]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.14316915325863203 0.17808572515797405 0.18220200281637589
 0.23833647821172946 1.10859143404728 0.38392861773360676
 0.12555030811656612 0.24679263623145464 0.14305837559315865
 2.055463352843917 1.9448752541403413 1.2096288955337113
 0.23631992481349537 0.3205496697125756 0.16648453141719025
 0.12817494738497862]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.0590681093485537 -0.3082765149309474 0.08037767703183499
 -0.5212135765696289 -0.43732662122132365 -0.8260174843271446
 -0.09846377940287988 -0.8976588824853461 -0.3429758247584818
 -0.5432854775991259 -0.1137062240712379 -0.2287340566045255
 -0.8823467308040973 -0.44290193842109216 -0.9543760553903413
 -1.0495421622329693]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.5311347405547928 -0.2887994494428736 -1.0125695358961109
 -0.3016884162728828 -0.28913653788400734 -0.878757219939144
 -0.4682994121737568 -0.455362234437495 -0.6244300572680501
 -0.6885846035017023 -0.3014402008869676 -5.651009310489505
 -0.524958595236401 -3.668599979544223 -0.3170229171428194
 -0.29333819517704407]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07308958241794072 -0.3327871143516889 -0.10551345266908267
 -0.08672012335826147 -0.20144932748264488 -0.6466117462875823
 -0.18837388673387856 -0.15587882583663917 -0.12979512202288812
 -0.31404703600724626 -0.07416352337633687 -0.27254048833600514
 -0.7242141606485183 -0.13621096921026402 -0.8705525780993945
 -0.3329333366068078]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3226959202586738 -0.256549053338197 -0.08709704232273288
 -0.24596723793845596 -0.24475376618064446 -0.26256142840869773
 -0.233243667642021 -0.22724428266283303 -0.19565257290779997
 -0.2248008462298211 -0.24590054385834145 -0.10573309185482047
 -0.1204207250553038 -0.2406632691978452 -0.27234837000977363
 -0.176467211533143]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6179578456807061 0.9710255424400339 0.6675274021849981
 0.5517163571620676 0.5965546605762123 0.5032925996475373
 3.956213873824215 0.6059817834379397 0.5183103945040305
 0.8066821780700612 0.7056258409611822 0.5083793314373634
 0.6459685009437348 0.553507377826355 0.6222141635095669
 1.0075899297975026]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4648579211955139 0.44193967805600143 0.5032845375765962 0.2045381709779
 0.6909592604169209 0.5431985298321101 0.3934285204615231
 0.40729307053971064 0.30329749213445806 0.21836237404890277
 0.20121841185490066 0.2440991880578024 0.7464664617157295
 0.2952648403411821 0.3946944478141237 0.3727136181174131]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.040872285951629 -0.45858897476157 0.404739070385236 1.341449186152055
 0.7585720084171913 0.5666875799303456 0.19343907801502935
 0.6415600657583715 0.911140098566428 1.0238717510699422 0.753793781324667
 1.208818059324649 1.0949010629401694 0.37634254756970276
 1.0672313441645689 0.7747455407721138]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0028192486074914893 -0.010302139030336551 0.011947154100794439
 -0.004990911729014306 0.1356443203527991 0.2174410078099878
 -0.006781185203016028 0.007022940319581916 0.001615478645925904
 0.0030145726410820595 0.013142569675706182 -0.011426433372901256
 -0.0027589309355512247 0.009182538249146383 -0.0004390081156130125
 0.006774914291917365]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12536049627054724 0.1472496473458501 0.09182326039613498
 0.13645944450087422 0.05003020210600294 0.05638459313617643
 0.1540187660042725 0.15020463020760752 0.11241998435218888
 0.23486005472294746 0.4127760828147879 0.12848191393392394
 0.10842319856858001 0.13688415257281808 0.46394159359268383
 0.06628304183539996]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8922982049219841 0.6895482579340074 0.8201002586885132
 0.8151414100104106 0.833167803535974 0.8773121817758661
 0.7695382388666314 0.9122045304475752 0.7389153624907224
 0.8474107667370518 0.9153070130982142 0.6746012883045974
 0.8524986478264241 0.7498307012446673 0.8820814247986668
 1.0179919719151709]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5422580532624529 -0.6439173986010941 -1.3154347779902622
 -0.5528114215928381 -0.5016029305650211 -0.528840516486582
 -0.637103073481868 -0.6560907668150164 -0.5126089844007998
 -0.6487874391813697 -0.5516331456428026 -0.5189900458977467
 -0.9474285278535317 -0.5556030060362324 -1.0469101017045723
 -0.528268787109233]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.32767499969245173 0.1927595477198491 0.5055604226431452
 0.46332655351187557 0.24060875061619602 1.1164313882551682
 0.41613466535820076 0.2764924089422778 0.2721959482052768
 0.259460463807501 0.19035952509063178 0.33439973765533737
 0.16816865775130907 0.6048094254096608 0.6738554032504984
 0.21111796388524828]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3308052187311307 -1.213785992759041 -1.2163283800539701
 -1.1807220965538552 -1.2130593549637645 -0.37068188947750186
 -1.285095231520467 -1.3168217097399382 -0.5471119438204815
 -0.4064018013441741 -1.1671875346054619 -1.4303822066349683
 -1.3486895082590664 -1.9081380162000898 -1.157201501956929
 -1.2027190192269357]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00812533558809661 0.02430487323358659 0.03307269586960494
 0.029313000581826953 0.018083786342785863 0.06249784191854159
 0.02462472369336081 0.037243029294669355 0.05280721014415924
 0.048777858282056 0.04183667682478942 0.07057087917727192
 0.024671750255284834 0.020211936497688734 0.06067420032876403
 0.040293641536918084]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10072246564511744 -0.07511536741504567 -0.141063126805925
 -0.12560660579250632 -0.12213593194370115 -0.5202822713795391
 -0.28714051123673096 -0.14022482327754945 -0.18418361609757483
 -0.082715826976013 -0.08352665412138031 -1.9890919647166767
 -0.11563986771971568 -0.6846759214047573 -0.1494011976001718
 -0.11545306528707822]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0267555583238552 0.7882515271734994 0.7274400177680581
 0.8570850433647151 0.9368370940408169 0.8685705615894227
 1.7401501311072074 0.6550378438767208 0.8758662587051792
 1.1460945723297702 0.6136422024775751 0.8367337475453706
 0.6267033115809448 0.7994036662368103 0.6984970261292893
 0.6414792197542715]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2258732463839696 0.008519052607501562 -0.00843439838579807
 -0.008023704126196567 -0.005985641933475477 0.022431926752292778
 -0.012896153266982967 -0.029822474509721836 0.01993255139397366
 -0.01987791884598556 0.15440737305503233 0.06477442949533542
 -0.043147190610661836 -0.01755585825470056 -0.026782400806585963
 -0.02557440361057408]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6387422402999533 -0.27218386666188343 -0.46812214128317076
 -0.44358750392006857 -0.5945303316486381 -0.23645443443829267
 -0.5670810878802034 -0.24048348107363074 -0.4194700378880584
 -0.7557986757520371 -0.27353382034871443 -0.26724769458195297
 -0.8714910217767974 -0.3883311843819356 -0.29191716708537374
 -0.6470020890016207]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.09005576687089556 0.12073492121295717 -0.006452819773993126
 0.06026478060047337 -0.17147176322800825 -0.19753873359728819
 0.10055827877413946 0.02388977597573526 0.046632529191056094
 0.03424689903780655 0.008906156052787825 0.11473047339819224
 0.0859004456412966 -0.004959086994875263 0.0556597112530073
 0.005110304678834287]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.17622388633917885 -0.9680121300028947 -0.8823873492710215
 -0.25045361093991453 -0.9817674714548495 -0.16640619006092552
 -0.45042178500011515 -0.15480359822186485 -0.3958223475640037
 -1.974381242457611 -0.9751369240533664 -0.3486231860871373
 -0.16371387117317085 -0.38317681680054716 -0.1875227000784164
 -0.16666265163084254]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.041333264095835 0.6533267043735518 0.014810719257509875
 0.01855815559005495 0.016974538823532868 0.06793211500537037
 0.7079955815058874 0.02398803864919101 0.37427576164162474
 0.19501692532703901 0.05765661409929229 0.014803660689459121
 0.027311219432113065 0.14376265708665067 1.2392797008541805
 0.032116990907464366]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6636468023418134 -0.4480217057563676 -0.9128968623371985
 -0.825233370113766 -0.736821490639838 -0.6998135919457689
 -0.4550506307472073 -0.7682406024904053 -0.5713116448721237
 -0.5723908978376344 -0.8235291613584252 -0.8064694718999342
 -0.3522481480880709 -0.5647940447848077 -0.9637639905120107
 -0.5240565608960512]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.34971643896713744 -0.17252675432999298 -0.3632796721643157
 -0.18223809646185749 -0.18611918579597753 -0.17260792494057317
 -0.15382380749342095 -0.19107358265811464 -0.1989956913860073
 -0.165007580790162 -0.1511368343064367 -0.3408290563662137
 -0.27110227144214033 -0.16421307134169205 -0.16393670408227073
 -0.23549235687279127]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06262364095307867 0.12768260498017112 0.06123597501218189
 0.04254674519047883 0.1212870077316564 0.0837385608029877
 0.05906723132656777 0.1473006098273819 0.3316211648952789
 0.06240010218236025 0.7017781712724632 0.5138486971028712
 0.1883810913962886 0.1322030629189579 0.040327265665290365
 0.08207330040833011]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.18862945278715107 0.08040441484660024 -0.004032907090682488
 0.030240233271402767 0.14087916101613973 0.038213532851812615
 0.11394983209421969 -0.0029816912749000765 -0.06068790132358976
 -0.03181568898129239 0.005714041805722249 -0.04836109077896131
 0.10701927025652372 0.11538674413021364 -0.06628596636688579
 -0.025412668850261916]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21484858739206183 0.38577427256519403 0.020452385748039113
 0.04724799363991077 0.016985532591440842 0.021725606484901086
 0.04033139401355292 0.015561588583072446 0.0652861407977611
 0.018527377959738835 0.0159157014336394 0.025034470330679532
 10.720489058889376 0.04415368774186277 0.022450796392284828
 0.024789891017014867]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6679471551499775 -0.2616564758551222 -0.29685980896060393
 -0.6135559742976563 -0.2458533901232697 -0.6964755423393798
 -0.2908628699312721 -2.821769586051317 -4.332224172758429
 -0.279190460968752 -0.8359430563146444 -0.9871873751315894
 -0.2845417295844008 -0.6639673330042816 -0.9266239181171847
 -0.31054651583942494]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7289931200432974 -0.15195465511193096 0.044020365884440735
 0.045410059756455866 -0.0030432001811456777 -0.25944393610315986
 0.15495994619620795 0.338855416197516 -0.22448616855010545
 0.22004924094964873 -0.13103867470682398 -0.15747293028536144
 0.3940096902985096 0.15623473316451006 0.3106142795643031
 0.29011738830765493]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8553293596650559 1.239759049800141 0.4038265694987937 0.420203598722283
 0.396389027336811 0.39433075897432834 0.7730837926908021
 0.6047635856336266 3.7523456744306634 0.4932911074801163
 0.40982276159592573 1.2309962650937205 0.3929415495449245
 0.740506218142278 0.4668663813434658 0.71349236264354]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.05742457750898 -0.30969792814663916 0.07926746728571474
 -0.5205047244801013 -0.43205799601347084 -0.8235021404874473
 -0.10445148747890481 -0.8950827869634165 -0.34514612429411573
 -0.544180610597055 -0.11446110354107562 -0.23276820983733446
 -0.8794325333978453 -0.44597850839533537 -0.9521295328440504
 -1.0479649644358027]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1377736178167694 0.17095282102126969 0.17971961159181163
 0.2323640506078868 1.1178049757312116 0.3777601433108644
 0.11981216782204061 0.24180668618083964 0.1372222874393039
 2.064826086224948 1.8902906711592633 1.3004752884451594
 0.24167738838849204 0.31763719375924315 0.15899669236894137
 0.12209162514494022]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.5162724246902088 -0.29704756481121125 -1.0676999628851118
 -0.3096002242510823 -0.2975660198424714 -0.8936880599450095
 -0.46662814273539727 -0.4474704629741499 -0.6030789960383027
 -0.6856610227247116 -0.30800045996349545 -5.958176084954001
 -0.5720408652429639 -3.2479842276592574 -0.3228229448467466
 -0.3013939422836519]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.32253504260605603 -0.25610521499448846 -0.08798446389938708
 -0.24603483005963928 -0.24481742749310714 -0.26206033389934946
 -0.23304751577668945 -0.22727061159416112 -0.19564111186516137
 -0.22438008059196168 -0.2455121165754209 -0.10666834596680869
 -0.12118792323694995 -0.24057843112729385 -0.2719078934204686
 -0.17636768629216154]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07185116652869888 -0.3283386441561843 -0.1047701714447676
 -0.08525748092776594 -0.2057255644459572 -0.646135341219381
 -0.18774116326698567 -0.15335517718285868 -0.12723003060153915
 -0.31113752868098155 -0.07310574546444394 -0.26840457949177726
 -0.7366279782576178 -0.13391695490836772 -0.8599374752806517
 -0.3513462715872015]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6010182724023108 0.9353038028050492 0.6560011446271417
 0.532022640239327 0.5701748008756442 0.4881735910786059 4.311333722787849
 0.5836871143446728 0.5009914244284398 0.8078044642966756
 0.6882333669313874 0.4920937558857103 0.616023113405204
 0.5368440056735401 0.5917459346824994 0.9270966275394498]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0420284615910087 -0.4550144963106864 0.4067700964838109
 1.3400929255907619 0.758836876308421 0.5662519326297601
 0.1933608415745699 0.6421070254415377 0.9086264729689817
 1.0221710212910264 0.7536013705877628 1.207063963448622
 1.0929537864620347 0.3793400862728883 1.0655127524085868
 0.775871368831442]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4507907136072171 0.43558504225803474 0.5302258409473168
 0.20097349686066873 0.6988820569325885 0.536622521963424
 0.395476295900628 0.40742187177991607 0.3011151096799717
 0.21405516180763173 0.1966269211157604 0.24167987348152448
 0.7514391805649152 0.29689399493394586 0.4014635897571056
 0.3663648515501394]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.002728137829689079 -0.010354249070547765 0.01212417046441069
 -0.004170782613916556 0.1353568369556735 0.2141195863091352
 -0.0068570419251441795 0.007375379884913685 0.0018174471894556055
 0.003229090100803201 0.013523860214700709 -0.01074639125799801
 -0.00263816522283925 0.009473516743808044 -0.00030904625368503424
 0.007051565403936385]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11823428749221743 0.1518842548545769 0.08838975705458856
 0.1388501729378688 0.048021597300859614 0.05472646656956679
 0.14690261014140982 0.14288139480210338 0.10811022031713027
 0.25767353892054856 0.41165225671416344 0.1280767374487962
 0.10792555762621187 0.12992350401748892 0.4790008163009247
 0.06334788986234105]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8914059067348454 0.6917012279091813 0.8198562821521659
 0.8147627421035535 0.8329431538261951 0.8769326106785995
 0.7703041117013044 0.9115196062412723 0.7396707588143636
 0.8468317944224077 0.9148475879199652 0.6763052814134749
 0.8521846101535986 0.7500883158196765 0.8815859346757866
 1.0170081380300855]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5411101360624418 -0.6529530745572019 -1.2595784802964274
 -0.5610527710229548 -0.504713120620242 -0.5287320424583452
 -0.6502147295835783 -0.6496943905687013 -0.519449637086043
 -0.6413776390472979 -0.5587781221330702 -0.5264339503370955
 -0.9557345595344359 -0.5614639532257942 -1.0420629986645935
 -0.5349393714232009]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33400826347048634 0.19207318108056667 0.5135183571124081
 0.4626844979481465 0.24210124873368624 1.1086288901016312
 0.4097904521828845 0.2732341001083857 0.2667534564243515
 0.2562202538788528 0.1866212395636029 0.3319216275354915
 0.16542344499466807 0.634186303143341 0.6675265323749672
 0.2086640131411585]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.33249852496141463 -1.21310177971777 -1.2101397281957114
 -1.1795791864965144 -1.2123580695560028 -0.3739369262999761
 -1.284413453074201 -1.3168227739665699 -0.5544032231155162
 -0.4122713345530896 -1.1656650830919515 -1.430033354075281
 -1.3471995283047842 -1.9054987455121604 -1.1551887001120213
 -1.2020209948148122]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.008686202551647197 0.024887999088462037 0.033288679521807335
 0.029659583920171942 0.018913900527143018 0.06056179648696917
 0.024999376358652674 0.0374213969865681 0.05350417545735518
 0.049207576833093535 0.04164309796390202 0.06865674959305625
 0.02550646116658604 0.020854556699447944 0.06019511994281526
 0.04024450039882837]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.09995474527463971 -0.07435886061794253 -0.13920418721577713
 -0.12395854297190495 -0.12472093344299297 -0.545756254729469
 -0.3169194414588943 -0.1434124796131196 -0.1811460989655868
 -0.08163378729699444 -0.08252488854512471 -1.9353298595699184
 -0.11698160263563712 -0.6868747474689387 -0.14929391141686232
 -0.11490887619568013]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0251237940067925 0.789910848839269 0.7279012987775143
 0.8562559104970646 0.935633304674974 0.8678540050041091
 1.7374571432990056 0.65693239788614 0.8749628982994189 1.1443588353692995
 0.6153860147389372 0.8365395184852239 0.6285755164914424
 0.799105294484596 0.6997631259746027 0.6427878751751162]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2109248039822798 0.009169784156813451 -0.007704881606974363
 -0.007404342842526775 -0.005394110697474103 0.02295531601036007
 -0.012619717632433934 -0.02991115571205331 0.019893822949624544
 -0.019636517491771983 0.16069897906016095 0.07101309068394568
 -0.04477160585463171 -0.016964736032890643 -0.02698112047196428
 -0.02542917316304131]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6534155064624229 -0.26873804018671155 -0.46650286448511513
 -0.43563251676265535 -0.6203099441580177 -0.23243712955842022
 -0.5629524932706379 -0.2376876629418994 -0.4260805121987632
 -0.748265470240197 -0.27118132551393803 -0.2674180090938364
 -0.8508544664884419 -0.3831027263077349 -0.2865817055055114
 -0.6648164048480293]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0895123140981386 0.1201449262769137 -0.006443935149720733
 0.06019781782241682 -0.16975081005648412 -0.19619618472351968
 0.10003456549337097 0.023734057442701222 0.04659868659634069
 0.03425561261599508 0.008748580575212484 0.1140324827938154
 0.08554541536784264 -0.004939855963359527 0.055663684775621815
 0.005130281127731638]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.1699842359538593 -0.9523742130852599 -0.893343577029692
 -0.24747332594461838 -0.9594754385452162 -0.16073912686561742
 -0.44544953528526215 -0.15027993129917272 -0.38664777862086064
 -2.0378547556160678 -0.9950614837366062 -0.35063879030218775
 -0.15931075044600496 -0.3732560227335663 -0.18203292941418112
 -0.16159386625768699]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0614290163510354 0.6500859952341913 0.015095907230416719
 0.018943144802109665 0.01734826025792635 0.0692049744538876
 0.6993951582931242 0.02431948960705407 0.374274841626782
 0.19828055727095145 0.05822974153617626 0.015090008191154356
 0.027984327377849987 0.1436241651149892 1.2234263428799756
 0.032410717111133705]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6632579406350202 -0.45051732285381896 -0.9101310503105848
 -0.8237702570345148 -0.7360225206010377 -0.6990976203012246
 -0.45733162861356347 -0.7672499302042965 -0.5722379584852614
 -0.573876246227323 -0.822052091878077 -0.8052296227321459
 -0.35459784692823904 -0.5653972733083255 -0.9619076181016976
 -0.5256120484062933]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3441818321747471 -0.17300960205314014 -0.36963589078461856
 -0.18228363774134185 -0.1861610486939504 -0.17334934036485328
 -0.15402241681490966 -0.19148776153629948 -0.19840398114965815
 -0.1649076882216049 -0.15121434309443121 -0.33733676550157704
 -0.2689111631916054 -0.16424493258926803 -0.16437165568076323
 -0.2385769698063359]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06301514227674272 0.128266237216276 0.06154020838641206
 0.04280040928317793 0.12178772653336786 0.08376707281610661
 0.05930303564953149 0.14704209053171569 0.3319093023347447
 0.06264546240301644 0.6996157539967138 0.5132470986871794
 0.18851128916410745 0.13190562093406014 0.04056333191335657
 0.08219544953983673]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.18772769815038912 0.08008274128550497 -0.0035742093587091406
 0.03032816599764472 0.14003579700446767 0.038090359323145195
 0.1132198680227764 -0.0025502662506128905 -0.06022471806258148
 -0.03127154100633274 0.006010173256618026 -0.047646048388361
 0.1063989692157149 0.11480355354427957 -0.06571541236327887
 -0.02485636197745257]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.24207135531740506 0.37311796381712775 0.02035705387126056
 0.045988455539586776 0.016706577026594095 0.021499406094176037
 0.04011496002517951 0.015351922001615278 0.06681505435099303
 0.018077287550203252 0.015635895839573158 0.024552334299857963
 10.707574697491808 0.044875832358272354 0.022072942834027467
 0.024762747162848674]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6676025804232283 -0.2642357815858907 -0.2995519236483413
 -0.621516813410797 -0.2474005718835215 -0.7037288999706789
 -0.2928192712703796 -2.803265108727799 -4.306152595638343
 -0.2806537050323642 -0.843292072098641 -0.9818801802981308
 -0.28713628555312654 -0.6689023004393163 -0.9340832274456087
 -0.31298404700113885]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7252494764680696 -0.14998533261457264 0.04397907194509085
 0.04542463171987692 -0.0021943428623120084 -0.2573550854196697
 0.15340777051513965 0.3368986133175208 -0.22211832160991207
 0.2184082394839924 -0.1298679104453832 -0.15755536947629373
 0.3919829709619342 0.15543947453250168 0.3083349627221983
 0.2882885390353803]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8471981778480869 1.2038402355934874 0.3900884366492732
 0.407351049609432 0.38285042282561904 0.37997071943683475
 0.7773635485753168 0.5966597656743076 3.9879844529478357
 0.48381226550803325 0.394395442851425 1.1896883545802939
 0.38057806637844865 0.7303920812820172 0.4521782624966986
 0.683596780339367]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1395243248219111 0.1739921053962402 0.18173932641062826
 0.23458255665881075 1.1048843751057005 0.37981164771600895
 0.12174050036562988 0.24449816277032718 0.13907429129106025
 2.0742135865497557 1.879711490879759 1.289500203809739 0.2442898647458355
 0.3186632301465295 0.16136906047590777 0.12361657986914361]
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-6\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node11848968-6:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.0573799298848332 -0.31264289511341337 0.0781992374584998
 -0.5200123656039686 -0.4354566249880204 -0.8244703948088925
 -0.10078438867947159 -0.8961594335351105 -0.343408567847193
 -0.5453490195019847 -0.11345069568388794 -0.2297586095682238
 -0.8807631034234159 -0.44307857404780654 -0.9531384277041662
 -1.0478619682039714]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.498903706385524 -0.2843820019755657 -1.0425193601092566
 -0.2968593125044543 -0.2848416328639904 -0.8678075094174985
 -0.4564592872372928 -0.4400154011627389 -0.5991967032537833
 -0.6701091357107283 -0.2960040943244349 -5.950378792805941
 -0.5442600294322615 -3.4633747253480918 -0.3113751244301167
 -0.2886445888860967]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07217529560999131 -0.32722493095292865 -0.10539763358849026
 -0.08575357921572564 -0.20519496348132832 -0.6435719412410557
 -0.18825558115482754 -0.15325267654886837 -0.12775612945464748
 -0.31210564553961045 -0.0734235206162098 -0.26958674142279815
 -0.7324933275538605 -0.13409011152039096 -0.8660523441783174
 -0.3485468513661286]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.32408619760844665 -0.25708144117093756 -0.08555754923949811
 -0.24633768359781047 -0.24510266609886877 -0.2631187172159149
 -0.2334059904450773 -0.22731106241055019 -0.1954631817069698
 -0.22486586465282693 -0.24623839847756318 -0.10450168468325946
 -0.11933996750836057 -0.2409091495114358 -0.27305949713816463
 -0.1757199779334202]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0019430914788708675 0.0015339329636455123 0.0006800388718640749
 0.0007283129899028074 -0.0010549525630583756 0.0032660688818149375
 -0.0010420139964382735 0.0013638456849310032 -0.004207679091752181
 0.0015225741426830308 0.0010921829952185158 0.0006767852952490605
 -0.0014878642781641638 -0.003065707360834724 -0.0006716962380899916
 0.002609263181899385]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6027829510214961 0.950944587997456 0.6549971744716591
 0.5332599899918664 0.5745021865456018 0.48794666308647766 4.2444499302708
 0.5863104671103917 0.5012718129548739 0.8067917793717748
 0.6897823860671568 0.4924038475936699 0.6219085589915018
 0.5368391645562327 0.5981142328786493 0.9562420490938978]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.44864279934733353 0.4372319590159126 0.5278290788600996
 0.2011077708851709 0.6984353626020819 0.5400977697960572
 0.39516442328298873 0.4091876402520394 0.3011958598508995
 0.2138848923172446 0.1965623265021033 0.2416627635315696
 0.750712805992349 0.2968504524376527 0.40069995769354017
 0.36635066077374534]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0398914597828992 -0.45013737171835816 0.4060454104635671
 1.3401501883586144 0.7574257690503362 0.5665592814457805
 0.19541576784001496 0.6416556274538614 0.9095996637223144
 1.0226891680871244 0.7527575910266847 1.2074266666536833
 1.0924593194979024 0.3775678999531995 1.0659827393133932
 0.7740853046495126]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0028944879787495634 -0.010499190288152882 0.011965319401382079
 -0.004855083714626141 0.13673913455745865 0.2161343376747089
 -0.006992361885114898 0.007121336285503203 0.0016365222027273588
 0.003036879384543828 0.013321623703817072 -0.011284227639076511
 -0.0027876147810238427 0.009257409040849904 -0.00046577662293144405
 0.006833819751701489]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00011874771759509684 -0.00017010638054326677 0.0013238862303693866
 0.0009977733891177731 -0.0005187719843385841 -0.001416642057200046
 0.0014912105758514427 -0.003950327076749721 0.0020079744914324738
 0.0018832723093602233 -0.005174999411687614 -0.00022966605931978856
 -0.0007123041185177481 0.002781105022057029 0.0008071310225438166
 0.0009992117652203591]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.11944396373922501 0.15121446563721183 0.08866544026802685
 0.13883457115506068 0.04843493927876628 0.055204076438060475
 0.14614327112487469 0.1437355436419098 0.10839075320082048
 0.25829486083559505 0.4086957719536004 0.12826597657803698
 0.10806999291043694 0.13071358420368684 0.47774959008014584
 0.06374426131533764]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8934344795005166 0.6890226653824468 0.8196957906805726
 0.8146282835364017 0.8330046507443186 0.877709722740984
 0.7689615649346374 0.9131459276695866 0.7385023502504124
 0.8476036252632903 0.9160651977633647 0.6731068140371637
 0.852544750070045 0.7483987110927628 0.8826644613632264 1.019459067566747]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0003226217842368928 0.00041253808678184956 -0.0004920349663299628
 -4.066284842618728e-06 -0.0003416588439308921 0.0011343164858835797
 -0.00022725846861426646 0.0002582799040856676 0.00012751372498698288
 -0.0008910838123125653 5.4922999098483416e-05 -0.0005542419604662729
 0.00039650752012515555 0.0007900960134640256 0.000445903002380732
 -0.0007871116160734215]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5391942761029417 -0.6476414216129656 -1.2945320947431005
 -0.5568021648409627 -0.5008380395023216 -0.5262352048772164
 -0.6431367545691536 -0.6514558634732065 -0.514017162932335
 -0.6457295411287538 -0.5550700236777826 -0.5217318821213754
 -0.9545187781641519 -0.5569305989981815 -1.0506552951219814
 -0.5297998747549935]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33287027370206 0.1927342658720638 0.5104464251320285 0.4629197310185283
 0.2421809267581693 1.1113351936001354 0.41042998029218214
 0.2742090514366841 0.26742281509988597 0.2554860228863807
 0.18685434638416815 0.3324999929846118 0.16620064087911504
 0.6321626341711719 0.66615540671864 0.20944815485880278]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3353663066909357 -1.2126022715433302 -1.216848377935168
 -1.1789467314932751 -1.2118462037479338 -0.37445018120650725
 -1.283565052326861 -1.3157554464837802 -0.5502143209090492
 -0.41105066713726846 -1.1656621632826765 -1.429862155046665
 -1.3484783080578875 -1.9032034623186258 -1.15616025375412
 -1.201119503913693]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0013736260714863058 0.000884073285750242 0.002095595167840608
 -0.00012862767563043276 -0.0007748589291093899 0.0018275222551035752
 0.0013418671988552344 -0.0011543837111969157 0.0007237188555315743
 -0.0020055929018590324 -0.005356549100733132 -0.0034976410802678437
 0.001916402144188173 0.0020238896531188932 -0.0008210599025665066
 0.0015520186694886473]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00902384563011275 0.024596723730664093 0.033072604916649054
 0.029414039622687058 0.01855346929458536 0.061953763659770136
 0.02490401019621833 0.03725208944989072 0.05318928417382573
 0.04902806660852604 0.04169590366874762 0.06978315468013396
 0.02522320853810865 0.020541292290563524 0.060492817786505115
 0.040182185406449404]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10076812661663413 -0.07517045477208006 -0.13987543412963926
 -0.12521798834346975 -0.12573769912147537 -0.5478896132882918
 -0.3182391684367812 -0.14456247554845714 -0.18209076678838165
 -0.08235973691617465 -0.08328585318907697 -1.9086072583921045
 -0.11794854635310126 -0.6983990601276663 -0.15090225467873453
 -0.11592478071741419]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0274127242684792 0.7894878338778945 0.7273050947006682
 0.8574819946961079 0.9375559490988199 0.8691684968769621
 1.735792229166595 0.6551117646616035 0.8764030861102415
 1.1465190384059207 0.6131027635488335 0.8374234925170055
 0.6264091574702785 0.7995907026992713 0.6985163303436704
 0.641267123561155]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0013914110815217984 -0.0004345956587087918 0.00021419837844943723
 0.0009479034897828253 -0.0006322233766201113 -0.002382415189021464
 0.0012185691830822187 -0.00014103105011009642 0.0033438095253323086
 0.0003961262779178798 -0.0009686188561486564 -0.0004310403491274428
 0.0014547380696045553 -0.0004178643242471747 -0.0012238610489404
 0.0004477160102762112]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21796525906265662 0.008735453791870365 -0.007961420995213214
 -0.007516617877586576 -0.005539641992246658 0.02240302062884182
 -0.012525540087616045 -0.02945915949598808 0.019612063364252037
 -0.0194101318570576 0.1551112971350853 0.06879097042246679
 -0.043772453011622574 -0.016957034169612424 -0.02653972289086545
 -0.02509790668994212]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6528984729610012 -0.26971136940379775 -0.46637703648867684
 -0.43578648208578935 -0.6201103014367881 -0.2330307046024326
 -0.5620814923016026 -0.2382503531816133 -0.42600583695084293
 -0.7473401873158445 -0.2720224799014131 -0.26795807660433507
 -0.8502753020431172 -0.3834182947834431 -0.2868749490201429
 -0.6638354389414908]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.09074398593196535 0.12184285301532462 -0.00697584982883419
 0.06072681219772178 -0.17329482057823753 -0.19955763496951776
 0.10142637615300897 0.02368769165632397 0.04686007004946451
 0.034318861268448735 0.008619057100245893 0.11576520299765385
 0.08658730628541746 -0.00538344222573799 0.056052869567314284
 0.004848300472455016]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0004302820062460355 0.001902227472404261 -0.00012188731056800295
 -0.0002157862698941304 -0.002672237618069395 0.0006267834540764627
 0.0007549369873703082 -0.002379746631621271 0.0012467269421764793
 0.0008527084228093784 0.0005841435735007283 0.0009119636508256035
 -0.00035322840192020255 0.0002665364388589331 -0.0024712854393478256
 0.0014984267356436543]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.1719206106277943 -0.9560723703155538 -0.8965679153215707
 -0.2477948514006049 -0.9607227569015673 -0.16210518526777462
 -0.44650831599343 -0.1520666496056642 -0.3883415491917075
 -2.019001056961489 -0.9900486631412886 -0.3519820254806703
 -0.1610886415022464 -0.37418056937405547 -0.18350942710140916
 -0.16360517294903354]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0854025896876156 0.646115039734343 0.01544747558992092
 0.019419000968751886 0.017811487830174142 0.0707692538599645
 0.6891105838746682 0.02472532777324306 0.3742365698810971
 0.20224958471886192 0.05893289080054858 0.015443034526628293
 0.028822267663793883 0.14345228257299167 1.204436299304814
 0.03276895855134102]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6634331145377952 -0.44741077097527604 -0.9143025861591512
 -0.8257593054804919 -0.7370179318417961 -0.6996760144784975
 -0.4544773856794556 -0.7684468673717179 -0.5710193147262338
 -0.5722409111802061 -0.824086301946108 -0.8069394041049333
 -0.351025510648656 -0.5641727464682977 -0.9648343085187553
 -0.5234465025040514]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0005473643501192615 2.2019225151659327e-05 0.0004764365711086016
 -0.001856020068859654 -0.0004934194144081416 -0.00019577805843229434
 0.0026524228069689793 0.0013759086378948293 -0.0003450500853576788
 -0.0015926638780954794 -0.0016993854738738268 0.0012340135082627435
 9.998498620628071e-05 0.00035038513004831406 -0.0019506856125368066
 0.0013744673758024073]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3415368119057038 -0.17370833993120116 -0.36650358444200454
 -0.1830043418548326 -0.18688460828896095 -0.1739790555944704
 -0.1545835110109859 -0.19223017540962406 -0.1988563084661888
 -0.16556343437971296 -0.15180489716728515 -0.3360461333828433
 -0.26844601129950413 -0.1648569080322404 -0.1650327975350511
 -0.23906211069849534]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06349328936859339 0.12897743175815748 0.0619116929919255
 0.04311054036248582 0.12239739846239646 0.08380273806290689
 0.05958920309550366 0.1467440458306677 0.33226079008659765
 0.06294467805585037 0.6970039933725704 0.5124785755411022
 0.18866596955564977 0.13154251526725505 0.04085139169144504
 0.08234097816323876]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1902525470449506 0.08089816622634394 -0.004418167492121705
 0.030173891993715205 0.14200892942020146 0.0382176868662525
 0.1148560141017304 -0.0033779831464893877 -0.06182707211306811
 -0.03257230704874412 0.005363436719440444 -0.04927921895006067
 0.10782107474679503 0.11626197221402469 -0.0674580038564942
 -0.02606219833326453]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0002353920377211327 -0.0005694182084458599 -0.0009444064691886411
 -0.002231441463179884 -0.0002714090746664122 0.00047880978581160694
 0.0010090644488208733 0.000589263760966463 0.0005890292327626612
 0.0003947723447610685 0.0019726351184714552 2.8213037590624213e-05
 -0.0016113367837154446 -0.000131873205146682 0.000667350344798201
 0.0002661391680806313]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.24419473777973527 0.3746053424130819 0.02098951567746956
 0.04694475793632596 0.017214258773286747 0.02210734828648866
 0.041082689991123515 0.01582411692283914 0.06775013049706506
 0.018559806801016095 0.016080082077490884 0.025199309927722985
 10.69507685673348 0.045873829710195005 0.022639192838189364
 0.025432509215015622]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6671297477871255 -0.2673785672395846 -0.30281517185051793
 -0.6312730835276241 -0.24927076281593913 -0.7126114322503314
 -0.2951774050601896 -2.7808591768896007 -4.274499434886232
 -0.28241943682571063 -0.8521759579742165 -0.9754173780159248
 -0.29028429718903204 -0.6748597098869814 -0.9430997653864499
 -0.3159340368418457]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7260954733039912 -0.15222177159163447 0.04414454284929643
 0.04488209021528234 -0.0031302496520352954 -0.2599515186188584
 0.15404441381208742 0.33864442138910006 -0.22504480317575132
 0.21965396676489068 -0.1295892483682926 -0.15757824591885164
 0.3937885341278171 0.156244983449258 0.310122325155517 0.2899244682035876]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8489365287574309 1.202164139782406 0.3930918586560477
 0.4099051132079317 0.3858103979455607 0.3830099980772187 0.77937480161384
 0.5986524978907353 3.9686579186527355 0.48611676030791046
 0.39724363877557556 1.1836649391325762 0.3834132766879063
 0.7312312341001377 0.4548949365195122 0.6817800224889521]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00019893055529227044 1.574403139972813e-05 -0.00029388939954666515
 0.0001625591551220884 -0.0003775236974128404 -0.0005614541428614617
 0.0003745835817259291 -0.00036821422705821116 0.0003644030761826844
 7.500602598209394e-05 -0.00029522921300420557 0.0013839535511599999
 2.4405100711250016e-05 -0.0005678339995074944 -1.2735349378623084e-05
 0.00027515606177791474]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1416519271877045 0.17773140226562487 0.18419010687258716
 0.2372720095399721 1.089298392136457 0.38226885892068907
 0.12410343277132126 0.24777859360239726 0.14133917059307502
 2.0855712024150903 1.8667695178992176 1.276132636551456
 0.24747267217852664 0.31988243001631544 0.16427571688607046
 0.12547323717648184]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.5145485785133503 -0.2901902473717327 -1.0422550798745767
 -0.30283681089198544 -0.29063256446520025 -0.8806673361522065
 -0.46351219304846036 -0.44712859643327396 -0.6080054380559662
 -0.6813401919101414 -0.3018937385064584 -5.86303558095885
 -0.5481749674989448 -3.4492388602436588 -0.31710394690967464
 -0.29456727501329494]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0018014504569734968 -0.0004232545779160324 0.0012822674442894977
 0.0005120587866602189 -0.0007025247893710507 -0.0006042358839183082
 -0.0004262859813216058 -0.0006307799267341874 0.00024275017618832773
 0.0017868691234879663 -0.0007933073784583966 -0.0002691331217068993
 -0.001121423008217659 0.000796398287068012 -0.0008103478126058605
 -0.0006405017944167701]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07257035380811626 -0.32589308736311984 -0.10615989613446891
 -0.08635958358970765 -0.20455370845350107 -0.6404294072250378
 -0.18886759165748507 -0.15312906990053343 -0.12840031389823534
 -0.31329152300173996 -0.07381058281809483 -0.271007311194205
 -0.7274957877809082 -0.13429017463296258 -0.8734505215640642
 -0.34517236042299915]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6069461602404073 0.9518300693682392 0.6591909586669658
 0.5383379269658286 0.579631155687448 0.492548505558051 4.18147550921982
 0.5911254495457724 0.5062356151165984 0.8076904746722618
 0.6939594755089082 0.49696777918925406 0.6268578624008742
 0.5418008856930009 0.6029103690795194 0.961039585090557]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0018813135847620122 0.0013433195203467752 0.0006950112961371935
 0.0006986831328122944 -0.0011037158467253616 0.00326174103313287
 -0.0009470928102110476 0.0013399207281036274 -0.004121253907160061
 0.001498311482811765 0.0010895465154174833 0.0006862461626925276
 -0.0014560829551416021 -0.0029910893508389713 -0.0006541189592108865
 0.0025418875425964327]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4460362412229212 0.4392401220403911 0.5249224789794217
 0.20126546375363447 0.6978923095637543 0.5443712096758472
 0.39479624734568275 0.4113294687267617 0.3012840409239725
 0.21368159061918485 0.19648134205930926 0.24163300585500164
 0.7498618843010975 0.2967808102553215 0.399740366751656
 0.36629994106683056]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0028017891600400305 -0.010377676221001168 0.012016602115097473
 -0.004642265109769658 0.1358703423860525 0.21575975719724788
 -0.006871406013459615 0.0071891863785797875 0.0017024324401674596
 0.0031050490111134035 0.013338716662647791 -0.011120111786770224
 -0.002714828444341338 0.009312657645006345 -0.0003944595901599658
 0.006895431582646603]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-9.229262574711461e-06 -0.00021792614763455065 0.0013655380163933306
 0.0009301772775444361 -0.0006427693730546302 -0.0015114434418908862
 0.0015399662713865558 -0.003840188678631923 0.0018405259198934765
 0.001872405193055593 -0.004988974875189484 -0.0003198826299880553
 -0.0005853803380087008 0.002690363488267622 0.0008195693833292772
 0.0010572491971017062]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12092573415541089 0.15041140477146117 0.08899992116605702
 0.13880166321507786 0.048941310550778994 0.05578736331390805
 0.14523455460914064 0.14478120889534438 0.10873230091175551
 0.25903762295677574 0.40513535657053545 0.1284823712779113
 0.10824787434894803 0.13165567981676257 0.47619169168449804
 0.0642350041164301]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.540769787442122 -0.6483301831616426 -1.2884475363363523
 -0.5572059892714598 -0.5024638144305568 -0.5279016592474423
 -0.6437648411191734 -0.6522554616521486 -0.5154689683439821
 -0.6450279151454908 -0.5554373473226487 -0.5226463526368882
 -0.9527701611381555 -0.5581028068244811 -1.046612414005328
 -0.5310837385435511]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33149940953564583 0.19353459223163175 0.5067706692815128
 0.463220680908276 0.24228172064687184 1.1144895971366484
 0.41119395501557066 0.2753930731616485 0.2682383159276956
 0.2546079503463438 0.18713370109681993 0.3331857745154941
 0.16714637101818314 0.6297260423629724 0.6645304055373168
 0.21040360307199663]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0002621236654098136 0.0004253845044843718 -0.0005267792171186614
 0.00015189788348968225 -0.0003083210616490195 0.0010393075944785668
 -0.00025878683219066057 0.00010913187956640424 4.1378043585893476e-05
 -0.0008703979116620186 -1.792284065588179e-05 -0.0005413600912839989
 0.0004757410280791796 0.0007161290270850107 0.0005436847164279057
 -0.0007169630572276819]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.008617224851426186 0.02461721114141448 0.0331378592607488
 0.029466020738737657 0.018557310498626245 0.06162134484969141
 0.024872768421457074 0.03730289467592668 0.05317741837027301
 0.049010281857380544 0.04171660492475933 0.06960815596175061
 0.025171941946768837 0.020564203312793756 0.06042840505608132
 0.04022357222822793]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10174316151805901 -0.07615208567806234 -0.14066223624305887
 -0.1267370100036424 -0.1269537739611417 -0.5503639785890414
 -0.3197668402796763 -0.14593607586277177 -0.18319597385394626
 -0.0832317494134655 -0.08420053526554927 -1.8763846643118882
 -0.11910191255832035 -0.7125644717366408 -0.15284398350693665
 -0.11714076463728168]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0013752326620635746 0.0008796445855608348 0.0020132977552008435
 -4.086049987522822e-05 -0.0008344648971114199 0.0017670274964400878
 0.0012644472385703043 -0.0011908141991555932 0.0007109066132633124
 -0.0018289540687841388 -0.005177378905495161 -0.0034275028072839886
 0.0019177838193895902 0.0020071468537833925 -0.0009305732495252517
 0.0014950616029585362]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21771795681640693 0.00885202350319696 -0.007945686082598841
 -0.007533379579478871 -0.005544608102304335 0.022614195318789044
 -0.01255030767522598 -0.029595586230606333 0.019813375074379882
 -0.019498322554770367 0.15599034246591892 0.06822095062425289
 -0.04382041524927383 -0.01702783406099531 -0.026630853329744835
 -0.02522341560052395]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6522613010167265 -0.2709091446570284 -0.4662205205424446
 -0.4359562700193969 -0.6198413413114933 -0.2337560673549913
 -0.5610272346810128 -0.23893420088467018 -0.42592351853994587
 -0.7462449264059741 -0.2730488470952648 -0.26861351062879313
 -0.8495390198770142 -0.3837925604388606 -0.2872302564599374
 -0.662678058108777]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0014474018962666313 -0.00041397098331097393 0.00015253359063280292
 0.0012086270194059667 -0.0006623854869974855 -0.0023554291914240633
 0.001052135716026914 -0.00015897471844142363 0.0032858473335602434
 0.00040335509796757263 -0.0010095199833558832 -0.0005548533402102152
 0.0013704848592461794 -0.00031471271940419765 -0.0012359588645362019
 0.0006802235671072021]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.1744345423287821 -0.9605368084767165 -0.9006033448558092
 -0.24825948499927555 -0.9621850311233618 -0.1638863303075551
 -0.4478598061987993 -0.15438470322183404 -0.39045775281586187
 -1.9952286761528124 -0.98360778496167 -0.3537017108875119
 -0.1633936361827447 -0.37532514135564365 -0.18543179669490667
 -0.16621921057257488]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1138179633414493 0.6412549356597318 0.015881117469011878
 0.020007888063378255 0.018386757134490547 0.07269189070762573
 0.6768804428959327 0.02522171687952742 0.37413628977761637
 0.20706756322366313 0.059794725670418755 0.015878518638614055
 0.029868514808040005 0.14323745636180124 1.1818120225327085
 0.03320484417474827]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00039419849467633994 0.0018398881615053764 5.770312693062496e-05
 -0.0002631605813032123 -0.0027030225940717356 0.0006915396340747559
 0.0007713743894570135 -0.0024000929675807026 0.001147167922526393
 0.0008230232157137862 0.0007363968037190083 0.0009819073870071249
 -0.00021595157408543786 5.316892904061454e-05 -0.002593674395666601
 0.0014679310374087207]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0005358431661041108 -8.243692906029221e-05 0.0004960509379356437
 -0.0018038202917684543 -0.0005015729866669205 -1.6605548774417667e-05
 0.0026224655878802905 0.0012910787012977987 -0.0003257599324273941
 -0.0015141632621095968 -0.00160893957906999 0.0011589897459500786
 0.0001893254737721506 0.00019908621304703944 -0.0019365658159263555
 0.0012970245198163644]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0640765624172437 0.12984268171371613 0.06236464526155781
 0.0434892674888483 0.12313848124191099 0.08384712318294558
 0.059935368566894916 0.14640423306049233 0.3326871785127336
 0.06330881487773765 0.693860869464458 0.511497320751529
 0.18884920776452688 0.1310985581364506 0.04120228817650817
 0.08251263104879113]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.33822721542282924 -0.1745939389477437 -0.3625682174741272
 -0.18391078009731995 -0.18779400925161116 -0.1747749058257393
 -0.15529821089500914 -0.1931622952733666 -0.1994323644227089
 -0.16639807633151665 -0.15255780078068487 -0.3343766779462175
 -0.26784022863565493 -0.1656306244503695 -0.1658705623315962
 -0.23966312131260925]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.666475717024577 -0.2712028218103402 -0.3067602628077673
 -0.643231878423206 -0.25152374591933285 -0.723491153340359
 -0.29800820228516073 -2.7538001997166472 -4.236152394793783
 -0.284542016754691 -0.8628815854143678 -0.967557953227896
 -0.2940942952197444 -0.6820246893015829 -0.9539651123049075
 -0.31949333608294217]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00013663228637383895 -0.0007807857093553583 -0.0010631108666448452
 -0.0021829834368977674 -0.0002947549345483913 0.000509881845379534
 0.0010249339894702891 0.000775536847141739 0.0005399809282417567
 0.0004655473540732258 0.0020530141414839 0.0001256214982165993
 -0.0017173854549467071 -0.0002320679414149207 0.0006014935477567929
 0.00031171047841901944]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2471627481271198 0.377191058338554 0.021855815307441545
 0.048249366932735877 0.017907576927178138 0.022940160301207508
 0.04241575337658034 0.016469579912741863 0.0690419606880471
 0.01921827968932112 0.016687986190135506 0.026077826639839045
 10.677351843377537 0.04724858114713819 0.023410614155608803
 0.02634533446934368]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.14422993409205676 0.18233335045757532 0.18715439778820225
 0.24052049988188864 1.0705606315685345 0.3851913655714452
 0.12699668717766102 0.25176870651732663 0.14410544103289918
 2.099314987067187 1.8509329327205113 1.2598815176071732
 0.2513426797342912 0.3213158841257937 0.16783417321896582
 0.12772811845147244]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8511191217555237 1.200006978870606 0.39694891605109445
 0.41318353879069897 0.3896113308476061 0.3869176126627432
 0.7819547860148648 0.6011837145544181 3.94373640637916 0.4890707336000363
 0.40090683191841425 1.1759858180887863 0.3870529739382102
 0.7323294611512832 0.4583908243604849 0.6795490136125458]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0002154261531020496 -3.836435755091849e-05 -0.00033246902951444834
 0.00013301622161071558 -0.00033729056010536884 -0.00046904417386342545
 0.00044953615188120244 -0.0002748612020725405 0.000336374076013668
 5.22508109787323e-05 -0.0003500950951535464 0.0013802678175579008
 -4.8990352931238546e-05 -0.0005094685304325997 -3.349123402104914e-05
 0.000258055610705743]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07305114614357941 -0.32430765547806817 -0.10708396979326847
 -0.0870992039116746 -0.20378031058925045 -0.6365765224686607
 -0.18958993777218858 -0.15298027714230023 -0.12918887217164154
 -0.3147444363840963 -0.07428124062290203 -0.2727053638272985
 -0.7214750038351571 -0.13451737560178972 -0.8823807248530919
 -0.34111923285021156]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.534304503226545 -0.297663429500324 -1.0416267667754746
 -0.31052035774050923 -0.2980832214921397 -0.8969919892766661
 -0.472502359949548 -0.45620429524422856 -0.6191835064978853
 -0.6956554970918765 -0.3094608953502077 -5.752935816789557
 -0.5531319531610803 -3.4302235779560073 -0.32445581266599705
 -0.3021874231297301]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0018752524784878544 -0.000498486101242257 0.0013369720912962402
 0.0005179195355019539 -0.0007045823247516791 -0.0006771784698064165
 -0.00027337588077600006 -0.0007025285742300325 0.000216703972343385
 0.0018194333885019343 -0.0008508122465545331 -0.000326031236782931
 -0.0010235385252551077 0.0008223054505492322 -0.0008459976511600298
 -0.0006860559061213634]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4428790189610325 0.4416872094792723 0.5214043320202795
 0.20144836103207397 0.6972320582039421 0.5496322583335975
 0.39436511076315983 0.4139222012477513 0.30137551945186397
 0.21343931389540152 0.19637883887027105 0.24158319903430917
 0.7488799634094455 0.29667126399416766 0.39852919186273683
 0.36618868258148385]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6122350578214854 0.9528897203237654 0.6645125299732999
 0.5448192107010484 0.5861654016353168 0.49843370224203504
 4.101404109615874 0.5972592473883572 0.5125791056343819
 0.8088134950693874 0.6992472351127899 0.502805578877729
 0.6331589915804476 0.548132381846473 0.6090242402150354 0.96706777396608]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001931380254022591 0.0014880613681176325 0.0006812353491528755
 0.0007280596238896653 -0.0010685336826407599 0.0032692367185653826
 -0.0010199716975307638 0.0013641877148027892 -0.0041869436984485475
 0.0015159302256140261 0.0010905693892352408 0.0006779525637238271
 -0.0014825622625219137 -0.003049742757499474 -0.0006694491286401982
 0.0025933505282024483]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12273916845897889 0.14945231173786194 0.08940400570190551
 0.13874174771063116 0.04956113589335906 0.05649880205939359
 0.14415068154664804 0.14605951149621463 0.10914709562311996
 0.2599247843188034 0.40086716692262964 0.128724801270732
 0.10846583613065716 0.1327699524276395 0.4742509682450047
 0.06484309281721713]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0026784799925325346 -0.010217514612572545 0.012086961186842982
 -0.004365009664601604 0.13475361764432975 0.2152199788084723
 -0.006711965444019541 0.0072806884951938135 0.001790862315249667
 0.003196418315763092 0.01336769881054992 -0.010905966668869456
 -0.002617441056572709 0.009388065622460272 -0.0002992527545071697
 0.006978978087830648]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-9.512206811390644e-05 -0.00018297577668574538 0.0013326312285865671
 0.0009833377963867906 -0.0005485039495736199 -0.0014419947990309823
 0.0015009575769491246 -0.003922846646285977 0.00197161292792436
 0.0018810996203683927 -0.005126658896417613 -0.0002514475822494311
 -0.0006792154792549798 0.002762588723069559 0.0008075694412228718
 0.0010089678831060045]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3298533748650187 0.19450053038595194 0.5023930668265358
 0.4636075393314852 0.24240928607559345 1.118123605042975
 0.41210089293469104 0.2768283002810941 0.2692302151170245
 0.2535632908659539 0.18746634591182704 0.3339926177815119
 0.1682952694105367 0.626805504659284 0.6626196703176092
 0.21156635198753562]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5428070053204562 -0.6491894398751726 -1.2805805726091757
 -0.5577397042897903 -0.5045620377350468 -0.5300515346893157
 -0.6445508576662331 -0.6532845815970135 -0.5173467717253442
 -0.6442072557334496 -0.5559275480359855 -0.523834825009914
 -0.9504701568867484 -0.5596235423141595 -1.0413705986219437
 -0.5327425445116746]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0003117450684153311 0.0004143290804859978 -0.0005016123688071916
 3.125793751346251e-05 -0.00033174731832441573 0.001111878111818343
 -0.00023424139970917857 0.00022351097392592223 0.00010631765467955523
 -0.0008852995851356127 3.7924494677599174e-05 -0.0005542994091114195
 0.00041739631143761224 0.0007742268345152237 0.00046990133939539547
 -0.0007677975889473498]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10290505745344605 -0.07733520032925834 -0.14157287432821403
 -0.1285614727131673 -0.1283987130141511 -0.5531906176710963
 -0.32150613407138356 -0.14756543249910925 -0.18447188658670308
 -0.0842736091662822 -0.08529424191110412 -1.8376760988865624
 -0.1204676163979196 -0.7299938980976626 -0.1551792700376481
 -0.11858709425577531]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.008100224408106843 0.024644854713997168 0.03322114597035415
 0.029533302967802787 0.0185643056534225 0.06120266709932427
 0.02483507954682467 0.037367087940947494 0.05315929187848765
 0.04898528191105887 0.04174254840942655 0.06938119880161984
 0.025109156465777615 0.020594811415557662 0.06034265620275506
 0.04027560382396234]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0013786273573693775 0.0008800873930686626 0.002077257994421572
 -0.0001085200305569467 -0.0007884712981380271 0.0018149154191067218
 0.0013216149183122583 -0.0011676117864330426 0.00072241720804192
 -0.0019633870397018915 -0.005308636260179661 -0.0034826368794256823
 0.0019170882490428809 0.002020484983956683 -0.0008540863962143708
 0.0015408561673303789]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6514756368120137 -0.27238477471944095 -0.4660254346012575
 -0.43613620129259745 -0.6194766281306634 -0.2346421476967312
 -0.5597539765421117 -0.23976388445389657 -0.4258358744665475
 -0.7449604136820362 -0.2743002906674262 -0.2694073562641499
 -0.8485954466146692 -0.3842326219721751 -0.28765979687512955
 -0.6613262932314858]
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node11848968-7:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2173886238806395 0.009003128360781175 -0.00792313008286617
 -0.007551286225941558 -0.005547840499101106 0.02288507870701229
 -0.012577694934409037 -0.029764692215990547 0.020072416676927284
 -0.019606847155782037 0.15705827857026583 0.06750966753588557
 -0.043871795868872625 -0.017114643925206896 -0.026741430148139227
 -0.025379397337780593]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001405729104424741 -0.0004306084412842859 0.00020064250069903866
 0.0010133417014028534 -0.0006392613185949858 -0.00237456085209814
 0.0011799485836339607 -0.00014321992636404102 0.003335073368693764
 0.0003972965365747205 -0.0009814556443768774 -0.00046041539745195204
 0.0014319512948537394 -0.00039681293627280567 -0.001228461833200245
 0.000502271468210802]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.130692473199198 0.6382881098725258 0.016148316681611184
 0.020371803098058153 0.018743358046374264 0.07387284720360343
 0.6695895425369218 0.02552540541357732 0.3740470023420299
 0.20999402014975893 0.06032305580145157 0.016146874708507074
 0.03052013396060594 0.14310432581609403 1.1683049723562797
 0.03347040615216065]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001062169094050186 0.0005446495751195712 0.00031727417783528056
 9.090780633960738e-05 0.0008305811806291752 -0.00159261835418123
 -0.0032279829753701084 8.66503662210194e-05 0.004693151292402942
 -0.00101718187665506 0.00019114296719546786 0.00043685178257096835
 0.0008077706781836336 0.004559457816022405 -0.004746223519204007
 -0.0009122618230600898]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.1777064928506902 -0.9657870615383882 -0.9056089767839764
 -0.24894185678776135 -0.9638436179183609 -0.16621769348955837
 -0.44958432728743286 -0.1573988619335638 -0.3930799738171843
 -1.9654085110142103 -0.9753502617105725 -0.3559011987953566
 -0.16638824275547123 -0.37672953861927005 -0.1879433672398297
 -0.16962577859423283]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0004197039788298995 0.0018893030710383507 -8.068325688759259e-05
 -0.00022694805933273776 -0.002678640048410952 0.0006352635915329863
 0.0007589575450735464 -0.002385290970957299 0.0012238482071940116
 0.0008463970996676895 0.0006215920410892473 0.0009324635322321695
 -0.0003232311623645179 0.00021556760987856416 -0.0025033444770258817
 0.001494449256102648]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06443241359771196 0.13036926012820033 0.06264089321434213
 0.04372055135697534 0.12358917379893387 0.08387472278687888
 0.060145003053199704 0.1462096359934808 0.33294571900570175
 0.06353053325553924 0.69196563403188 0.5108757724704928
 0.18895828725428424 0.1308272546441805 0.041416098399270004
 0.08261427867527564]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3341168145847217 -0.17571144950143613 -0.35765937096073835
 -0.18504293597651342 -0.18892877015025336 -0.17577564907465307
 -0.1562060742296475 -0.1943238981359702 -0.20016334495466634
 -0.16745704626559574 -0.1535152772863927 -0.33221755658489627
 -0.2670503194491112 -0.16660391918688963 -0.16692755827278433
 -0.24039904478483476]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0002115884062097173 0.0009520041485054642 -0.005213479524319303
 0.0012038626013433917 2.5584258551591965e-05 -0.0010575773077088901
 0.002046367527989895 0.0010716466525996782 -0.0005184134991824962
 -0.00032224570547531584 -0.0004127770485379545 -1.7708248351289146e-05
 0.0006556126229826098 0.0011190981060415495 -0.0007074198264793163
 0.0013870336482501022]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0005427700598181762 -4.356749468081844e-06 0.00048029315989162047
 -0.0018457051206173802 -0.000497676146153675 -0.00014571237051425046
 0.0026519416006258456 0.0013565794971139855 -0.00034095837210679214
 -0.001579056508350496 -0.0016765138823742198 0.001215090875305025
 0.00012221082069979738 0.0003126600141000746 -0.001948711042455753
 0.0013571441644863458]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6660363320942249 -0.2735304779001196 -0.30914725196111725
 -0.650558063964405 -0.2528828437668688 -0.7301525379397729
 -0.2997102875822191 -2.7374409632421552 -4.212904536442778
 -0.2858200291846065 -0.8693399427662414 -0.9627775960673697
 -0.29640183536396136 -0.686339653180689 -0.9605198687658589
 -0.3216431442049158]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2514109818861057 0.38166578316687283 0.023065770177662297
 0.050061906609943196 0.018872524166860638 0.024103423144189815
 0.04429000226361552 0.017368998647520596 0.07086516116712017
 0.02013394309134782 0.01753629232165614 0.02729201745751069
 10.651632725620082 0.04918129337854248 0.024480999619459657
 0.027612662862039818]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0071831766246736595 0.009326259376666812 0.006391343044881148
 -0.007933094063918206 -0.009935243728052046 0.006966989230679704
 0.006313989315285762 0.0001864529257246672 0.002869075930323123
 -0.015179221471200655 -0.004200024606240665 0.0035788020767889006
 0.00011955085646597752 0.007221404964637884 -0.0033204331001994714
 -0.009589027376516318]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00021390492592501809 -0.000621787499494153 -0.0009783170881353942
 -0.002221402483223389 -0.00027654819441635947 0.000486388118144665
 0.001016744807535247 0.0006339466329742804 0.0005819682936281101
 0.00041188412289278054 0.0019954276298199403 5.251429955652198e-05
 -0.0016421762521377503 -0.0001528468063392574 0.0006530814516906291
 0.0002750278934288697]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.14579247442164692 0.18516195372856853 0.188948395355197
 0.2424841360036153 1.0592775408134623 0.38693321950857146
 0.12876691273353766 0.2541959178308083 0.14579436432918466
 2.107642340190334 1.841247000877094 1.2500003609210808
 0.25369627499141967 0.3221614017281136 0.17001125128814443
 0.12909776229220768]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8538391595157775 1.1972299040844312 0.40189710644536725
 0.4173872610927947 0.39448709552590655 0.39193777633668675
 0.7852576353265844 0.6043871263752953 3.911605382334571
 0.49285190336531803 0.40561481971979174 1.166230224849407
 0.39172036692137574 0.7337689934042315 0.4628866228564601
 0.6768466844424782]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.010457311496994914 0.0005473738166232867 -0.0047611747388033865
 -0.005547554683274697 -0.0059546332233407495 -0.003212782992303709
 0.014239650904826678 -0.001625102275594259 -0.0037913127296330673
 -4.269487666172522e-05 -0.0010603410027954785 0.0035010073733484637
 0.005979209811384473 -0.005274104944264946 -0.0037240556927546076
 0.0002692037562480043]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0002030655016844185 3.1318834356197645e-06 -0.0003028229815243977
 0.00015637801347268 -0.0003686468549344568 -0.0005409287623744097
 0.00039327306103148496 -0.00034743248594765186 0.0003578214321596773
 7.020973428498167e-05 -0.00030801411814815327 0.0013841854980741197
 7.325188014856154e-06 -0.000554114412038953 -1.7844572244102297e-05
 0.0002705448784233455]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07334388247594513 -0.3233614027302914 -0.10764451531636715
 -0.0875506393773613 -0.20331330200483685 -0.6342166133476089
 -0.1900175230638499 -0.15289073640984058 -0.12967151067670954
 -0.31563455643932276 -0.07456758386248842 -0.27372217950710326
 -0.7178423346287572 -0.13464701321971534 -0.8877770723165441
 -0.33868040806843747]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.5590889709725895 -0.30726968226109924 -1.0403749043482704
 -0.3203844455917821 -0.3076601817216194 -0.9176071045932865
 -0.48391994633492524 -0.46774459364648646 -0.6332964868312166
 -0.7138310643171609 -0.31917015496465856 -5.615041836704527
 -0.5593754609047549 -3.4045094072169295 -0.33387525150714886
 -0.3119819139313208]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0001307285625562482 0.0027571306994034206 0.0010317355826531815
 -0.005648120302948367 0.0018207116102459397 0.0031365083659159743
 0.0028073565157296088 -0.003978349621187094 0.0010343296535809954
 -0.0002070202064547444 -0.0015079396122693045 2.1487144848064688e-05
 -0.006943837632042482 0.0017430224180997322 0.0036018348028381553
 0.00020042201902970014]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0018198154056155436 -0.0004413184785067581 0.0012989498702936086
 0.0005141818546174626 -0.0007050980685600061 -0.000621925071863344
 -0.0003936399256376788 -0.000648071544574913 0.00023645260566240722
 0.0017937463391627384 -0.0008074353376919807 -0.000282833405396532
 -0.0010942604021611513 0.0008027593983371273 -0.0008197412001653692
 -0.0006515820391325977]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.44096489831772057 0.44317881063538733 0.5192727205264792
 0.2015549507819239 0.6968301480335297 0.5528675597490812
 0.39411164503734725 0.41549278758768726 0.3014226383987558
 0.21329444571374392 0.19631431724488618 0.24154567943591326
 0.7483113034007377 0.2965912873680673 0.39776879910386853
 0.3660945318056599]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.001577865866054351 -0.0002537389310510174 -0.0031593250367099313
 0.0018523524607395314 -0.001378663093116017 -0.000595633832601028
 0.00022524766972076282 0.003899376461989068 0.0005209508895993031
 -0.0014648962352732386 -0.0019772727079637176 -0.0011634082839913629
 0.0009355136007719589 -0.0011641217962241046 0.0017387803449980255
 0.0004069726230564452]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0019278922830955059 0.001428358289503051 0.0007652261777426617
 0.0007223410820293985 -0.0012053689177876081 0.003370721622573347
 -0.0009929492679664476 0.0013875287822286697 -0.004204601453570239
 0.0013422685199310225 0.0011114657135720685 0.0007437297080725713
 -0.001479557253940833 -0.0030425811417970627 -0.0006567920925106552
 0.0026381025150156445]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6189252820650103 0.954123281366637 0.671233052405059 0.5530668660334134
 0.5944602043453754 0.5059421559481849 4.000011295305266
 0.6050455357224386 0.5206644877297999 0.8102027076885928
 0.7059048564909658 0.510255323183318 0.6411513347993045
 0.5561871077142079 0.6167918028232295 0.9745824883827042]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12384816735471692 0.14887818870130654 0.08964835428718607
 0.13869469032512935 0.04994040856392898 0.056932727181813476
 0.14350245809152704 0.14684071071301572 0.10939926538028252
 0.2604570088461446 0.3983029694715886 0.128861315028487
 0.10859939317286368 0.13343045662368846 0.4730457132639103
 0.06521923535520643]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.007244995280668437 0.0057707516502156775 0.011622888070436821
 0.0021317906899077366 -0.007001675043353944 -0.0024098756393914067
 -0.0068466468919093915 -0.007769007964450653 -0.007616864569924997
 0.0021217226186678317 -0.004051131678033726 0.006182639886960745
 -0.0009304050129697039 0.00036852899800454697 0.0011977773987816298
 -1.5487793608159883e-05]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0003839880510999871 -0.00042085883180975614 0.0014202102650423543
 0.0009284841576252811 -0.0009174020481739209 -0.0014984661003771271
 0.0015697315860456196 -0.004004067916843823 0.0020009863900705693
 0.0018617979308470922 -0.005137808851152781 -0.0003483750438163513
 -0.0006023519683130418 0.002707163144004765 0.0009074393529757974
 0.0011495298827760292]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0025133167456450637 -0.010005310815919377 0.0121845451309687
 -0.004003025168990962 0.1333198531006218 0.2144313483434754
 -0.006500714725864525 0.007405211606329837 0.0019105542968800753
 0.003319930257209036 0.013416020351284273 -0.010625678335508388
 -0.0024860543211588215 0.009492060893799226 -0.0001711340201979686
 0.007093349245733584]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3288634098327993 0.1950843339492064 0.49977890493026145
 0.4638543474216201 0.24248981188976107 1.1202236805270605
 0.41264116319594 0.27769928720759285 0.26983400636199073
 0.25294037961449456 0.1876650829079244 0.3344690377001116
 0.16899368584469823 0.6250519415867539 0.661492396612748
 0.21227439221166533]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00036852013289373486 -0.006554340900397998 0.0017329187657720846
 0.0004654844089318211 0.008812323617536977 0.003372851674590671
 -0.0003467555008272727 -0.0034697105307076315 0.0005991913319282616
 5.845831073053587e-05 -0.0034128056667113993 0.0007378037013778815
 -0.0013370227927727296 0.0002912830519158638 0.001204041643278253
 -0.0017852009817512227]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5454423092625295 -0.6502513161015246 -1.2704072203789047
 -0.5584494613484252 -0.5072703919338866 -0.5328249311861619
 -0.6455261525141543 -0.6546077361882326 -0.5197770722957608
 -0.6432808956210245 -0.5565868480990752 -0.5253826383604406
 -0.9474296451816472 -0.5615988034201068 -1.0345668359229436
 -0.5348867188066059]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00032694822095702403 0.0004668020745983714 -0.0005108676027230918
 0.00010806391440215668 -0.00034586605049247154 0.0010955613020016686
 -0.00027162707949923703 8.236202565348183e-06 3.366636337653883e-05
 -0.0008802112478302482 5.985137582831257e-05 -0.0005753508979549626
 0.00045448973742073795 0.0007608933294676601 0.000710615637635359
 -0.0007873088378380355]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10359884708187228 -0.07804898221404377 -0.1421019957929452
 -0.12965874349438808 -0.12925917527700118 -0.5548121864912895
 -0.32250043305935044 -0.1485341920179366 -0.18521125965379187
 -0.08489721646888705 -0.08594933023815955 -1.814386843502712
 -0.12127824663827028 -0.740707133357549 -0.15658547860371885
 -0.11944915352756752]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0026360431407722873 0.007566576301129224 -0.008855836275408424
 0.0018771648905771543 0.0022964992402209894 -0.004419685882314284
 0.003702316531896732 0.0003780519141965144 -0.004635746878823899
 0.005422792051802516 0.004924429685112752 2.488358151089831e-05
 -0.018899850600851448 0.0034095738358245198 -0.0003668782456199282
 0.004939666709974977]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0013555507635426012 0.0008353379072223999 0.0021001305469418308
 -0.00012753429422124318 -0.0007728409423711224 0.0018365161019232024
 0.0014634083148252208 -0.0011912105365083359 0.0007267251650303896
 -0.0020430820985132825 -0.005363073179483424 -0.0035322228412015266
 0.001918084924846103 0.0020220081811184454 -0.0008415701073299087
 0.0016137720941771516]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.007445314279090197 0.024682466936928625 0.033327165397417216
 0.029620442072544953 0.01857664932762312 0.06067848012819741
 0.02479066357289229 0.03744776090018551 0.053131416546356294
 0.048949787981085596 0.041774780964461466 0.06908653810478124
 0.025033537574316398 0.020636021334172184 0.06022781452341529
 0.04034055730792422]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6509918392126772 -0.27329285798598535 -0.4659043407958331
 -0.436231439696127 -0.6192346688339012 -0.2351834312614049
 -0.5589841831026525 -0.24026764512449578 -0.4257892943086988
 -0.744204294537391 -0.27506341976153464 -0.26988862483680964
 -0.8479948992484404 -0.38449224170486856 -0.28791985519645735
 -0.6605337424150536]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0017008125576559174 0.0061402563438080204 -0.005627750062069253
 0.004452868773236807 0.0015941710177454493 0.0021586156800579848
 -0.004200306095410999 -0.006063597976495749 -0.014568705475155513
 0.0010506193420073417 -0.0027392217934161522 -0.0046034751230270565
 0.005113419849236328 0.0009272861894489837 0.007339981114799471
 0.00732502565757806]
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 580, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 960, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 813, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001445883027911904 -0.0004702950243616888 0.00018452966498488932
 0.0015828585891174973 -0.0006700527293980185 -0.002448499710584112
 0.0011769272218751792 -0.000212529691457658 0.003380533509920125
 0.0002545505926191127 -0.0010217007129096622 -0.0004909089056613913
 0.0012788248134750768 -0.0004392078663915111 -0.0012759736728291116
 0.0006168269495129275]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.216947704709447 0.00919954859364629 -0.00789019882243414
 -0.007568114866022015 -0.0055466235490404595 0.023232430803674767
 -0.012605424017121333 -0.02997164759981155 0.02040594959809036
 -0.019738207736911307 0.15832682154178468 0.06663012171407877
 -0.043921129605392004 -0.017219158648187856 -0.02687272088741929
 -0.025570915890960166]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.148267110742583 0.6363895725159571 0.016503370736741196
 0.02089243854881601 0.019241450155885794 0.0755431656670151
 0.6600036690440231 0.02598128407011546 0.3735534120736247
 0.21409717912721468 0.06098066341704068 0.016501185399327746
 0.03139065394200276 0.14263512687609292 1.1532645191447182
 0.033897845877598164]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0005114213494205599 0.0018973443472293239 -2.4212177014149017e-06
 -0.00023234132462898738 -0.0028358775388113155 0.000802180697209609
 0.0006656795353821021 -0.0025554396418097647 0.0012223844711158338
 0.0007700270667885256 0.0006458674635040351 0.0010120041088696463
 5.214358547214748e-05 0.0001564741058966146 -0.0025714880276952456
 0.0014848837185998942]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.17983396032995586 -0.968867446876624 -0.9087189274010883
 -0.24943158459687872 -0.9647870844740818 -0.16774181096108712
 -0.4506874225061512 -0.15935686232792773 -0.39470969516415283
 -1.946654378169498 -0.9700633898914126 -0.35730911265238885
 -0.1683320761787586 -0.3775964003312724 -0.18958249477960806
 -0.17184311449497444]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06522435389495801 0.13100653757240407 0.06332404192017752
 0.04429390184116636 0.12406207380639245 0.084199068000825
 0.06073260334215772 0.14558523087769282 0.3342201828875782
 0.06415234750925242 0.6867809358331037 0.5094358796289422
 0.18899733619973866 0.13097435567453836 0.04198486958370682
 0.08314151309371035]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0005288241370178248 -6.622185385923851e-05 0.0003667321774486476
 -0.001787345587994621 -0.0005381889748187207 -0.00010010599440046786
 0.0026308500123824186 0.0013283498019390771 -0.00034518606087752257
 -0.0013398398659895117 -0.0017314266302440318 0.0011792345520325043
 0.0001787548787108295 0.00024296273862900453 -0.0019901663933342972
 0.001442773063357522]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.33155659749996275 -0.17641742776604438 -0.3545919628971932
 -0.18575117955590276 -0.18963795209533316 -0.17640590419607605
 -0.1567833353484081 -0.19504900970845793 -0.20062732252350512
 -0.16812946380000804 -0.15412469247981403 -0.33082406964987077
 -0.2665369263036991 -0.16721710862893574 -0.16759531263063876
 -0.2408507643152547]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6653822168419483 -0.27606414909048077 -0.31174111426298073
 -0.6595144964456812 -0.25425285656576596 -0.7382336851167292
 -0.3015140803745539 -2.718528951392055 -4.186084756978941
 -0.28710359462451135 -0.8770275285929874 -0.9570116815415751
 -0.298898124695175 -0.6915210484204877 -0.9683527739775063
 -0.323974305505927]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00015524783615070148 -0.0006706612883223273 -0.001021843396598776
 -0.0022364503527750323 -0.00023693211495673383 0.0005171366940164845
 0.0010403211952191849 0.0008152161332226349 0.0006046028022982375
 0.0005360641493964702 0.002024911845129762 6.510571617895922e-05
 -0.0017735301370975787 -0.0004522577535277239 0.0006546085613455821
 0.0002889557826216138]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.25442238143926516 0.3852515979869522 0.023906431817447612
 0.05131512455405039 0.01954098887145061 0.024911645684576843
 0.045599304443418115 0.0179927408055789 0.072143008915825
 0.020767824576010847 0.0181253182223848 0.02812806199702215
 10.633229626801661 0.05053121604646648 0.02522051554855581
 0.02848869786986235]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.14823367336756155 0.188785782536238 0.19139309396444837
 0.2452845936614156 1.046554428636839 0.3894730689766814
 0.13144631133829426 0.2567122645470337 0.14832470028958705
 2.112743101394864 1.8291148244726256 1.238026028741892 0.2572856028497169
 0.3239839138032926 0.17258626062009796 0.1312636578123991]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00014837127830877317 -3.712374496522841e-05 -0.0003766512269873512
 0.0001246775114597809 -0.0003139016021722063 -0.0005399145142813422
 0.0003276269680729249 -0.00018117609346449126 0.0003778676570485029
 2.419798279210128e-05 -0.0003783318164423677 0.0013794154932618707
 -5.241199574745892e-05 -0.0005867823132193473 -5.46098751247337e-06
 0.0003863399604641937]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8555378212085014 1.1954433626146328 0.4050708356111965
 0.4200826265130303 0.3976141862389846 0.39516168055403317
 0.7873709986926165 0.6064172810779377 3.890899714242924
 0.4952727517517188 0.40863929203575616 1.1600337336531865
 0.394713035039766 0.7347093797528316 0.46577647204249817
 0.6752048915668626]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07335840114922436 -0.3228443986682726 -0.10809687018983466
 -0.08769487387738113 -0.20238567786232653 -0.6323430986134383
 -0.19022458497007022 -0.15253389699787476 -0.1298433495416984
 -0.3174581112914472 -0.07453960163526474 -0.2748741005113832
 -0.7126394509936471 -0.13441035566678 -0.8963424346879871
 -0.3352920667885487]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.001831824473836119 -0.00043859551799588226 0.001332660546816744
 0.00047552825793012454 -0.0007226612940724464 -0.0006147450417282041
 -0.00038243714918681504 -0.0006397201787466111 0.00021714480823586957
 0.0018401944490286648 -0.0007834109986112336 -0.000274945958733952
 -0.001141965323153804 0.000771419182763522 -0.0008175497498019713
 -0.0006527405065806235]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.5746518769787319 -0.313439758072701 -1.039328013354122
 -0.32671247585893604 -0.31381129504760163 -0.9306274798100267
 -0.49117210973935455 -0.4750828157864562 -0.6422106487957442
 -0.7253696552812305 -0.3253958473916777 -5.528549900086473
 -0.5633136114165658 -3.387285943048553 -0.3399076182929987
 -0.31827235688660477]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.437777615049423 0.44544819053359885 0.5174725256129021
 0.20201306226900134 0.6948223804835685 0.5572031033362751
 0.39408306422428246 0.41623684084785884 0.3020260648114908
 0.21319830436494738 0.1963755658816714 0.24190029846248037
 0.7485656710423588 0.295800190525357 0.396126341553654 0.3665673041419188]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001990003763274628 0.0014078069944773453 0.0006896116982598177
 0.0007885821524210856 -0.0009326101681494947 0.003343767515274293
 -0.000979285793968665 0.001353260699753861 -0.004309070862850983
 0.001672415659968285 0.000999223583541431 0.000680223880723696
 -0.001511111955146971 -0.0031285595738739236 -0.0006666657740017345
 0.002582415706845198]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6231598555492306 0.9548412996627859 0.6754798971981548
 0.5583156306581574 0.599726819416901 0.51073224065666 3.9357774656553817
 0.6099896804150184 0.5258177915541439 0.8110636916782524
 0.7101003074979149 0.5150090016774241 0.6462224278393023
 0.5613118289081547 0.6217278098359202 0.979272033800105]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12548281640768486 0.14838104725102544 0.09015401371770876
 0.13832866569063934 0.05048775652764169 0.05750093426232067
 0.1430699982930545 0.14811786999019622 0.10986217931874166
 0.26093092712280896 0.39437045852161073 0.1290803348542892
 0.10904641869600486 0.13450327264642686 0.47043211643173155
 0.06585225262891034]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00015986804571929691 -0.00020045010696595478 0.0013398050334456069
 0.0009887276860658656 -0.000577647065513609 -0.0014688281078939769
 0.0015872466078382386 -0.003963350160688994 0.0019402520590343086
 0.0018932126108233693 -0.005130161829792035 -0.000283713072346925
 -0.0005541256569595587 0.002785688711699097 0.0008008830724675065
 0.001002328264506136]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.002403281612344958 -0.0098652492470989 0.0122514404633988
 -0.0037672363382636707 0.13239992917200144 0.2138687579841826
 -0.006361288244670543 0.007489285599823503 0.001991035175463453
 0.0034028837418560165 0.013453398003704726 -0.010442625957685671
 -0.002397959821598697 0.009563030186915624 -8.540562650304279e-05
 0.007170925613836566]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3276478116163794 0.19552073075759777 0.49655155159947245
 0.46398076490181295 0.2428403655246584 1.1224703299304897
 0.4138249423663373 0.27909153128086056 0.2708902621487463
 0.25216649885542386 0.18782725483044682 0.33487592271418853
 0.1695776733252053 0.62276628088587 0.6600977715376252
 0.21322616951951354]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.000226900613352371 0.00047370817698186296 -0.0005772811828436419
 0.0002990528092634559 -0.00030909927097988454 0.0009677347785454482
 -0.00029664368624396364 4.5560193544125216e-05 3.0660207958777e-05
 -0.000841352993047273 -0.0001392046109232048 -0.00040492427698968214
 0.0005412002623186307 0.0005845174018352939 0.0005507339347294304
 -0.00069776113079692]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5471445707088666 -0.6509091152391482 -1.2638376287377926
 -0.5589197408574464 -0.5090167834056873 -0.5346121354767338
 -0.646132651358559 -0.6554574718208439 -0.5213479053998099
 -0.6427585771077057 -0.5570278590665834 -0.5263890341328614
 -0.9454265297217419 -0.5628794993311816 -1.0301582889512921
 -0.5362711853051702]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10425962045346411 -0.0787256579487706 -0.14259329966801054
 -0.13087181233402756 -0.13019304000184495 -0.5571079900015906
 -0.3236286216922194 -0.14961145078738242 -0.18592597988867746
 -0.08545403396454285 -0.08655424912165124 -1.786883485855911
 -0.12207064165739379 -0.7546145611584418 -0.15818008461668293
 -0.12030468826887117]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0013828881470573373 0.0008292513148122627 0.0020230949404336784
 -7.041291050341458e-05 -0.000779089185334092 0.0017598050243928798
 0.0013046817602640481 -0.0014130189368113943 0.0007465519132769938
 -0.0018146669371207347 -0.0051683415169445635 -0.0033047626508478922
 0.0020489849346843336 0.0021206037375192943 -0.00113093932609179
 0.001465369691214663]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.65052697692744 -0.2739641946505306 -0.4656628238752204
 -0.4368147583688791 -0.6192190805799312 -0.23528907236949717
 -0.5581070101714936 -0.24039348443314096 -0.42575341279055245
 -0.743515151358468 -0.27553300761627386 -0.27004590840499587
 -0.8482931702799599 -0.3850817348191117 -0.28776393556249674
 -0.6600130558143404]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.007030157590761518 0.024707837313445634 0.03339468076328716
 0.02967679321155544 0.018586539608021004 0.06034960761267576
 0.024764463162109163 0.03749853337547169 0.05311089751864985
 0.04892508513297753 0.041794833856589136 0.06889557653352604
 0.02498790568611615 0.020663592214340783 0.060151400674410854
 0.040381179320797274]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0014103958583787657 -0.00045142960024302514 0.0001772162130991295
 0.0009717097036205657 -0.0006198111250466654 -0.0024288387086759677
 0.001189524851607393 -0.00015645918776824308 0.0033320547063250827
 0.0003708999680285263 -0.000974381741242536 -0.0004865846195309942
 0.0014470171570382662 -0.0003902012059876503 -0.0012375772051208545
 0.0006672566522749612]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1676492795617581 0.633054861279728 0.016847664971270992
 0.021371934388430967 0.019710845340187765 0.07707969791508883
 0.65116142864451 0.026379938714505845 0.3733134837241801
 0.21782907799293025 0.061646669713341797 0.016846489952239856
 0.03224561423849768 0.1424080560316752 1.1373472223840395
 0.034250382486373465]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21665445083158694 0.009327228683971605 -0.007866621410248766
 -0.007575138749732362 -0.005542534298353073 0.023455356185985026
 -0.012618734648775273 -0.030098495292146935 0.02062082670278138
 -0.01981775049302617 0.15907940674735666 0.06608499720858327
 -0.0439431329074737 -0.01728207315674522 -0.026950707511529386
 -0.025688642554811902]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00046314700408667253 0.001907587940387756 0.00020613667830929328
 -0.0001836812559976031 -0.0027859430022383336 0.0006266869271264186
 0.0007684621634728994 -0.0024850816562111966 0.0012139954598384128
 0.0008647759957544632 0.0006489464943143508 0.0010605272663059828
 -0.00032923841785520436 0.000233921938934456 -0.002779202975513706
 0.0014952534474574342]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06574070369620429 0.1316550118035758 0.06373943175231023
 0.044642670209989986 0.12460146222367294 0.08429453207123887
 0.061058913010746084 0.14529810484264616 0.3347270542929627
 0.06450023459342687 0.6838865229518095 0.5084731793205586
 0.189106495057162 0.1307317549234949 0.04231452915449957
 0.08334463176204751]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.18176923124756203 -0.9722123284807588 -0.914249503296277
 -0.25002365825670664 -0.9671732898658476 -0.16897600852910988
 -0.45283604706748837 -0.1610527047282333 -0.3969457636838726
 -1.9220512691831038 -0.9651887475413149 -0.35956911571980094
 -0.17002727402231468 -0.37865748889881923 -0.19090265337325726
 -0.17388067724139275]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6647339554211454 -0.27888165357508043 -0.31459992836555384
 -0.6686904908832053 -0.25584939825809266 -0.7465560143123384
 -0.30352180505546444 -2.698708117752912 -4.1578072442279455
 -0.2885989252594689 -0.8848673431261646 -0.9511144328495782
 -0.30166417698320797 -0.6967549164680078 -0.9763167785978145
 -0.3265401832913251]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3287005891445685 -0.17701401898980335 -0.3518838716117036
 -0.18637641430690755 -0.19028063167384124 -0.1769127346570865
 -0.15722736622923847 -0.1957727660011287 -0.20115029848152688
 -0.1687172211080602 -0.15456596852869522 -0.3297893387286255
 -0.2663081933351282 -0.1677010210950616 -0.16809425714267084
 -0.2416043383650583]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0008328063080654813 -7.7694106559556e-05 0.0007294410375016103
 -0.001934508709199978 -0.0005230180330925704 -4.2675645553214014e-05
 0.0026803036312988693 0.0013313722911894033 -0.0003855631753835187
 -0.0017073956299767934 -0.001724095883955945 0.0011073788231839576
 0.0003029411759890577 0.00026362800711876577 -0.002148887313615455
 0.0012959672229902464]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1502703562687584 0.192379300903793 0.19364707546065424
 0.24777529970459433 1.033017075096207 0.3916410630449431
 0.1337704480184252 0.25961585568684725 0.15052824599091943
 2.1219326516745065 1.8169643461706049 1.2258290736423643
 0.2603506216775406 0.3251449639400504 0.17528356383899318
 0.1330613658937841]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.25865430360350017 0.3911452086417412 0.025039942895489064
 0.05301961283880345 0.020411335894792614 0.02599325166871548
 0.047433648029142496 0.01880732872179699 0.07387750278049128
 0.021592108869075727 0.018892473980010933 0.029232981552096058
 10.607233241677255 0.052405548877799024 0.026190235901557786
 0.029645759648261088]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00010884008575465232 -0.0007549260553098014 -0.0009961168622290573
 -0.002231348408587519 -0.00022811275244721818 0.0004910148961078109
 0.0010640733357614174 0.000643081182869959 0.0006106259098009881
 0.0003923143037208865 0.00199257833215416 7.507146338325832e-05
 -0.0016797866931727023 -0.00020031041656787263 0.0006177093293479596
 0.0003129725209232437]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07364864557659967 -0.32183600747649127 -0.10873842917389395
 -0.08817067797352586 -0.2017407855870323 -0.6295919103573203
 -0.19066464137859007 -0.15237283554677383 -0.13035852396653588
 -0.3187267136998359 -0.07481440282736404 -0.2760807965023547
 -0.7080522424143119 -0.13447164585743443 -0.9033674875730826
 -0.3322455275340326]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00022861579493690942 -7.282567895278147e-05 -0.00037669569818282733
 8.27848479086346e-05 -0.00028867326817383354 -0.00043902231228720723
 0.0007230758942125548 -0.00018972828670332786 0.0002977376506630991
 -4.151869352486681e-06 -0.0003784525405566286 0.001332093185480443
 -6.609719459360619e-05 -0.0005087253634609157 -9.792733435318168e-05
 0.00021522376329111137]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8576117656986461 1.194300069304528 0.4080050072853129
 0.42255733228279807 0.40044840565013784 0.398052949284585
 0.7902427569972763 0.6084682402855547 3.87066941176154 0.4976371832332203
 0.4113313248455225 1.1535636303606382 0.3973936645312831
 0.7361077094620687 0.4685191646860473 0.6730394469273184]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.43525480869329763 0.44739247930538023 0.5150104338096291
 0.20220251423385252 0.6940160561674615 0.5613562925116995
 0.3938436268632146 0.4179212094747918 0.302178908034331
 0.21303931460564143 0.1963197303883942 0.2419208591602851
 0.7481109688913349 0.29553452219995946 0.39499612446822313
 0.36651867433329194]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.5968583971777977 -0.32025664017942834 -1.0372938047725686
 -0.33380326031224083 -0.32060807395767577 -0.9482608422643484
 -0.4994535133662552 -0.48344614652248213 -0.6540984477277954
 -0.7408039818107032 -0.33239009194199776 -5.419380479782407
 -0.5674684605055392 -3.3690030093314363 -0.34674332686901366
 -0.32526292932608514]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0019766631020778913 -0.00044325395752409236 0.0012744840004128566
 0.000481841698978136 -0.0006761547198391171 -0.0006218641530977009
 -0.00044266664975037284 -0.000653931946562214 0.00024615993233687017
 0.0017976968243644809 -0.0008145742765121866 -0.0003035009161638236
 -0.0011351752086184441 0.000777641822954589 -0.0008280540537563552
 -0.0006353114993002673]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12692834784763637 0.14773163113035528 0.09049846893869766
 0.13818492247858058 0.050980479663538136 0.05804891223400351
 0.1423627745246373 0.14916243549070715 0.1102081802067355
 0.2615417860027765 0.3910980189896385 0.1292394805867532
 0.10927466745817238 0.13534331885049494 0.46862909293164723
 0.06636854502642169]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6271041941125005 0.9554033021376981 0.6804721087134102
 0.5639401573618574 0.6051481390929754 0.5158058810302637
 3.8640887280549054 0.6160255575771357 0.5312525714429193
 0.8107713712418438 0.7154826375970729 0.5201603041790823
 0.6525939319542584 0.5669770028038559 0.6276998104353959
 0.9856220842683315]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0019057000365524102 0.0012949899432976864 0.0007229496247193601
 0.0006027735513564059 -0.001054372982086077 0.0032754766586098327
 -0.0010118637462094848 0.0013732365073554353 -0.004182730492393816
 0.0015768967555718771 0.0011108984398753852 0.0007200341984113234
 -0.0014473345356560419 -0.0030495845515907116 -0.0007062201660631706
 0.0026805508313534343]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3264433930758742 0.1961787046559812 0.4934034191707391
 0.4642735897228158 0.2429973264665466 1.1247807190450057
 0.41458000046936316 0.28023496994326724 0.2717046249034683
 0.2514169469748572 0.18804945837269124 0.3354013877095423
 0.17038558018327613 0.6206138183050555 0.6587691663733233
 0.21412275642282114]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0024520274941619057 -0.00994976300835268 0.012364035921803004
 -0.0036654387390302016 0.13193830603325796 0.21412085564250322
 -0.006410669306256827 0.007554121232556537 0.0019861425068622603
 0.003424978317971709 0.013509648814285003 -0.010489104204670325
 -0.002465122834917977 0.009662001400979982 -0.00010939130386722947
 0.007249066114054417]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1576225121073813e-05 -0.00019450788241021089 0.0013958359643522766
 0.000996494465002773 -0.0005724043761913267 -0.0014990624650656481
 0.001517915930796948 -0.003942227435172835 0.002020323610515351
 0.0019363589319212615 -0.00517535751564438 -0.0004476393008698287
 -0.0008561736608465598 0.0027804401910562215 0.0008016327127854661
 0.0012267946046493061]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10505117065134753 -0.07955424454383003 -0.1431655168479868
 -0.13217659936524143 -0.13119511465003048 -0.55898927180032
 -0.3247149012680716 -0.15074219527638238 -0.1867276681624017
 -0.08616072948139929 -0.087301445141902 -1.7587709440729422
 -0.12299064936715771 -0.7682811211479961 -0.159864889668395
 -0.12129275597407776]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5486696158422782 -0.6522072358963347 -1.2572347037364369
 -0.5587622251838631 -0.5102174182145913 -0.5360645041167268
 -0.6473134352452385 -0.6561191080364815 -0.522858487488914
 -0.6426199582249382 -0.5568566427119365 -0.526741508780696
 -0.9448973418009399 -0.5642893329454554 -1.025631851256582
 -0.5378056071400109]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0003101584660659684 0.00041842590423132875 -0.0005112415993733799
 3.0693995701214227e-06 -0.00028310554371910324 0.001117789132688396
 -0.00019707989779432777 0.00022385721649614831 7.78417535082232e-05
 -0.0008712310266902057 5.239457328065633e-05 -0.0005469952958245539
 0.00040957432900895485 0.0007545300914973407 0.0004512215037132672
 -0.0007888920745274808]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6499438487421454 -0.2750194020203305 -0.4654891121254191
 -0.4370006451350465 -0.6189396098287786 -0.2358499516990219
 -0.557176170293291 -0.24091555396074404 -0.42571226239742416
 -0.7426763216960776 -0.2763870794066755 -0.27055083893455295
 -0.8477039811016955 -0.3854436201754922 -0.28798730020545243
 -0.6591810803001845]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.006990503115136153 0.024611784042124423 0.03353266347373481
 0.029731213446138945 0.018328145545059 0.06006023806782351
 0.024523886803036583 0.03763209247596234 0.05332374760979783
 0.04907337992873105 0.04190341634724097 0.06897872427482597
 0.024747643982682282 0.020488902234114648 0.06035178639412471
 0.04056164688295102]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0014423539499393567 0.0008380160786919388 0.0018271891611899571
 0.00013810219803306323 -0.000942528969299472 0.0017101985338816572
 0.0014098487783338887 -0.0011975616239293108 0.0006922955912437301
 -0.0019355142739191922 -0.005318478597956644 -0.00344947239328941
 0.0019511160855274212 0.0020696866917007117 -0.0008580259672504864
 0.0016227747571019857]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.012673236357699 0.6707115367984162 0.019226553361991715
 0.02310515912081376 0.021600599561421793 0.07767137878639069
 0.6871922976109706 0.0287889177643094 0.38647227894994857
 0.20499725048183687 0.06617219026912068 0.01921489630184693
 0.03449755113368923 0.15077965874727503 1.1878391475402745
 0.03819999455275268]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001380538441496465 -0.00045877689335488414 0.00011946009285698778
 0.0009430830821569036 -0.0005712346981885386 -0.0023804161540677826
 0.0009092537548385793 -0.00010971619382521558 0.003360490377891434
 0.0003417199957221895 -0.000918830748370153 -0.0005832221134196014
 0.0015223727256955533 -0.0003002009259161498 -0.0013554928569877722
 0.0008620489964654143]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21699366214360227 0.009553418859932751 -0.008131307388781268
 -0.007957423165448414 -0.005822386985826752 0.024007653321619797
 -0.013166885097410732 -0.031015706407521253 0.021128946033824623
 -0.020575934886736726 0.1634746959828402 0.06641812488540769
 -0.04478186779677635 -0.017917526934904116 -0.02780634082168634
 -0.02656268640471427]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06687570839898142 0.13697458155835765 0.06616601545750754
 0.04667492545523429 0.1296345188714596 0.08582874245129829
 0.06397768290405122 0.15379546041106062 0.33765532237526225
 0.06759378880578296 0.6780333653231114 0.47649777462833376
 0.18267196421619672 0.13520652813618333 0.04450753518979421
 0.08602131748372943]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0005437870044832094 0.0017945011406887978 0.00027426923244594503
 -0.0001681213722185826 -0.002934206283981944 0.0009350815924172862
 0.0010565133711978036 -0.002502819632903497 0.0012068954373222196
 0.0007940531673363005 0.0008388824690575003 0.0011161598643788795
 -0.00022982682458577708 -0.0004287625992671351 -0.0027068965165511494
 0.001498063959147311]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.18442705654123193 -0.9754840442519584 -0.9185445821599905
 -0.25077293278905666 -0.9684937587647393 -0.1708579247737488
 -0.45448567634110515 -0.16347132166628084 -0.3990290433635125
 -1.8979415925329244 -0.9587311337396269 -0.361544222538557
 -0.1724288404388364 -0.3797238415593916 -0.19291930398621993
 -0.17666048568867967]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6723134826355707 -0.2822971031100859 -0.3178914719449296
 -0.6427435198663791 -0.2622770276657481 -0.7069580076439781
 -0.3075179051723066 -2.682928384716315 -4.194900512420313
 -0.2950788697763652 -0.8692105439462295 -0.9586470240545747
 -0.30985809194498626 -0.7159100713776972 -0.9662347363254304
 -0.3304386118263943]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.00038619852092786067 -1.8766881636822497e-05 0.00039255416074043814
 -0.0018363634682274643 -0.00039678704672116427 -4.340169092925672e-05
 0.0027047066897641636 0.0013601704526894354 -0.0002098949122105176
 -0.0015569339828824802 -0.0016294378173564994 0.0012366818416477687
 0.0002527354895262568 8.799122915353896e-05 -0.0019547728841156076
 0.0012253202996325152]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3255759809637235 -0.17784644011137854 -0.34830713845593586
 -0.18720381473498068 -0.19111193550236957 -0.17764554363598417
 -0.15790301064234608 -0.1966389964989611 -0.20173405212940326
 -0.16952182295531606 -0.1552736763798781 -0.3281258658785888
 -0.26572708674968537 -0.1684111910224262 -0.1688646591211289
 -0.24220781461699809]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1575135554207904 0.19591722405390638 0.1994797027178485
 0.26214046143065034 1.062632599305157 0.4048139905359278
 0.13968883493733233 0.2662617175537684 0.15640878682574666
 1.9238644985416844 1.8697939090484939 1.2469010689006916
 0.26362028525418274 0.33820998083506654 0.18365000333035958
 0.14031468832138028]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00012243087151556087 -0.0009901050794525468 -0.0012875624723523993
 -0.0022828222156745515 -0.00024292049631818857 0.0004531992413844832
 0.001121946409735064 0.0010336899704750657 0.0005541560075372209
 0.0004725331831496038 0.0021379428855629046 0.00021114088854765067
 -0.0018674467109331405 -0.0003233133864657678 0.0006156728951146051
 0.0005163197512046691]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.26345110165178154 0.3979280071978916 0.02633078891093456
 0.05492904674373337 0.02142225611658678 0.02723083557498225
 0.049481585384872406 0.019753435087198828 0.07586583148236656
 0.022548445369480932 0.019786400628104075 0.030489891168761916
 10.577569740121959 0.054510517587883556 0.02730499610693153
 0.030971606447057383]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0767271324342565 -0.32670408872887435 -0.10883263253355538
 -0.09127878544688076 -0.20810496770362633 -0.64145303373133
 -0.20182106535286373 -0.15717290247965168 -0.1333308132388105
 -0.3154356216095133 -0.07809205993246178 -0.29556099200537395
 -0.6983135803632224 -0.1349395057964581 -0.8422377072995434
 -0.3348763847887579]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00021831639868225006 -6.371674441923991e-06 -0.0003113172971714595
 0.00013875047957595532 -0.000398401948380922 -0.0005398844103485789
 0.00038354485151176343 -0.0003900401065543291 0.00039556925042083524
 0.00014387682685651493 -0.00032330324789933695 0.001478124051121521
 7.425098185187551e-07 -0.0006043376478449547 -2.2308760191380728e-06
 0.0002535956380366744]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8597394050703417 1.1922333016417572 0.4118965651608571
 0.42585649537222264 0.40426755912283685 0.4019896575365888
 0.7930647516866497 0.6109582505578526 3.8447895045700005
 0.5006306312830204 0.4150202668110454 1.1459048919971464
 0.40103847558690137 0.7374310245427341 0.47209218125069413
 0.6710351004058284]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4405977907778851 0.43917731000599936 0.5258680272570978
 0.20728547057701427 0.6984866468003044 0.545378750585614
 0.39247215482196596 0.40874938691082985 0.3109914314108944
 0.21966350869643433 0.202148459969495 0.24922640775380148
 0.7126270918051971 0.29758491720456 0.4022176397213673 0.3731415288423283]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0018341553628118956 -0.0004463445539593103 0.0012941402028401883
 0.0004815622370359651 -0.0006976641893263469 -0.0006226785974808302
 -0.0003331510605889265 -0.0006261139058739706 0.0002098607783471429
 0.001776304440334664 -0.0007901277385531369 -0.000273425941418326
 -0.0011411259313487965 0.0007781994646099133 -0.000790585806115407
 -0.0006530047613143575]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.6172796453968727 -0.3280981612763474 -1.0352624435684217
 -0.3418574172623275 -0.3284254894933291 -0.965239162168864
 -0.5085739505512491 -0.49268747820380693 -0.6656768931339218
 -0.7559302493338054 -0.3403141041910334 -5.309997964743351
 -0.5722726408307764 -3.34582620617992 -0.3544221697409914
 -0.33326742977275753]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12340598956031587 0.15142268987946478 0.09219268795261684
 0.14084489538793832 0.053981977722469265 0.061995853807279344
 0.1471222059578441 0.1501817393260539 0.1106269775215676
 0.25339391313227255 0.38133250375821737 0.12984333537648893
 0.11297164696086491 0.1339274223666151 0.464366592560006
 0.06799063109078059]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001972875991984202 0.001511640497768918 0.0006701137080484254
 0.0008359679727094338 -0.0011339863979067943 0.003307023538926812
 -0.001052876556017851 0.0013753110459263085 -0.004268308947703553
 0.0015436475903760072 0.0010827337053758157 0.0006514844859284996
 -0.0013206616633257284 -0.003097806205774656 -0.0006941676267195329
 0.002562760844372458]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6321938689578015 0.9561276569844098 0.6858176180340608
 0.570480501589687 0.611632563024614 0.5217822851146614 3.783803841392604
 0.6223569467122404 0.5376663789690611 0.8115157282809574
 0.7208607842063255 0.5261224217283302 0.6591298549931832
 0.5734039984030626 0.6340170918785064 0.9916362417340021]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33264446815568305 0.20666853230306598 0.5062090454003433
 0.4670876994214184 0.25089991634507347 1.0394009239967283
 0.4358773076802053 0.28121964178164566 0.2847813600209192
 0.25403246822315473 0.19482003432317158 0.3380689850846334
 0.17712589023506997 0.6146445163096436 0.6531456360335741
 0.21672943648029816]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00012918365913641705 -0.00025636686328572855 0.001540778382205954
 0.0009621528680240077 -0.0007420763841772815 -0.0016026693179216067
 0.0016573275031357138 -0.0039022372055414756 0.0016867622899263135
 0.00211985033899037 -0.0051221371602587495 -0.000474280482032019
 -0.0007326408555862751 0.002907043256273001 0.000979746150989197
 0.0011079311383944135]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.002347261867104533 -0.009825187581149777 0.012469000631338975
 -0.003397630311166565 0.1309091091341109 0.21350983691466968
 -0.006277303987006009 0.007663020261580316 0.0020718686632000406
 0.0035203212923684917 0.01357442699516077 -0.010312896954391674
 -0.0023877884430074407 0.00976711736845115 -2.3926315497585157e-05
 0.007354933291460514]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10976438976670329 -0.08274809950564861 -0.14901826602573248
 -0.1345775514160112 -0.13766863968408588 -0.554414460184495
 -0.3352565091603673 -0.1586440738014434 -0.191294078440025
 -0.0902827172775264 -0.0915374660459875 -1.7721183618682044
 -0.12766817758106633 -0.6963231673001213 -0.16119663320140826
 -0.12446662616065611]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00015391868641806417 0.00038482006947643255 -0.0005170968246618057
 2.797117864677956e-05 -0.0002942838927525726 0.0010927835895952476
 -0.0002523241011462285 0.00022026904499289346 4.91511944874512e-05
 -0.0008917350159911852 6.327405206452141e-06 -0.000560566425299891
 0.00043741763753002427 0.0007502765445658865 0.0004906023049910391
 -0.0007896940232217653]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5507739449526823 -0.6531469894763484 -1.2489441397652044
 -0.5592208661030669 -0.5122774858076571 -0.5382282126066692
 -0.6481796997299327 -0.6571363809951409 -0.5248260560039185
 -0.64220206071356 -0.5572886587015128 -0.5278591396847174
 -0.9426594507671904 -0.5659474922214824 -1.0200092000201961
 -0.5395891990721438]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6480194718030052 -0.2734966927580712 -0.4601891451935721
 -0.44655382976055596 -0.6242926305450343 -0.23901242272277715
 -0.5585002015991226 -0.24319905305949485 -0.4270807639407309
 -0.7168073723167867 -0.27788710160283775 -0.2744988582281596
 -0.8656278970806948 -0.3918180417517608 -0.29083309381070277
 -0.6381602018490251]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0013902879638488796 0.0008986238014648817 0.0021220187134446677
 -7.440056455343402e-05 -0.0008924969882283529 0.001691889484757958
 0.0013538252143242835 -0.0011567790512646836 0.0007448510471134429
 -0.0019781269004309765 -0.005349117849876184 -0.003499430188653785
 0.0019427714018267483 0.002053261438047904 -0.0008728085540039565
 0.0016256310321813294]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0015213744523872 0.6745091658752602 0.02012775549612472
 0.023988426264525915 0.022512423473001354 0.07934414499534513
 0.6853645015776699 0.02972397164913982 0.3887344176877982
 0.20614535102053755 0.06781714650746082 0.02011447357203899
 0.035878137887812224 0.152212941390637 1.1817345153962402
 0.03941390009277864]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.006577131418750881 0.024614288363353467 0.03363392493106502
 0.029801638168224252 0.018275273202100147 0.05967392366640051
 0.024440084962645152 0.03771475291469764 0.053353526926337685
 0.04908335342954287 0.04194983871701062 0.06880689830552356
 0.024646352209492062 0.02047311710290669 0.06032260751901682
 0.040646319393646296]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001490243507947936 -0.0005120580333811686 8.492064093476581e-05
 0.0012989646194723203 -0.0007076524702783749 -0.00260718925936676
 0.001122565300987366 -0.00017075038002417608 0.0033431816527035307
 0.0002525396094693322 -0.0009423174718189431 -0.0006360013012972621
 0.0014249746537936536 9.585474426995755e-05 -0.00121407923807193
 0.0006572904405556523]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06765706697159352 0.1386526560503718 0.06710464626378383
 0.04747240916796547 0.131141709381975 0.08624771284409186
 0.06493565018495072 0.15526114348808429 0.3388266995366713
 0.06860863044103234 0.6733627590111546 0.4692417535110546
 0.1815080721234393 0.13593980529578517 0.04532572747193501
 0.08682878992245656]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21677832829124333 0.009743495062464625 -0.008174698871985606
 -0.008058629647858799 -0.005886609201571209 0.024376035478165702
 -0.01331525141003706 -0.031372216604677254 0.021479454804685685
 -0.02084630168630044 0.1652566381753206 0.06600129909994286
 -0.045004205499781784 -0.0181411685856404 -0.02809694885623403
 -0.026900785210314117]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00046278628190124516 0.0019927679259656994 -5.426102388572662e-05
 -0.0002912387948331152 -0.002704351700300478 0.000657239992769898
 0.0007330093436013208 -0.0024603960977371275 0.0012719447470824763
 0.0008375537320325921 0.0006980635193258311 0.0008246720153674003
 -0.00024578930709731606 0.00019851085791752765 -0.002551146585948516
 0.0015562076576408623]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6731995366071538 -0.28585834627962187 -0.32143610581386667
 -0.6465785471966317 -0.2652200539813082 -0.707257566884036
 -0.31038967379469606 -2.6607488815436713 -4.173909893306518
 -0.29791626452709163 -0.8735228586701753 -0.9543991640641039
 -0.31435991204917685 -0.7250785271541453 -0.9715093577178643
 -0.3338206748372441]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.1829638968649353 -0.9704995790334155 -0.9179871075813331
 -0.25006588486445874 -0.9611560696449848 -0.16971171074619745
 -0.45231803835294104 -0.16250232127798897 -0.39608008918817295
 -1.9217942378841701 -0.9634182282041763 -0.3611279890563774
 -0.17145983966918066 -0.3771518781223794 -0.1918367067211506
 -0.1754421839239974]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.000539078071533805 -0.00014544438348823574 0.0005417170498339952
 -0.001954333180121115 -0.0004740439778740668 -4.924396025851596e-05
 0.002631731875639115 0.001366109043527075 -0.000371146918845322
 -0.001611194006079647 -0.0016651142741714586 0.0010612798813945945
 0.00025591760197629654 0.0003458945978848105 -0.0019356469850308755
 0.0014644395640815988]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.161065599551954 0.20022626590944376 0.20294343197889422
 0.2675600571081287 1.0545472370584366 0.4095062750527364
 0.14326363253170124 0.2705058177245276 0.15984176511003922
 1.8946542021537072 1.8676628030763514 1.2384507957475712
 0.2672521000919412 0.34194996567002917 0.18813333893961146
 0.14364801930791263]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.32513331638095677 -0.1780887209037459 -0.34927055681481994
 -0.18728521960738567 -0.19116574412984144 -0.17795872142743985
 -0.1581004869442259 -0.19667695495230925 -0.20149177708333457
 -0.16959022099805623 -0.1555012572762649 -0.3268463259977029
 -0.26481744934254914 -0.16855903338309575 -0.16918778074713503
 -0.24242546341024118]
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-42\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-42\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node11848968-42:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node11848968-42:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00017095811893597102 -0.0007865431466789752 -0.0009825353240606183
 -0.002275593418999189 -0.00025020056139155034 0.00048279983178933783
 0.0011602433131457368 0.0007098360777522128 0.000630230852129765
 0.0004585289258973446 0.0020574405944039365 2.0131549865798348e-05
 -0.0017385501300403172 -0.00014340856470754226 0.000494592785015957
 0.0003339853348157673]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.26928656726570144 0.39270690110421774 0.0258820712539053
 0.053915196596148664 0.021038251258684654 0.02676167292812682
 0.04868421630306024 0.01941255083664819 0.07556728701848157
 0.022138953631708955 0.019444368986273473 0.029952634454519234
 10.583439769439043 0.05396429293225621 0.02684592989088048
 0.030533821680874318]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07765205112948209 -0.3266489813141326 -0.10950783643623976
 -0.09239799609371017 -0.20870186378722705 -0.6408441999403595
 -0.20446008583590222 -0.15792978547250586 -0.1344340631518786
 -0.3159649812803294 -0.07904452212673327 -0.30074187863669355
 -0.6919779942686954 -0.13513413282937745 -0.8369833105491575
 -0.33245759059275465]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.1055704701936746 -0.518575350200535 0.2621551215994967
 -0.4508918397006484 -0.056609293311384846 -0.7305328671000946
 -0.31587141215436376 -0.8413322095386475 -0.46956419773274805
 -0.7375683156762939 0.10327576808908716 -0.3420981804371173
 -0.810665044270258 -0.5554013982644902 -0.9672710230450473
 -1.0889950491991407]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.1055704701936746 -0.518575350200535 0.2621551215994967
 -0.4508918397006484 -0.056609293311384846 -0.7305328671000946
 -0.31587141215436376 -0.8413322095386475 -0.46956419773274805
 -0.7375683156762939 0.10327576808908716 -0.3420981804371173
 -0.810665044270258 -0.5554013982644902 -0.9672710230450473
 -1.0889950491991407]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0002226527351079921 -1.954653167526854e-05 -0.0002741470767128329
 0.00016894526770111495 -0.00039303452847203046 -0.00045752265450835217
 0.0003950578023012019 -0.00039449470811947496 0.0003834976943962731
 5.0722252373042176e-05 -0.00030368629825269777 0.001367916969786942
 -1.0457914014883052e-05 -0.0005425826472478801 -5.509153305785497e-05
 0.0003070766406120806]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8567086068122525 1.1830772272710655 0.40872690594307926
 0.42289161349886406 0.4012342617275659 0.3988285179687271
 0.7925473117670695 0.608613332386569 3.9016933050253266
 0.49813458599156013 0.4116423446694462 1.1375976156248975
 0.3983150655694904 0.7341179907302949 0.46854297844137816
 0.6652763991688905]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4391187988895139 0.4394302667608848 0.5255263098779128
 0.20849003866536103 0.6985709423288982 0.5460117455057805
 0.39199768182685907 0.40857000528913834 0.3128783821891187
 0.2208468916274849 0.20326409606056997 0.25070731282398184
 0.7055248315700764 0.29776465314490663 0.40255628378907526
 0.37435828279122607]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.4609623770527382 -0.2891466346988195 0.004144235812172069
 -0.2682567257176634 -0.2645390804949943 -0.28702945356716175
 -0.23827050643242814 -0.21973532896214185 -0.18163174604713742
 -0.22157161552463395 -0.26597159027769773 -0.04266850682899081
 -0.05913670492332386 -0.2443502921782157 -0.32084951557473246
 -0.10212318693059744]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.4609623770527382 -0.2891466346988195 0.004144235812172069
 -0.2682567257176634 -0.2645390804949943 -0.28702945356716175
 -0.23827050643242814 -0.21973532896214185 -0.18163174604713742
 -0.22157161552463395 -0.26597159027769773 -0.04266850682899081
 -0.05913670492332386 -0.2443502921782157 -0.32084951557473246
 -0.10212318693059744]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0019453809728809945 -0.0005622307584987607 0.001470125731947769
 0.0003163286653937447 -0.000784141296805374 -0.000719551985112532
 0.00018819497442856825 -0.0008105171511733344 0.00016269351719866432
 0.0020550233097357817 -0.0009008287900902356 -0.000421268896810878
 -0.0010582472836264678 0.0007280091632367869 -0.0008138456506817104
 -0.0007951245220235992]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.6026548926076936 -0.32375479644690053 -1.03041301648809
 -0.33729281974382 -0.3240714372251059 -0.9517167865815326
 -0.5039071144064767 -0.48871385238208975 -0.6603991851500189
 -0.7462871185772101 -0.335960652834228 -5.347599254834201
 -0.5649123809553032 -3.3984758079968915 -0.35017287577257217
 -0.32879941384564265]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12416357037603712 0.15153138942242617 0.09287352940664827
 0.14113621007941698 0.055110918423281884 0.06338228215604161
 0.14736247087235418 0.15143733637096607 0.11105949989128037
 0.2522978138697603 0.3762650575847535 0.13008532015367127
 0.11399168983530185 0.13452413712785868 0.4615286637188347
 0.06885117307216347]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1567775134260803 -0.55151665910258 0.40169640577866705
 1.4816383821041719 0.7389484615754517 0.481499943797287
 0.06496995101007066 0.6724919274720081 0.8802928829896013
 1.0087109355674218 0.7223808476755718 1.238772974022809
 1.1831595860448583 0.36558179385638423 1.0316107803141061
 0.8225587590486199]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1567775134260803 -0.55151665910258 0.40169640577866705
 1.4816383821041719 0.7389484615754517 0.481499943797287
 0.06496995101007066 0.6724919274720081 0.8802928829896013
 1.0087109355674218 0.7223808476755718 1.238772974022809
 1.1831595860448583 0.36558179385638423 1.0316107803141061
 0.8225587590486199]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0019210968184489308 0.0016711344959897678 0.0006707349988095967
 0.0006718927057943469 -0.0009745649678309376 0.0031661208031491805
 -0.0010966073223305228 0.00128751116065573 -0.004174673985971489
 0.001520037865452628 0.00108462267136622 0.000654850360607695
 -0.0014740373229331083 -0.003035739002880067 -0.0006559403673431496
 0.002605754725914594]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6322951040481053 0.9585485478320384 0.6839839471415192
 0.5700251937580431 0.6119134153895979 0.5213314753545862
 3.785781575622935 0.6212978367520121 0.5372697253082993
 0.8116047546293292 0.7190396119492309 0.5256617826691903
 0.6584420454910865 0.5724867885519989 0.6338426786061964
 0.9950232988993368]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3326355404840913 0.20943367157238318 0.5055432919288585
 0.46787176147226434 0.2525808161992392 1.0255407442516016
 0.440689769887466 0.2825267717383768 0.2881440380122759
 0.2537913748346208 0.1963646450406785 0.33898410528840717
 0.17928988220348233 0.6112084579575391 0.6506355726862951
 0.2181154182370485]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0002084008398038073 -0.00010954768033821782 0.0012629374905098745
 0.0009929615516986456 -0.0003858362925415748 -0.0012835154158523376
 0.001424934303210862 -0.003933874575560353 0.002082450906299216
 0.0018416776744886454 -0.005224459021685113 -0.00013005578623148661
 -0.0008341598096353042 0.002765663390224604 0.0007866849369512763
 0.0009525391682648765]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9823560606931491 0.6462388077185529 0.7773095073399451
 0.7646024178170053 0.8121623947275637 0.8981879260380476
 0.758773768678584 0.989693183376446 0.731608707028329 0.8441851741882885
 0.974678861171606 0.5617781517510698 0.8376172793158034
 0.6509639205651325 0.9313594579334002 1.126432444253553]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9823560606931491 0.6462388077185529 0.7773095073399451
 0.7646024178170053 0.8121623947275637 0.8981879260380476
 0.758773768678584 0.989693183376446 0.731608707028329 0.8441851741882885
 0.974678861171606 0.5617781517510698 0.8376172793158034
 0.6509639205651325 0.9313594579334002 1.126432444253553]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.11153603608190732 -0.0842572649236203 -0.15078441326771588
 -0.13638381069350916 -0.1400221998265249 -0.5552898654313877
 -0.33844582299821463 -0.16141513005266994 -0.19303099623917008
 -0.09185991342543383 -0.09318600960406082 -1.7469360417319855
 -0.1295686711293849 -0.695010022383924 -0.1631404544063623
 -0.12611256522361236]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0021833281713121823 -0.009541806659036815 0.012339684683771807
 -0.003345536341904541 0.13067927725537687 0.21292684301514783
 -0.006052882803781773 0.007592700863668474 0.002127382555835557
 0.0035381395038840105 0.01349910502622213 -0.010108966764440862
 -0.002222500024697663 0.009654458368426683 8.041077654944839e-05
 0.0072846578093081]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00034497119143173105 0.00040682704002639736 -0.00044144400700676933
 -0.0001144558062535217 -0.00038504905140446244 0.001196069119760057
 -0.00020548689905930395 0.00038378213702566777 0.00021199186804021775
 -0.000910478014511551 0.00011054067127092004 -0.000533454082992324
 0.00030706634741256567 0.0008318299298681331 0.0003486733480265458
 -0.0008614414087711741]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.30839364837968825 -1.1534587662093765 -1.0429821380255395
 -1.042019964959986 -1.1494291245761008 -0.4191591087304114
 -1.346823146902759 -1.43030021017521 -0.6813839202359134
 -0.6357982529106165 -1.0212098972893862 -1.643043857168793
 -1.363613741484662 -1.9262024860488252 -1.0115973702016519
 -1.119715772548856]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.30839364837968825 -1.1534587662093765 -1.0429821380255395
 -1.042019964959986 -1.1494291245761008 -0.4191591087304114
 -1.346823146902759 -1.43030021017521 -0.6813839202359134
 -0.6357982529106165 -1.0212098972893862 -1.643043857168793
 -1.363613741484662 -1.9262024860488252 -1.0115973702016519
 -1.119715772548856]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6469614689045028 -0.2742290333332962 -0.4589995622444308
 -0.4485922902829408 -0.6250253749956304 -0.24018802738030204
 -0.5577659217926688 -0.2441825776727173 -0.4272976062680638
 -0.7110866897922775 -0.27901832568144425 -0.2757894334475586
 -0.8684564438106458 -0.3934157359436518 -0.29160416982622206
 -0.6333641166459784]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5505708216298701 -0.6512086080260585 -1.2567745232048613
 -0.5590144710134072 -0.5121476367824664 -0.5380921498160953
 -0.645923941055287 -0.6575869282089922 -0.5238200216662967
 -0.6427692735343994 -0.5571910597922644 -0.5276441557411027
 -0.9402949399341354 -0.5648081489947502 -1.0220371660026477
 -0.5384051312187894]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0012898122225793451 0.0008967523857834614 0.0021134806984346166
 -0.00020677646218847379 -0.000717735056293578 0.0018305017193429585
 0.0013769597557566904 -0.0010474144141089936 0.0006994379630768377
 -0.00210505229149055 -0.005401290650399987 -0.0034728831755505563
 0.0018715170121534341 0.0019890229652476665 -0.0006456153968443512
 0.0015292827245005636]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0509700420421895 0.8667910446536764 0.6667297734805062
 0.8484551643103868 0.9625991374961265 0.9294708991593429
 1.8089554197992492 0.6324998362395854 0.9045361436484766
 1.1423378779286844 0.525296125692208 0.9074330421159743 0.568214500759632
 0.7663235499913926 0.6775403739384113 0.5803948507476638]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0509700420421895 0.8667910446536764 0.6667297734805062
 0.8484551643103868 0.9625991374961265 0.9294708991593429
 1.8089554197992492 0.6324998362395854 0.9045361436484766
 1.1423378779286844 0.525296125692208 0.9074330421159743 0.568214500759632
 0.7663235499913926 0.6775403739384113 0.5803948507476638]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0532330958233582 0.659383218782806 0.01785741023363653
 0.022126103683308834 0.020270092348162204 0.0775061255581171
 0.6750690603506158 0.02665919717790462 0.33266435961337015
 0.21147967330374348 0.07051064408050563 0.017833421685850594
 0.03290919042756842 0.12785555241560698 1.2476391000051583
 0.03614640184904466]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.006114317172026276 0.024728544256926985 0.033500602774384006
 0.029759489655295103 0.018575330006081994 0.05992947237766756
 0.02470792861061462 0.03756793719598458 0.052928250564084234
 0.04879587036148472 0.041837274655439086 0.06867105506193756
 0.024856145576106794 0.020699322448391087 0.0599746932352368
 0.04044116878560289]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13511116407920537 0.20204728766042096 -0.06077589943351321
 0.11189186821994379 -0.26659186355307846 -0.3131789227011291
 0.16275581153217095 -0.020045365925105505 0.05247870855339186
 0.026498360397757673 -0.015939507729701277 0.1792848231870192
 0.14067554373230187 -0.0381360756136455 0.08348068227923418
 -0.013288975592255777]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0013160429988297306 -0.00041950148469438453 0.0002581375330871216
 0.0006574469779373482 -0.0006004143719114952 -0.002346464534723175
 0.0013359364046496847 -0.00014597684670908384 0.0032761375065508136
 0.00041569952314429726 -0.0008974536072720585 -0.00030710827826763154
 0.0015232958569989519 -0.0004915575290322938 -0.0011631418002464033
 0.00022100764931856642]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13511116407920537 0.20204728766042096 -0.06077589943351321
 0.11189186821994379 -0.26659186355307846 -0.3131789227011291
 0.16275581153217095 -0.020045365925105505 0.05247870855339186
 0.026498360397757673 -0.015939507729701277 0.1792848231870192
 0.14067554373230187 -0.0381360756136455 0.08348068227923418
 -0.013288975592255777]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06742460509556172 0.1377418568528572 0.0643964328324797
 0.04591464377962302 0.12975264543846823 0.08895967220098305
 0.06134439928981704 0.14918442767899676 0.3289051464818174
 0.06483399982664943 0.6743500331025949 0.4926295448584337
 0.19087931784762469 0.13193134023121325 0.043192941892234105
 0.08667422425699149]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.21740931878412004 0.009364630120087394 -0.00803344475309738
 -0.007882146055107352 -0.005788185270887335 0.023681728438135402
 -0.012937206786157732 -0.030539420907891083 0.020907700532166625
 -0.020250472919219113 0.16218239307206994 0.06483472005752679
 -0.043955623104604644 -0.017676963681784952 -0.027318774122546057
 -0.026159818065388717]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.681323567508337 -0.2843715328157856 -0.3213805885233161
 -0.674574655517248 -0.26084116864544754 -0.7679337989316313
 -0.3096260594890678 -2.8519691435131342 -3.952853222887656
 -0.2976427815681233 -0.8738574561903983 -0.9358329691938956
 -0.3058362004638871 -0.6934640557590818 -0.9679085065501416
 -0.33578965687015433]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0004387744982379538 0.0018949558558022384 -0.0002880749057983245
 -0.00018400673027921255 -0.0025759611457898957 0.0006109728211405319
 0.000718687814584118 -0.002288235044933251 0.0012915195406983937
 0.0008564974330505792 0.0004228031933018461 0.0007895253588580953
 -0.0004606880921494416 0.00046408497174973973 -0.0022785372820954275
 0.001465230710098242]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6586259389228399 -0.4612230764557517 -0.8804575181484469
 -0.8336542791147005 -0.7596462510990324 -0.692084416065114
 -0.46865246017316214 -0.7627261514510886 -0.5941186076047608
 -0.5768276696923579 -0.8345678038723077 -0.8306968354885972
 -0.2958741677903123 -0.5486968142162888 -0.9667547099795982
 -0.523682276547065]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6586259389228399 -0.4612230764557517 -0.8804575181484469
 -0.8336542791147005 -0.7596462510990324 -0.692084416065114
 -0.46865246017316214 -0.7627261514510886 -0.5941186076047608
 -0.5768276696923579 -0.8345678038723077 -0.8306968354885972
 -0.2958741677903123 -0.5486968142162888 -0.9667547099795982
 -0.523682276547065]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.18409615850372693 -0.9733073799167726 -0.9183580195745602
 -0.2505075895858971 -0.9646425485293679 -0.17060172217916014
 -0.4534160378690464 -0.16337190518536746 -0.3976906647275299
 -1.9079065036959673 -0.9601397537166849 -0.36143723635022984
 -0.17232430827118642 -0.37852669440825615 -0.19272081879587533
 -0.17646841982623088]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.14956573308022425 0.18886090683658435 0.18867776874586384
 0.25519907878616505 1.096437992633853 0.36530109235551694
 0.13358557102326224 0.255388010341722 0.15251605039913874
 2.108775972594294 1.8011379727888754 1.2095277078436852
 0.2529485775886921 0.3476802432430738 0.17198765300756017
 0.1336209757444764]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.25360343035548516 0.10369098068928201 -0.004387254584042365
 0.029624780912782984 0.17829801425587055 0.027335616921762448
 0.15256806143308327 -0.010424514913024145 -0.12671353363514692
 -0.06234691421300155 -0.011284226031590064 -0.0779575782702147
 0.13646972564734788 0.1542870829135178 -0.12103606145097608
 -0.040868841637924605]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.25360343035548516 0.10369098068928201 -0.004387254584042365
 0.029624780912782984 0.17829801425587055 0.027335616921762448
 0.15256806143308327 -0.010424514913024145 -0.12671353363514692
 -0.06234691421300155 -0.011284226031590064 -0.0779575782702147
 0.13646972564734788 0.1542870829135178 -0.12103606145097608
 -0.040868841637924605]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0005562659541694659 0.00013293444826978362 0.0004533834639792178
 -0.0018324958578087025 -0.0004615055664866363 -0.00042026063189420926
 0.0025600366107234596 0.0014016897614685386 -0.00035508071993162194
 -0.0015809224461880989 -0.0017460795947058239 0.001294442865976908
 -1.5344433616781838e-06 0.0004945068930924945 -0.0018872396599295682
 0.0013918589226254718]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.325005354597115 -0.17810278749245903 -0.3482479562593243
 -0.18737082381245215 -0.19126214772180428 -0.17792684282712715
 -0.15811945067755218 -0.1967724797505355 -0.20167798020291
 -0.16968092025760706 -0.15551710356593273 -0.3271791216120468
 -0.26512853643771145 -0.16860539510278097 -0.16916538601151265
 -0.24233674307023328]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07583331476263855 -0.3301554013160241 -0.10901615124434663
 -0.09084221204587803 -0.20970936571212612 -0.6367940516238769
 -0.19655997460894997 -0.15647487031021323 -0.13426183909136533
 -0.31487982045135193 -0.0777003664369005 -0.28429287600157405
 -0.6918604637368331 -0.13688524820161438 -0.8511358780593662
 -0.3484794398421209]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7498424373028703 -0.1240541609232843 0.07429109745119913
 0.008129336924925158 0.0121769808752977 -0.26248022923152636
 0.06677460230049792 0.37260691336107155 -0.22035611229670898
 0.19752581860654728 -0.06056320059561738 -0.21331893770834331
 0.41049738656755497 0.17709998873351113 0.293411962349429
 0.3159394262257392]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7498424373028703 -0.1240541609232843 0.07429109745119913
 0.008129336924925158 0.0121769808752977 -0.26248022923152636
 0.06677460230049792 0.37260691336107155 -0.22035611229670898
 0.19752581860654728 -0.06056320059561738 -0.21331893770834331
 0.41049738656755497 0.17709998873351113 0.293411962349429
 0.3159394262257392]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0003026504717300038 -0.0003446582095636419 -0.0007600516918128131
 -0.0022093589396807722 -0.0002712783957160292 0.00045115830973258
 0.000923296944259494 0.00039801450994814136 0.0005585826946031269
 0.0003224660657736578 0.0018377815450338064 -6.379758188054807e-05
 -0.001420003410042725 -4.8437624731140216e-05 0.0007064238163245196
 0.0002225124394834299]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.26684944228939933 0.39586705535587785 0.0262318436825622
 0.054600946432372933 0.021334275993594432 0.027117770575716713
 0.04926925834635102 0.019679993359686735 0.07591456463057343
 0.022441977680430932 0.019707595688714545 0.03034578351377646
 10.577703896209103 0.054435903931330985 0.02718789881976632
 0.030886279071271797]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.41720282510389706 0.4487379541191453 0.5157066570502548
 0.2058147541843087 0.6874920259152226 0.554641663377825
 0.39419656707251294 0.4117096015570861 0.3081576563272301
 0.21945919927381988 0.19794332336028 0.24409713760178614
 0.7330929802223374 0.30177483773187447 0.40644923064229393
 0.37914010960091415]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00018254598746156314 6.0528609821641766e-05 -0.0002568264188628211
 0.00017966984704498312 -0.0004001194976062661 -0.0006171663409172967
 0.0002917204442456911 -0.00043197580668882796 0.00037697009981624285
 8.858315934578975e-05 -0.00024539469588333307 0.0013591529565591398
 8.143300893245775e-05 -0.000594555099818761 8.941842765342045e-06
 0.00028158387870674817]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.1123939576891675 -0.49412253163402464 0.26761176642687273
 -0.45625626305390676 -0.06792362910862915 -0.7356779664948666
 -0.3121465495793062 -0.8547006245029073 -0.46115037188111235
 -0.7120610247138179 0.10456741988967566 -0.3419296726662403
 -0.8274718446611266 -0.5477357502873166 -0.9743521005891826
 -1.0997726605908034]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.1123939576891675 -0.49412253163402464 0.26761176642687273
 -0.45625626305390676 -0.06792362910862915 -0.7356779664948666
 -0.3121465495793062 -0.8547006245029073 -0.46115037188111235
 -0.7120610247138179 0.10456741988967566 -0.3419296726662403
 -0.8274718446611266 -0.5477357502873166 -0.9743521005891826
 -1.0997726605908034]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8584313791601654 1.1872032733172313 0.4108645444582665
 0.42484368375670883 0.4033056106908024 0.40098745032322375
 0.7930300673170859 0.6101038357441408 3.8699576771036193
 0.49978094390504024 0.41387479570642177 1.1407316814677042
 0.4002131956196318 0.7358441318747594 0.47080843634012287
 0.6679673558115521]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12465490241490787 0.15206064026928431 0.09419712924469206
 0.13334144273334217 0.05230589245576851 0.05964593448344646
 0.14515585535017048 0.15163160548537105 0.11444663946866185
 0.24841623956822728 0.3936679676614166 0.12864451560913703
 0.11100235789069395 0.13356742165609106 0.4648862849983334
 0.06797623307125182]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0016927200006126575 -0.0003535723552986758 0.001168627799779387
 0.0005133987810335416 -0.0006674334363125645 -0.0005339228690503517
 -0.0005343042451050606 -0.0005588409798612803 0.000265355847834825
 0.0017296837282751443 -0.0007313007471578536 -0.0002142676717819536
 -0.0011963328488241443 0.0007739098874796624 -0.0007661504885356496
 -0.0005875704030869899]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.46112071066538796 -0.2864704801735934 0.002440871570795455
 -0.26953414116580865 -0.2661645599728448 -0.2850660548235791
 -0.23756608278688088 -0.22152504015636537 -0.18049033850790194
 -0.21998334392810473 -0.2644904138133989 -0.044055159687448234
 -0.06089130047048861 -0.2443171318074919 -0.318168159359629
 -0.10469698365097639]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.46112071066538796 -0.2864704801735934 0.002440871570795455
 -0.26953414116580865 -0.2661645599728448 -0.2850660548235791
 -0.23756608278688088 -0.22152504015636537 -0.18049033850790194
 -0.21998334392810473 -0.2644904138133989 -0.044055159687448234
 -0.06089130047048861 -0.2443171318074919 -0.318168159359629
 -0.10469698365097639]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.6112668763601221 -0.32683427836580725 -1.0326941969605055
 -0.340484848418853 -0.32715311249419105 -0.9597529544885677
 -0.5072343432978383 -0.49171830035512165 -0.6639642404105237
 -0.7523096524358026 -0.33902956833483416 -5.319071713762216
 -0.5691461468678883 -3.3693702762961246 -0.35314972986051923
 -0.33195116713886]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.32637852170477444 0.20125971876958268 0.50325532134769
 0.4607702924586982 0.23943907270974618 1.0751511493189598
 0.4169627494548198 0.2747070515996927 0.2704353051792116
 0.2657405798479376 0.19736588608673203 0.32978540131502904
 0.17423787905824448 0.6340232326821159 0.6713294656614617
 0.21251423459993182]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0019395066092088298 0.0015750520135962565 0.0006754722261895774
 0.0007168828901680524 -0.0010339706537930982 0.0032388400458926436
 -0.0010588433347537007 0.0013486262392008175 -0.004198957894054861
 0.0015210980030831989 0.001089516421511727 0.0006710599215695168
 -0.0014860411586424815 -0.003059926318141226 -0.0006686832575709956
 0.0026093814649555958]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1524028986166384 -0.5533770264022745 0.40705257366287795
 1.4826913482193165 0.7399232252191271 0.48224605905713436
 0.06848163804713239 0.6675063870766421 0.8819596298097339
 1.00997949813272 0.7182398467028094 1.2356398260445491 1.179271900493517
 0.3607210912073855 1.040741512610014 0.8260940770832063]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1524028986166384 -0.5533770264022745 0.40705257366287795
 1.4826913482193165 0.7399232252191271 0.48224605905713436
 0.06848163804713239 0.6675063870766421 0.8819596298097339
 1.00997949813272 0.7182398467028094 1.2356398260445491 1.179271900493517
 0.3607210912073855 1.040741512610014 0.8260940770832063]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6329833570272109 0.9574682132506093 0.6854462117713432
 0.5710514646302858 0.6126137605718377 0.5222984945997928
 3.7756099339966944 0.6224440996959563 0.5382699041469569
 0.8118876458863391 0.7204068959054226 0.5266088640426654
 0.6593905885754039 0.5736906935104767 0.6345642738874318
 0.9938133805050794]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10194049139771387 -0.0758560024627282 -0.13971776809525077
 -0.12476975645429944 -0.12380079119272008 -0.4866439456338641
 -0.2930043224582164 -0.1425312989064339 -0.18805397356777592
 -0.08406274663367146 -0.08397083601430064 -2.0162486676274973
 -0.11566886375524309 -0.6790963956155842 -0.14747207200829582
 -0.11414128559588754]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00014848367364811432 -0.00015137599900388876 0.001303862970815084
 0.001002892581824455 -0.0004780476335305428 -0.0013788529865941257
 0.0014695043863274526 -0.003948382478412699 0.0020336476088851363
 0.0018706592717043224 -0.0051910796847136065 -0.00019874366134964294
 -0.0007457081124737641 0.002780231121934873 0.0007991727587015884
 0.0009807035295318345]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9776209439838492 0.6460968249385511 0.7800420599545432
 0.7642200865794273 0.8139268554186937 0.9019764454135889
 0.757872137897113 0.9879804698249823 0.7277752654511359
 0.8447707848186331 0.9785646506151803 0.5639195882209398
 0.8360010281209304 0.6537262311327484 0.929475982459199
 1.1239787077669603]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.9776209439838492 0.6460968249385511 0.7800420599545432
 0.7642200865794273 0.8139268554186937 0.9019764454135889
 0.757872137897113 0.9879804698249823 0.7277752654511359
 0.8447707848186331 0.9785646506151803 0.5639195882209398
 0.8360010281209304 0.6537262311327484 0.929475982459199
 1.1239787077669603]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0022174247327352023 -0.009618579396133755 0.012408168092620025
 -0.0033078679650134935 0.13056008761214205 0.2129640716606494
 -0.00610686945971376 0.007646042753776269 0.002129244273393721
 0.00355480755666047 0.013541297315703485 -0.010138911944644287
 -0.0022615451858333897 0.009718428695555986 6.317728073574041e-05
 0.007333512535853527]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6459098196631983 -0.2768939378364065 -0.46948405306099006
 -0.43609523423448143 -0.6079099111002879 -0.2411005542586525
 -0.5840254009936927 -0.2468430868806288 -0.41791393280951167
 -0.7161889346970187 -0.281440901192517 -0.2728311709053409
 -0.8499177322145522 -0.3830860464740101 -0.2978127977454855
 -0.6485232639555574]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0003323822882372873 0.0004089083937505178 -0.0004777487773652833
 -4.0585200161535884e-05 -0.00035336663300702953 0.0011534998926255868
 -0.00021924608219972552 0.0002976709648533915 0.00015264337825904306
 -0.0008949217830701572 7.357636109472931e-05 -0.0005503329762098497
 0.00036959505377420765 0.000803746967068808 0.0004156982887849603
 -0.000806755559960376]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3037765445833015 -1.1537735037000343 -1.049033605621479
 -1.0399973261443702 -1.1497340568068233 -0.41497317063796185
 -1.342109969970498 -1.4234444616041018 -0.6848806206359042
 -0.6348598360194097 -1.0209431748408095 -1.6401471481847067
 -1.3640211275250418 -1.9337364168708902 -1.016801573526836
 -1.122898869175607]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3037765445833015 -1.1537735037000343 -1.049033605621479
 -1.0399973261443702 -1.1497340568068233 -0.41497317063796185
 -1.342109969970498 -1.4234444616041018 -0.6848806206359042
 -0.6348598360194097 -1.0209431748408095 -1.6401471481847067
 -1.3640211275250418 -1.9337364168708902 -1.016801573526836
 -1.122898869175607]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5509936207814916 -0.6521547594760614 -1.251797315177634
 -0.5593071649896095 -0.5126019011824593 -0.5385211823293695
 -0.647030330566951 -0.6575445209047253 -0.5245939780709491
 -0.6423679244822704 -0.5574237659819703 -0.5280353219461916
 -0.9408534311567219 -0.5655685139692341 -1.0202969576636767
 -0.5391982879421073]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.2013702123905567 0.6305480148572861 0.017486217600682297
 0.022164278656524334 0.020419750362292894 0.0794840061375757
 0.6355883342233886 0.026747034657071768 0.36199959808326804
 0.22382484390251947 0.06474622648379953 0.01748262864804739
 0.03364361996066181 0.13507146599951253 1.1237222703160894
 0.03484414505948192]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0013526697397979182 0.0008863875006968058 0.0021037859961872685
 -0.00015247508855847913 -0.0007558633236184331 0.0018315726043581226
 0.0013522622095790415 -0.001125581198447051 0.0007179639764248735
 -0.0020359188423376695 -0.0053707269889235465 -0.0034944838810728185
 0.0019021555291969527 0.002012539034231736 -0.0007726269411064413
 0.001548339673592608]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0484857194110289 0.8655780118566146 0.6698615563657676
 0.8426447575089432 0.9568950020215569 0.9245651016072158
 1.8252687916993053 0.6363209444086904 0.8972846011857732
 1.1429234199610492 0.5291712473600898 0.9018718128097034
 0.5729727485364868 0.7662208520331151 0.6752136981622396
 0.5832695170759273]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0484857194110289 0.8655780118566146 0.6698615563657676
 0.8426447575089432 0.9568950020215569 0.9245651016072158
 1.8252687916993053 0.6363209444086904 0.8972846011857732
 1.1429234199610492 0.5291712473600898 0.9018718128097034
 0.5729727485364868 0.7662208520331151 0.6752136981622396
 0.5832695170759273]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00621143702958056 0.02469755046847793 0.03356536773678955
 0.02979014129436621 0.01847540217194821 0.05974485149020366
 0.02460885486258904 0.037634379737418594 0.05309355409649774
 0.04890331725441443 0.0418810411669152 0.0686590763641985
 0.024779287655281437 0.02062723698342018 0.060085274902678606
 0.04052486923759313]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0667095819717236 0.13371280307403682 0.06395120253426671
 0.045167373614297165 0.12632133972578682 0.08533831956988158
 0.06119063824949196 0.1458851429656699 0.33138914523666746
 0.06439903357011552 0.6817411942469406 0.5061258029127598
 0.19056842056424292 0.12909598510095513 0.04264089501777756
 0.08387835331173163]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001369636804046559 -0.0004317905075923445 0.0002283867640064663
 0.0008619304451834842 -0.0006231034421995685 -0.002370224487207001
 0.0012553669779002408 -0.00013992380540167604 0.00332958808416689
 0.0004014115993319911 -0.0009505178501480194 -0.00039389274773959926
 0.001473830740219506 -0.0004432482333825427 -0.0012069642027952021
 0.00037878746970237964]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13378411101043122 0.1987156395352105 -0.059496452439541436
 0.11173489911184381 -0.2686611403286122 -0.31669258246214693
 0.16093265973680204 -0.01601272517883992 0.05520536307598302
 0.028338821913918764 -0.014988708071961118 0.17632168642368243
 0.14172573405824634 -0.037563912568163424 0.08601426754522136
 -0.013090022269057405]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13378411101043122 0.1987156395352105 -0.059496452439541436
 0.11173489911184381 -0.2686611403286122 -0.31669258246214693
 0.16093265973680204 -0.01601272517883992 0.05520536307598302
 0.028338821913918764 -0.014988708071961118 0.17632168642368243
 0.14172573405824634 -0.037563912568163424 0.08601426754522136
 -0.013090022269057405]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2169420807267327 0.00955643278556799 -0.00804883899567058
 -0.007904901409732427 -0.005786296105762395 0.02400508541567126
 -0.013032894765482184 -0.03083430975130966 0.021176224546370068
 -0.02043994430829981 0.1631744673975583 0.06517609798892203
 -0.04433342489258257 -0.017816928438095153 -0.02758051196153413
 -0.02641390289493182]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6654244770866581 -0.2861222758196637 -0.32211318482804596
 -0.6916459903944223 -0.26038340936301135 -0.7737728447955208
 -0.3091741925207545 -2.7052632359427573 -4.041759181960008
 -0.2938589463218173 -0.8968099049720025 -0.9303246049969625
 -0.3079966976515563 -0.7065649907151086 -0.9895579810877911
 -0.3344334459712235]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0004312654890847589 0.001902501939675838 -0.0001739656384006638
 -0.0002060460397634578 -0.0026422315466652635 0.0006154676745243615
 0.0007446807753194173 -0.0023532337972782535 0.0012613822026363852
 0.000855232584547283 0.0005363146826158904 0.0008771655781183163
 -0.0003886059494212779 0.00032826300896585114 -0.0024158355685054422
 0.0014901755827164687]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6561637278998268 -0.46303204397863673 -0.885605082227125
 -0.8309401591013358 -0.7574404514893932 -0.690295690703658
 -0.4690085686538292 -0.7624391537454975 -0.593940805678567
 -0.5784486321423475 -0.8314936308443059 -0.827762753117817
 -0.29542403912878284 -0.5472154852155332 -0.9730465922374875
 -0.5260321604572799]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6561637278998268 -0.46303204397863673 -0.885605082227125
 -0.8309401591013358 -0.7574404514893932 -0.690295690703658
 -0.4690085686538292 -0.7624391537454975 -0.593940805678567
 -0.5784486321423475 -0.8314936308443059 -0.827762753117817
 -0.29542403912878284 -0.5472154852155332 -0.9730465922374875
 -0.5260321604572799]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.18039177486221103 -0.9577838527407541 -0.9405219214562927
 -0.24869448820138024 -0.93794455064386 -0.16657961455049594
 -0.44970388353108054 -0.1614743879101171 -0.38935318449489603
 -1.9514297466513337 -0.9722723648827805 -0.3673284994588772
 -0.1706031210626518 -0.3677593243870726 -0.1892398410544055
 -0.17443520524765063]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.15226731852386585 0.19737517971755097 0.1952551700135054
 0.25261960160358504 1.0216271821097915 0.38353823922585617
 0.13679063533326713 0.26325062263913407 0.1540082800806287
 2.1711998000573667 1.7723268642900765 1.2020718978310767
 0.26371381981953124 0.33211980599249524 0.17805971993857506
 0.13498716983668002]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0005482120801164614 5.3639857018616954e-05 0.00046829122337804785
 -0.0018507729483422386 -0.0004859258190193505 -0.00025690568864245034
 0.0026310861440420052 0.001386359315645791 -0.00034822557690555866
 -0.001594276286913665 -0.0017120813745938046 0.0012517620058816181
 6.862119445485981e-05 0.0003922363909811266 -0.001933824794140837
 0.0013818042770401273]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.25527759041473613 0.10252001123004649 -0.00320139959941736
 0.030079477643491125 0.17778891201370012 0.026721838864473296
 0.15266250146552246 -0.010191661608217023 -0.12547702368855532
 -0.06261106439236867 -0.011572822881361338 -0.07929074412990299
 0.13496850544265013 0.1524706978383889 -0.11995981804725432
 -0.039326232172719786]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.25527759041473613 0.10252001123004649 -0.00320139959941736
 0.030079477643491125 0.17778891201370012 0.026721838864473296
 0.15266250146552246 -0.010191661608217023 -0.12547702368855532
 -0.06261106439236867 -0.011572822881361338 -0.07929074412990299
 0.13496850544265013 0.1524706978383889 -0.11995981804725432
 -0.039326232172719786]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3144943943932938 -0.1801148638703359 -0.3492768280909865
 -0.18873097512769899 -0.19263057739255984 -0.18002345685801263
 -0.15933416715935694 -0.1986577114259811 -0.20193278043734317
 -0.17085225616162877 -0.1566680000886816 -0.3201260160457567
 -0.2614113876125268 -0.16968772021199857 -0.1709544215751189
 -0.2472034729478243]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07493700924147939 -0.3207090144563236 -0.11039462992201815
 -0.09006504884787839 -0.20327026606379756 -0.6237339427878157
 -0.1926577797696854 -0.1528193084995956 -0.1326391596979116
 -0.31922131278951466 -0.07635024022816202 -0.27876371132351696
 -0.6973468689807567 -0.13560166966878467 -0.9025316933197558
 -0.33383961784818345]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00025769642599812737 -0.0005019349408172946 -0.0008937423656603105
 -0.002226689499060186 -0.0002695654108438861 0.0004704689427248443
 0.000986059066468148 0.0005299189434852802 0.0005848539971144429
 0.00037302877850337035 0.0019341454962320537 9.234640614419476e-07
 -0.001559019972015907 -0.00010398508792855421 0.0006809007918426313
 0.000252334221892081]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7590053922407292 -0.12373716696460049 0.07539774938884944
 0.00927812104427745 0.01219346491638075 -0.2619547603038878
 0.07215843913281957 0.36951238670719344 -0.21736636523370534
 0.20364415390961987 -0.06277759347624448 -0.22126487936089728
 0.4119367851530722 0.18122539199515347 0.29103048406082555
 0.3175676166092946]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7590053922407292 -0.12373716696460049 0.07539774938884944
 0.00927812104427745 0.01219346491638075 -0.2619547603038878
 0.07215843913281957 0.36951238670719344 -0.21736636523370534
 0.20364415390961987 -0.06277759347624448 -0.22126487936089728
 0.4119367851530722 0.18122539199515347 0.29103048406082555
 0.3175676166092946]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3245709861477934 0.4007068106160309 0.028749914911267185
 0.05653044544353157 0.022904346550812974 0.029281823564049667
 0.05328159842399015 0.021269270867444033 0.0823815588252551
 0.02367011697598774 0.021096159431141473 0.03210408310743153
 10.480587934860505 0.06010706211362428 0.02881515912923408
 0.03351721461243295]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4221318182522226 0.45166290126236 0.5108901252872603 0.2026068677636783
 0.691881236278654 0.5685530988397642 0.39352908604061715
 0.42190489698430655 0.30262766000108954 0.21359734488885976
 0.1955436723965175 0.24117753617411208 0.745811759440744
 0.2979781679564055 0.39725753861235924 0.3684628129618376]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0001941934275220547 2.9572842324715465e-05 -0.00028244968516299984
 0.0001688019360282511 -0.0003849038784546899 -0.0005793305245339886
 0.00035037234135265605 -0.0003886539627180885 0.0003680900451581981
 7.913144239710124e-05 -0.00027991125904713865 0.0013769897318821056
 4.196082416194069e-05 -0.0005758588228038652 -6.177566661075273e-06
 0.0002765599635991267]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.1072724133718586 -0.5128252379628115 0.26396241112716634
 -0.45210942202627225 -0.05894436831388728 -0.7316452224247769
 -0.31517673664226237 -0.8447610083270487 -0.4676256858640767
 -0.7316745989800955 0.10397488154879769 -0.3422108617685598
 -0.8148765325439664 -0.5537604213106977 -0.9691351774689971
 -1.0914353668065135]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.1072724133718586 -0.5128252379628115 0.26396241112716634
 -0.45210942202627225 -0.05894436831388728 -0.7316452224247769
 -0.31517673664226237 -0.8447610083270487 -0.4676256858640767
 -0.7316745989800955 0.10397488154879769 -0.3422108617685598
 -0.8148765325439664 -0.5537604213106977 -0.9691351774689971
 -1.0914353668065135]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8480507752098692 1.13894475823354 0.3979121695787729 0.412227657609872
 0.39054190273695977 0.38743517567625896 0.8016612616943963
 0.6014336014982957 4.143426413510245 0.4908005764036025
 0.39871301987893554 1.079738106724398 0.38876630009858854
 0.723383502992298 0.4562968921888096 0.6286159485616344]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12850986387723717 0.14754526695268488 0.0916158434749596
 0.13641142972021034 0.051804293253653794 0.059091747881509164
 0.14011898729408406 0.15088355234134448 0.11171936905620757
 0.2622018836250198 0.38711380473069895 0.12915750860405636
 0.1094553059600182 0.13541427386579524 0.4672755175391632
 0.06728241418415323]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.001770025736599179 -0.00040268991829872647 0.0012525478504169518
 0.0005133780375484731 -0.0006939030383439349 -0.0005836970568928734
 -0.0004621666469033503 -0.000609539088047617 0.0002494564969734159
 0.0017686646610543533 -0.0007753541180631485 -0.0002528617789074039
 -0.001140715577521767 0.0007900062275189301 -0.0007982129395577298
 -0.000624938847574974]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.4611092715255339 -0.28854068896236695 0.0037886340880727773
 -0.26852661576738035 -0.26488936943723057 -0.2865819172722042
 -0.23810843803324117 -0.2201258855562806 -0.18133234125709277
 -0.2212217705862732 -0.26563673287100237 -0.04299944100274624
 -0.05953837745655843 -0.244329159483472 -0.32023935255137237
 -0.10270830172442207]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.4611092715255339 -0.28854068896236695 0.0037886340880727773
 -0.26852661576738035 -0.26488936943723057 -0.2865819172722042
 -0.23810843803324117 -0.2201258855562806 -0.18133234125709277
 -0.2212217705862732 -0.26563673287100237 -0.04299944100274624
 -0.05953837745655843 -0.244329159483472 -0.32023935255137237
 -0.10270830172442207]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.622237958647651 -0.3214185367738681 -1.0015714201104688
 -0.33520624182680736 -0.32164348567339374 -0.9512672969486378
 -0.5086969823802645 -0.49697206169170605 -0.6775715937317681
 -0.7546039612683448 -0.334639875710294 -5.160085326982461
 -0.5423494434598712 -3.5908102059023204 -0.3494372065215258
 -0.32661980821839265]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.32396489924763444 0.19844670345707882 0.48966180224357586
 0.46348921874720184 0.24101025067631454 1.1226362607179776
 0.4128705364248573 0.27969604863466185 0.27036664739536154
 0.2539215370114341 0.19055521267798053 0.3341729387606492
 0.1727415914365547 0.625363815765261 0.659635025233028 0.214823373365057]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1561627508991603 -0.5519939360621124 0.40292594833573575
 1.4820289380429734 0.7389883931598178 0.48157726620525143
 0.06582188588330702 0.6711816851859248 0.8806794718015366
 1.0089400167029308 0.7213659745740804 1.2381213619914084
 1.1822588570315578 0.36446954804874937 1.0335907386711263
 0.8234555851090821]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1561627508991603 -0.5519939360621124 0.40292594833573575
 1.4820289380429734 0.7389883931598178 0.48157726620525143
 0.06582188588330702 0.6711816851859248 0.8806794718015366
 1.0089400167029308 0.7213659745740804 1.2381213619914084
 1.1822588570315578 0.36446954804874937 1.0335907386711263
 0.8234555851090821]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0017769107113445592 0.0018155303520955846 0.0006300900960151123
 0.0004893024889841002 -0.0009013730096585904 0.0028859839888814853
 -0.001018016020850998 0.00107175304876439 -0.0039865327865993005
 0.001431675444733771 0.0011404905901090112 0.0005965979986443659
 -0.001454683449284011 -0.0028324768028731573 -0.0005227408132647271
 0.0024313095856473566]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6421389328204682 0.9771071485617571 0.690973660545501
 0.5819961120311218 0.627728743428578 0.5303891938910984
 3.5770920693175365 0.6347748626808919 0.5477852553518155
 0.8103601840218277 0.7294220724396483 0.5354016498951405
 0.6764843941203807 0.5826635537012347 0.6520996243374692
 1.0421303248590372]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.10550456858793522 -0.08002514391586377 -0.1427436974209439
 -0.13227076478638905 -0.13071986717369438 -0.5405452920093974
 -0.31880435779450117 -0.1501763199142133 -0.1885629950470991
 -0.08681147831718836 -0.0875897578255199 -1.7754820689590536
 -0.12248138541787966 -0.7750231982442385 -0.15930384376821002
 -0.12093447823735545]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.981273003998129 0.6461353331423929 0.7778937021496851
 0.7645109896019305 0.8125377585762268 0.8990075164692357
 0.758560349571247 0.9893467797922855 0.7307881060352549
 0.8442938507599279 0.9755537958192869 0.5622034518651906
 0.8372289338765133 0.6516171964718256 0.9310082897211845
 1.1259890047461605]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.981273003998129 0.6461353331423929 0.7778937021496851
 0.7645109896019305 0.8125377585762268 0.8990075164692357
 0.758560349571247 0.9893467797922855 0.7307881060352549
 0.8442938507599279 0.9755537958192869 0.5622034518651906
 0.8372289338765133 0.6516171964718256 0.9310082897211845
 1.1259890047461605]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0004295484911404912 0.00018208531825725238 0.0010224650871370478
 0.0007764377846977977 -6.76516586634035e-06 -0.0011387702388149512
 0.0011760370877801352 -0.0037261621629365027 0.0021514792190358567
 0.0016043010992118634 -0.004988217103507192 0.000281390387171232
 -0.0007776384252329849 0.002589136293807137 0.0005663416656952747
 0.0007174276447042827]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.002298970580934376 -0.009615663529305821 0.012283181211635906
 -0.0038088940011846116 0.13072245899888144 0.2152566362734355
 -0.006095824993872672 0.007425463430550621 0.001991949030097235
 0.0034095191279060527 0.013279421650364841 -0.010563057482964922
 -0.002356239596415419 0.009525657199128228 -3.5609112330639396e-05
 0.007147611468025488]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6492311936462406 -0.2783869894419528 -0.4671677798574182
 -0.43442387337613814 -0.6167068304905837 -0.23885401409482443
 -0.5635673721896807 -0.24421420279971823 -0.42353506434849936
 -0.7332208707299697 -0.280210869241074 -0.2726260841173885
 -0.8408201301645968 -0.38375569631808937 -0.2915612293045063
 -0.6576945779016513]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3071582626222662 -1.1534230293286132 -1.0441848186478684
 -1.04136835999859 -1.149392942021592 -0.4183037830741518
 -1.3458548485655564 -1.428816924020471 -0.6821392308366482
 -0.6357053665726224 -1.0210636588997157 -1.6430973486089164
 -1.363708133618233 -1.927821681672166 -1.0127389369851991
 -1.1203540803751655]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3071582626222662 -1.1534230293286132 -1.0441848186478684
 -1.04136835999859 -1.149392942021592 -0.4183037830741518
 -1.3458548485655564 -1.428816924020471 -0.6821392308366482
 -0.6357053665726224 -1.0210636588997157 -1.6430973486089164
 -1.363708133618233 -1.927821681672166 -1.0127389369851991
 -1.1203540803751655]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5522056150779019 -0.6466572414076945 -1.283607837318839
 -0.5544078990029581 -0.5111674432482218 -0.5391160708858652
 -0.6391467817058261 -0.6619807050533493 -0.5207186123680065
 -0.6469122132498006 -0.5531520908476931 -0.523769833593607
 -0.9357036767565959 -0.5623056810038436 -1.0220909428191862
 -0.5353463322820353]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00035497542037982166 0.0003881192302909453 -0.00036869054087732
 -0.0001561193743292444 -0.0004393807916759085 0.0011952273395330337
 -0.00021924643161483348 0.0005091980920994832 0.0002758375174719552
 -0.0008930605474683495 0.00016547689324603043 -0.0005201013077813232
 0.00019485927111739798 0.0008029945638030611 0.00028830649217620463
 -0.0008684449856117271]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1291319623337364 0.6466072611168866 0.01871716449910348
 0.023232684854205363 0.021502837059543194 0.08071011297634341
 0.6500633202328092 0.027978225594769507 0.3582909456466347
 0.21987118253987317 0.06812950349109315 0.01870540418992335
 0.035084338520065456 0.13662470250043535 1.1576304117069909
 0.03686259007634434]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.050402557927368 0.8665505625814792 0.6674594771259463
 0.8470095585574212 0.961316628440495 0.9284175848148015
 1.8128564515800785 0.6333968539987462 0.9028889024103354
 1.142411559970586 0.5262183710378756 0.9062270489377963
 0.5693283773481587 0.7661541700593453 0.6768663592269947
 0.5810433179860784]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.050402557927368 0.8665505625814792 0.6674594771259463
 0.8470095585574212 0.961316628440495 0.9284175848148015
 1.8128564515800785 0.6333968539987462 0.9028889024103354
 1.142411559970586 0.5262183710378756 0.9062270489377963
 0.5693283773481587 0.7661541700593453 0.6768663592269947
 0.5810433179860784]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.005927277083423804 0.024362771512599284 0.03343291097565503
 0.029589709969786448 0.01800539136656294 0.06091183429092381
 0.024398248373682548 0.03752883526677075 0.05267803149024923
 0.04864221235292274 0.042003929796696246 0.06976311918995332
 0.024309786522096796 0.020259005640712674 0.060352741672902555
 0.04054751705512123]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0009690375910867965 0.001045163889011158 0.0021419685317114745
 -0.00029219305352928826 -0.0004926096552064219 0.0018477252881463069
 0.0011290452214287594 -0.0007274197711408248 0.0006039483683807634
 -0.0020277832354803627 -0.0053140828254953365 -0.003287960487070918
 0.001671178580919197 0.0018113199841460481 -0.00029251234935936954
 0.001215173922452517]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06776995000290682 0.13713181112379846 0.06537603344317532
 0.04639641297513593 0.12935553616220377 0.08682432920692142
 0.06254374855411922 0.1486383324391175 0.332714037357768
 0.0659935293855367 0.6743881847627232 0.49162004575201707
 0.18847685645665177 0.13130368681109003 0.043879823547505976
 0.08570291368567443]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13486035487238673 0.2012765450102837 -0.06049305869547947
 0.11192285124703041 -0.26717815821315216 -0.31395880396569636
 0.16237693987652452 -0.019139502424753645 0.053073000491200256
 0.026884891270297438 -0.015730229619970032 0.1785934379074003
 0.1410033742403195 -0.038008973443725634 0.08403495104021445
 -0.013249980499862937]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13486035487238673 0.2012765450102837 -0.06049305869547947
 0.11192285124703041 -0.26717815821315216 -0.31395880396569636
 0.16237693987652452 -0.019139502424753645 0.053073000491200256
 0.026884891270297438 -0.015730229619970032 0.1785934379074003
 0.1410033742403195 -0.038008973443725634 0.08403495104021445
 -0.013249980499862937]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2267524406780534 0.009157043287954858 -0.008483627028287331
 -0.008213829251962974 -0.006104342544806515 0.023695809407065865
 -0.013102358469472924 -0.030715458590301604 0.021235073623493816
 -0.020494333840885434 0.15789210278296334 0.06145732487715112
 -0.043332528203128134 -0.01810602194551179 -0.027373483405193
 -0.026425376039710607]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001234642162145888 -0.00022013543597915186 0.00037482751053910524
 0.00024194305762095802 -0.0005781154946692402 -0.002112635608595842
 0.0013919367978396657 -0.00022245839201687212 0.002943415145270467
 0.0006908302663119481 -0.0008630628305480725 -0.00016675757343709297
 0.0015330908650154629 -0.0006482885892798163 -0.000999459736768904
 -0.00013048781915739327]
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-64\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node11848968-64\condensed_model_save, but does not seem to exist
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6715300433634358 -0.28887641610149 -0.32528132497729406
 -0.6850913642243056 -0.2637263124147469 -0.7637914597029956
 -0.31210957990328825 -2.7142534473237356 -4.01469303859078
 -0.2979615181920288 -0.8940628104611443 -0.9314632946684358
 -0.3123081903499679 -0.7132603327536531 -0.9888657636758077
 -0.3379304677241953]
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node11848968-64:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node11848968-64:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6580908926909473 -0.46167905091283973 -0.8815177324539254
 -0.8330084975183403 -0.7591410003468153 -0.6916863639326556
 -0.4687834771725697 -0.7626410944882803 -0.5941110722760363
 -0.5772024880599468 -0.8338436377183406 -0.8300078383519528
 -0.2958523512505686 -0.5484013407782334 -0.9680826404488114
 -0.52423949822116]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6580908926909473 -0.46167905091283973 -0.8815177324539254
 -0.8330084975183403 -0.7591410003468153 -0.6916863639326556
 -0.4687834771725697 -0.7626410944882803 -0.5941110722760363
 -0.5772024880599468 -0.8338436377183406 -0.8300078383519528
 -0.2958523512505686 -0.5484013407782334 -0.9680826404488114
 -0.52423949822116]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.18115682431276414 -0.9550297222994876 -0.9487889666731619
 -0.24895894543463337 -0.9316354759766144 -0.16682663166360207
 -0.4497636217030166 -0.1625506921212032 -0.388393722996795
 -1.9485425105791232 -0.9710112845059229 -0.370061656935183
 -0.1717193964581656 -0.3656374330604525 -0.1897291067116912
 -0.1757097697040426]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0004201561873864723 0.0017008259859206398 -0.0006069483637789197
 -0.0001628302923900038 -0.0022049340128938444 0.0004695056893231908
 0.0005817223823355588 -0.0018759720588530926 0.0011150457272000036
 0.0009202005677786673 0.00025339388134748564 0.000614685468347087
 -0.0006526265674438592 0.0008197586333545948 -0.0018028828573672384
 0.0012512120045066744]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.15616896133287783 0.199746143470347 0.19781086596798128
 0.2603716138069627 1.0385822277191266 0.38674207820254286
 0.14033493004710676 0.26607342654733773 0.15775950647377565
 2.0882024027419326 1.792260085699393 1.200340776289489 0.2648359930149377
 0.3410403057962111 0.18193254457587985 0.1390094453270854]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.14477797388068256 0.07236814368917935 0.013430955882676343
 -0.12354354894321229 -0.15164023619904204 -0.0004202301102106676
 0.08249849579311627 -0.010261369289487954 -0.046636189623477764
 0.09683654503621464 -0.021682273044270062 0.013580670356884372
 -0.14581668326582514 -0.010632709544878605 0.06497397241825889
 0.022166482963392076]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.14477797388068256 0.07236814368917935 0.013430955882676343
 -0.12354354894321229 -0.15164023619904204 -0.0004202301102106676
 0.08249849579311627 -0.010261369289487954 -0.046636189623477764
 0.09683654503621464 -0.021682273044270062 0.013580670356884372
 -0.14581668326582514 -0.010632709544878605 0.06497397241825889
 0.022166482963392076]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.25392648719969835 0.10341830649229036 -0.004111355466002801
 0.029727563757576143 0.17815321515925558 0.027183648747797856
 0.1525807408133717 -0.010358062390447858 -0.1264108179480344
 -0.06239403595396673 -0.011336265296126498 -0.07823267323903067
 0.13611536584755532 0.15385931345480655 -0.1207571779509606
 -0.040505484834570483]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.25392648719969835 0.10341830649229036 -0.004111355466002801
 0.029727563757576143 0.17815321515925558 0.027183648747797856
 0.1525807408133717 -0.010358062390447858 -0.1264108179480344
 -0.06239403595396673 -0.011336265296126498 -0.07823267323903067
 0.13611536584755532 0.15385931345480655 -0.1207571779509606
 -0.040505484834570483]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.31027181088089906 -0.181140505773941 -0.3472621139618152
 -0.1895534227217794 -0.19345592603332684 -0.18099420742278463
 -0.1600391322577472 -0.19962872346699742 -0.20235525795899797
 -0.17164091755791214 -0.15738617561231896 -0.3172828761484795
 -0.2600767051426595 -0.17037101934136092 -0.17187918435718338
 -0.24876105076090088]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0005559311084525342 0.000288976251702211 0.000403173805517687
 -0.0017143304358941402 -0.0004216896791115754 -0.0005807357970288307
 0.002311396056693532 0.0013714927870998594 -0.00036759010495346356
 -0.0015020417782643514 -0.001702316141821314 0.001416863227187537
 -0.0002217241894405808 0.0006321776613282815 -0.0017558087602378147
 0.0012862259887698457]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.07625090980982832 -0.3238724699410452 -0.11045275652195898
 -0.09146471948092455 -0.20582347225945466 -0.6290110700807126
 -0.197390569948068 -0.1550831556355543 -0.13424006372780328
 -0.31851099441675207 -0.0777735773126141 -0.28746992975862523
 -0.6891988185693917 -0.1359518265253981 -0.8780355668460301
 -0.33435137261101805]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.06037251293482826 0.07431550996206437 0.0141130291373536
 0.06549722975753725 -0.06544536621929611 -0.09671229288214056
 0.14404373114042285 0.044905768311693184 -0.1304616741400482
 -0.12332350321125257 0.07476462332545705 -0.044926336888708895
 0.005753407150323159 0.06743712694640444 -0.0776418215137448
 0.1080530820587629]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.06037251293482826 0.07431550996206437 0.0141130291373536
 0.06549722975753725 -0.06544536621929611 -0.09671229288214056
 0.14404373114042285 0.044905768311693184 -0.1304616741400482
 -0.12332350321125257 0.07476462332545705 -0.044926336888708895
 0.005753407150323159 0.06743712694640444 -0.0776418215137448
 0.1080530820587629]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7521161978966231 -0.12399054900671755 0.07447581625077966
 0.008343588838995927 0.01215865337605436 -0.26237626761122995
 0.06792009770651683 0.3719959205622345 -0.21963802129759244
 0.19890216807191363 -0.06076727365709876 -0.21524750021712127
 0.4107008068266278 0.17801712305204373 0.29297975290053063
 0.3164803174381079]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7521161978966231 -0.12399054900671755 0.07447581625077966
 0.008343588838995927 0.01215865337605436 -0.26237626761122995
 0.06792009770651683 0.3719959205622345 -0.21963802129759244
 0.19890216807191363 -0.06076727365709876 -0.21524750021712127
 0.4107008068266278 0.17801712305204373 0.29297975290053063
 0.3164803174381079]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3471279094381951 0.40995376539245 0.030548791715613213
 0.058613302603163574 0.02417084962410677 0.030920107412786314
 0.05616806444290635 0.022501278445537874 0.08596461509431946
 0.024795309466443403 0.022229713718814312 0.033611930649958016
 10.423868476760706 0.06356934812322361 0.030175919041078556
 0.03535510365122443]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0003985751034791818 -1.1493147858865349e-05 -0.0003912119041090678
 -0.001981849999525609 -0.0004173439541970414 0.0004156270427768116
 0.0006547605702473813 8.828821556031152e-05 0.0003652491562661786
 0.0002576537179071192 0.0017010679161687248 -0.00017264866619357
 -0.0010726887460308365 0.00017324619494063498 0.0007225400034225893
 6.737870410469804e-05]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.4219546637601182 0.4499070924627487 0.5132098807428419
 0.2053981222726202 0.6911932051034377 0.56354265180908 0.3929770021251619
 0.4172829435350633 0.3072120897184808 0.2170985818720026
 0.19826557575475237 0.2445866282371296 0.7304418784978105
 0.29883968826382623 0.40025848414113235 0.37344803484458144]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.006218287050977739 -0.09047725385420599 -0.16034206413409424
 0.15758841139985982 0.04050874612750033 -0.04246845338145644
 -0.20709336113254215 -0.014363260559400126 0.03174999472485182
 0.31158797833658314 0.06505301536998712 -0.08003702417031688
 0.010316876356712135 -0.19946173739246958 0.024133655569721718
 0.14708618968829212]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.006218287050977739 -0.09047725385420599 -0.16034206413409424
 0.15758841139985982 0.04050874612750033 -0.04246845338145644
 -0.20709336113254215 -0.014363260559400126 0.03174999472485182
 0.31158797833658314 0.06505301536998712 -0.08003702417031688
 0.010316876356712135 -0.19946173739246958 0.024133655569721718
 0.14708618968829212]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.1249185367920693 -0.49795879784001085 0.29252878170578767
 -0.4578507911419073 -0.056233347772523486 -0.74198470358068
 -0.2893889270431257 -0.8546713280850525 -0.4679819342286316
 -0.7346132272469827 0.11806589871018389 -0.32851506517813894
 -0.8276169419446742 -0.5573496056007622 -0.9858341773510152
 -1.111193057746257]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.1249185367920693 -0.49795879784001085 0.29252878170578767
 -0.4578507911419073 -0.056233347772523486 -0.74198470358068
 -0.2893889270431257 -0.8546713280850525 -0.4679819342286316
 -0.7346132272469827 0.11806589871018389 -0.32851506517813894
 -0.8276169419446742 -0.5573496056007622 -0.9858341773510152
 -1.111193057746257]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.8460047857659828 1.125369324044826 0.39669295167934515
 0.41075497298462427 0.3893386848961403 0.3861233158810964
 0.8053042928654999 0.6002782709314473 4.200198302624284
 0.4900263749982636 0.39686215640408495 1.0601894089752082
 0.38781082921977994 0.7207032651598873 0.4545131719317493
 0.6177779542342573]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.00017162525395392203 0.00013316149191994198 -0.00020756251343648224
 0.00018992221714436708 -0.0004187205793662607 -0.0006620939232159506
 0.00019415308560449818 -0.000490245443804771 0.0003328989278325034
 0.00011605653193375032 -0.00018170667811914787 0.0012876670424451508
 0.00015066139883632146 -0.0006081296652994395 6.71631694425523e-05
 0.0002684001920366108]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.12783753579972051 0.1490694678453598 0.09321681365267905
 0.13654615050256982 0.0534258898148897 0.06103147271115417
 0.14287680024775193 0.1525949689454989 0.11288083325949534
 0.25620747842876096 0.38205173771435064 0.12969631357139144
 0.11135970569458571 0.13559200799722548 0.4626451848409794
 0.06856870133438289]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.20001767689587338 0.02835692473242546 0.017285892664294145
 -0.085684299221926 0.03555767608079721 0.07822657784711667
 -0.2524403335618637 0.08803654132485819 0.07753075200792842
 0.16258258796942326 0.13790622370953512 0.01407529652442241
 -0.013812305718386292 -0.06202911670297934 -0.014765618127697888
 -0.01080912263207473]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.20001767689587338 0.02835692473242546 0.017285892664294145
 -0.085684299221926 0.03555767608079721 0.07822657784711667
 -0.2524403335618637 0.08803654132485819 0.07753075200792842
 0.16258258796942326 0.13790622370953512 0.01407529652442241
 -0.013812305718386292 -0.06202911670297934 -0.014765618127697888
 -0.01080912263207473]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.4617849467320697 -0.2881945856323376 0.004063439694361211
 -0.2693723920387049 -0.26579879823554864 -0.28652969155433394
 -0.23824633894653277 -0.22091227237566616 -0.18065813742157064
 -0.22071681426702278 -0.2656254451376499 -0.04197582071806294
 -0.05864776680329818 -0.24459612252221222 -0.32015418837474424
 -0.10294914833371063]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.4617849467320697 -0.2881945856323376 0.004063439694361211
 -0.2693723920387049 -0.26579879823554864 -0.28652969155433394
 -0.23824633894653277 -0.22091227237566616 -0.18065813742157064
 -0.22071681426702278 -0.2656254451376499 -0.04197582071806294
 -0.05864776680329818 -0.24459612252221222 -0.32015418837474424
 -0.10294914833371063]
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node27816840-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node27816840-3:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0836158007971129 -0.15430816270836062 0.2187026009850929
 -0.3806176688819872 -0.27722569072195724 -0.6631448343930151
 0.03354409013212373 -0.43854280906321963 1.2746739215552707
 -0.6454396682396621 0.27259292350312203 0.1807822579171457
 -0.37701923119523406 0.1709160165783123 1.1008472834015923
 -0.2321452280721114]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.5295135245784036 1.2696264517838753 -0.6392971457728752
 -0.44648828550640074 1.0869617524933948 -0.16369679473081095
 -0.5302507607598574 -0.5109225322322474 -0.6940119407443784
 -0.5513957071312651 1.4683415284907064 1.69924516666409
 0.2115245359133625 -0.5200772764845751 -0.5293437833014554
 -0.6207016841031615]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.17875568001893727 0.1523300880542697 0.12669818690071502
 -0.0703409392786766 -0.05783689544440876 0.001996044645541234
 -0.06398571983122661 0.22261412928919078 -0.13447575173634285
 -0.11015147393329316 -0.16501585061856983 -0.08518839011849602
 0.20207006307146405 0.1422030681192871 0.012140906279286934
 0.005698214620196568]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.7686226605857874 0.7879998305663356 0.5939918599076183
 -0.3499801859715205 0.7169788536752479 0.05776143132502068
 -0.7652350105014571 0.7658990490470228 -0.39164932572196864
 -0.14194950400986528 0.5053288584779966 -0.177524320748452
 -0.5032164379114039 -0.5236067031131902 0.807116380351646
 -0.6132921147872419]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.43943532754446374 0.6125818566752624 -0.01172029674025854
 -0.582071253931042 -0.1463276899597302 1.1768958228366493
 0.24673622028207454 -0.4659370015962544 -0.558447116419002
 1.2425043962513604 -0.44946403641555444 -0.22060218855936375
 -0.2862085936073895 -0.46341725018296953 0.7466246644732745
 -0.401712205562594]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.011825292711124064 -0.25197623970320593 -0.6220354483367221
 -0.2661067933469956 1.2684923146204545 -0.3007851339843499
 -0.2608067161669301 1.0637443866215068 -0.5692276482607422
 0.12096531711930317 -0.1363336896432205 -0.27065616101674494
 -0.5427092007640822 0.9562263002348506 0.5350172585418884
 -0.7119832532038862]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0598464397539448 0.33544461837087436 -0.4408442649826099
 0.5905063374291055 0.5615929565159181 -0.051603805145699344
 -0.3565568303357469 0.09210470565515977 -0.39000027202804144
 -0.5243464012771175 0.17677133119612035 1.534332356877975
 -0.7154838168612702 -0.21192948691550564 -0.43005489322177437
 -0.11008609552344345]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.1434835537632559 0.6506472881584181 0.7440013453039647
 0.5736325004640531 -0.5194798009305861 -0.1432758878805608
 -1.0839220107454077 -0.3155086889804766 -0.9860355814376203
 0.22280852926037809 0.7177742943547283 -0.16480195621055635
 0.4878268504163786 0.4766051024486758 -0.4028672223359585
 -0.11392120812217554]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0046893619278675636 0.024338000022728457 -0.029312624487449507
 0.0625038784820654 0.1220184214879676 0.05992455692519136
 -0.06471607412184036 0.06665164988861857 -0.0521432972210312
 0.004082435187025585 0.018757962105427073 -0.21663123307607135
 -0.05724309721710988 0.10526586357063161 0.0010010110230663227
 -0.0491868144970867]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3095174458540013 -0.27637451355241005 -0.2805968079897535
 1.1403189551329067 -0.2505662798440216 -0.319638992784584
 -0.3394745219646703 -0.22896376300441668 0.17152064485354943
 -0.4823870560061829 -0.23643963333900656 -0.1509614167372929
 1.050753184732267 1.0411037959143676 -0.39640502682131695
 -0.13237112273543286]
yhat_unstd_outtup_list: [None, None, None, None, None, None, None, None, None, None]
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 960, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 813, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node27816840-6\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node27816840-6:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0006974150075225449 0.00137907863354636 -0.0022719985975818147
 -0.0007229496920867218 -0.00038801825844309024 -0.0011544222182776898
 0.0006824177804218845 -0.0022489332559451347 0.0021203563102330514
 0.0013180907877457515 -0.001048569633158386 9.598934040241924e-05
 -0.0023568635934340942 0.0025446736316582785 0.0006363515341740733
 0.0007173822232221239]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.00048396606919215435 0.00036942840433024093 -0.00029742785862610366
 -0.00012971085486063183 -0.00016011162541618162 0.00018190389716635225
 -5.2290084839118345e-05 -0.0002780008410241397 0.0002856932591713268
 0.00015470993186372795 0.00011281866430237764 -0.00027405417120396347
 -6.0317836630241484e-05 -0.00017296249374212924 0.00036490073544040436
 -0.0005285451951250186]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0038892979236144765 0.005060713571227782 0.0017923430567732268
 -0.0036941403537785744 -0.0009670874085949133 0.0013992128073083976
 0.002753413778939229 -0.0006400748103726484 -0.0006721809226539754
 -0.00016371419907573737 -0.0008118101506302544 -0.0020511090381745145
 0.0011546303253924806 0.00207138402737983 -0.00044430658867414263
 -0.0008979761714524026]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.001138455119247539 -0.001024020608315357 0.0007884967726748404
 0.0008662147491229899 0.0006922484102451221 0.0005757459984486735
 -0.00013059030152209883 -0.0004996248625284139 -0.002641098387794527
 7.092889751331155e-05 0.00035992917833846394 -6.636338270193942e-05
 0.0007795791377446792 0.000875554755283392 0.0003680272787980332
 0.0001234274839416738]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0008433820091153788 -0.001349254950854889 -0.0018700722858067675
 -0.001324208531813198 -0.0014114825330981684 -0.0016686975133901605
 0.0003218029971060188 0.0008923139054691775 -0.0006767329694210567
 -0.0008524158816263228 -0.001317386461286707 0.004916936323596799
 -0.0004946342961659744 0.008255851873255726 -0.0012189862502695048
 -0.0013596514165799545]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0007256699220805629 0.00017767273546670515 0.0013146815113380672
 -0.00038623014208316597 -7.469804058113372e-05 -9.978663212689698e-05
 -0.004126964564779623 0.00046461888818019603 -0.00032910246293782475
 0.0011447253480877384 0.0017214199925804086 -0.00026371281613096764
 0.0005420777252981845 -0.00039993472766469695 -0.0003887494619203846
 -2.1687274808002144e-05]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [9.203548955710739e-05 -0.0005882542868866913 0.00015968848590211526
 -6.266581606223509e-05 -0.0001728451107827489 0.0006387268388245437
 -7.240593805180051e-05 0.0004818306378407411 0.00015804351697232266
 0.00011954094040964036 -5.1847066111776474e-05 -0.0007132182351325123
 0.00017939358047158738 -6.644924331275504e-05 3.957199695808766e-05
 -0.0001411457905957647]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.00021855889200428358 0.0003336081065565266 -0.0004407580352761009
 -0.00030713421950526176 4.344090902719255e-06 1.4994340213903001e-06
 0.0005093990345563792 -0.00018427637506607253 0.00034240541673888347
 -0.00023759124441860568 -0.000274737834414035 -0.00017231026015140927
 5.410211173512147e-05 0.00037798175263831224 -0.0002651413163538008
 4.0050446030504006e-05]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-5.735028182163315e-05 9.112746147510453e-06 -2.3321801156411803e-05
 7.1722078743508e-05 5.683335982487048e-05 4.128801067476706e-05
 -4.901190292783131e-05 -4.447170888743912e-05 0.00018351593289783752
 -4.8739802633979146e-05 1.5926223361439895e-05 -0.00015788289722645787
 -3.681981447717364e-05 -4.4644816562078304e-05 8.655342102592556e-05
 -2.7087469827158372e-06]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0011800484939933353 -0.0010252696036958664 -0.0005527182940667508
 -7.165747667428612e-05 -0.0005369435980949466 -0.0008564499948398585
 0.0006460951310938712 0.00040639431116373803 -0.0007641059264786865
 0.0006121621973813052 0.0015615442082085873 -0.0010901615493898176
 -0.000998029022780067 0.0001271592450894643 0.000801194341435163
 0.0005607375376556201]
yhat_unstd_outtup_list: [None, None, None, None, None, None, None, None, None, None]
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 960, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 813, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node27816840-4\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node27816840-4:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.7667747752942126 0.7518078334546893 0.7590299217187526
 0.8549393611841647 0.7842666896273207 0.8401149291951543
 0.7950152643094213 0.8164884722070329 0.9028210553030344
 0.8789181121201525 0.7720405060608646 0.8479031612362267
 0.8159810896144408 0.9199620164139631 0.859201908182246
 0.7883202759707204]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.1566592319778045 0.18863659831462617 0.16663053444169018
 0.12105427925090194 0.16212878491402555 0.18319485817957307
 0.14110709766446777 0.172447779785137 0.09124040005009774
 0.19063327325746546 0.11142286836723629 0.1902828671601537
 0.1894100182050018 0.1799011180184356 0.18114478315789506
 0.16618282459049427]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6217923293013731 -0.6842100642283706 -0.641942250527374
 -0.6373581654364374 -0.6953348371753619 -0.6593624043671102
 -0.5835142409449542 -0.6724688347053959 -0.5771092852201904
 -0.5659199919167387 -0.6887380597670966 -0.5860895152782412
 -0.6530862383241114 -0.6800553089936369 -0.6135066258883874
 -0.6758364580277946]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.6743078144849586 0.9114906393484237 0.8903899817585916
 0.9120457786818399 0.8813844666305457 0.8642475025148803
 0.8602262639332736 0.7895119293374848 0.8821453823166941
 0.8521747809043838 0.6523422526110376 0.9114163617221618
 0.8245159930616056 0.8457556083739004 0.8118912158089647
 0.740301364592324]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.002052326748236459 0.002599007945433586 0.010055412671775212
 -0.017715307139395967 -0.02961412068524545 -0.023478377392212105
 -0.013857537884859022 0.019154941817164935 0.019185083076039083
 0.013471694147811554 -0.0014414427580650563 0.020111258740242804
 0.013347019634118884 -0.008929482334093908 0.019474274478679353
 0.0190186366576699]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.13891255923641205 0.13687230422878072 0.1277151931318896
 0.117254318038674 0.14207624278399444 0.14156405079843068
 0.1586070757754981 0.1254976370274376 0.12410282061878866
 0.14931665636381342 0.13451304592966162 0.11634604591361718
 0.15857513988102565 0.12414176580733724 0.1364647374693525
 0.1288437799971571]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.42232776315988513 -0.43433502483901304 -0.38896977572120983
 -0.3905684057944961 -0.37330851076605304 -0.36854562263174995
 -0.739933838295054 -0.4297783751781052 -0.4229194599208637
 -0.3930159766420357 -0.42270449799311655 -0.39245665163616716
 -0.42705969726695214 -0.44084671098037237 -0.37951168108141714
 -0.4262897924001302]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3751878953963408 -0.39801290574774023 -0.3772582069885071
 -0.4042506464003508 -0.40109262000911144 -0.4082560453320625
 -0.3960605335578424 -0.3889263941959098 -0.40455427419943013
 -0.2939859279612994 -0.4009539283125125 -0.4050158427623221
 -0.38326216073622665 -0.40153901235374356 -0.4060278349929845
 -0.39553419552859637]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.028403518188642358 -0.04638127287652702 -0.029911443317344653
 -0.030011842943097448 -0.12462723401842786 -0.046928191559449356
 -0.037589814552341706 -0.03861586971050178 -0.034890400334111324
 -0.05011450696871771 -0.16226003686586865 -0.03160425083624606
 -0.03771075566035986 -0.044304221460150416 -0.0363423656836117
 -0.030957994593470206]
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3956214695203723 -0.35767216384944917 -0.3692528035660088
 -0.4036165695193112 -0.41365769967017724 -0.469335851969326
 -0.37521871217369773 -0.907909613092824 -0.4659186891762477
 -0.43715493986257176 -0.41689389457307724 -0.4575141521826027
 -0.4012500827222299 -0.40104484176515437 -0.410608265539502
 -0.4278038449015711]
yhat_unstd_outtup_list: [None, None, None, None, None, None, None, None, None, None]
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 960, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 813, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node26475698-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node26475698-3:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0014653904778467175 -0.05175858014133117 -0.02321262529104212
 0.015712636751213066 -0.043800994138390614 0.018819103519027214
 -0.01051365645680813 0.003405410297837058 0.021612176555737383
 0.008222839591212366 0.01821592140589748 -0.005726844318457797
 -0.0003381260935267638 0.018627663922225174 0.016756473525652155
 0.012513210392908758]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.009923864907467939 0.011284371368705581 0.012019849921651726
 -0.010469042612707202 -0.002208246645840406 0.006699071037901655
 -0.010766129713927153 0.0023042450813096638 -0.0424252222841659
 0.010284888546513521 -0.024751322878788673 0.012065818730424477
 0.012193112150482466 0.006264704917202074 0.008471165882520365
 -0.0008911284087498306]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0013697852443178837 4.6397713112655836e-05 4.334723802373874e-06
 -6.711501501760475e-05 0.00012474422993349887 -0.00029908799059494284
 0.00036695844950979106 8.239226347692141e-05 0.0005069078102425406
 0.0038882889892342676 0.00012406041235479837 -0.002001833140420184
 -0.000826988278626678 0.000368583565484526 -0.0009568149678156612
 8.95647964221924e-06]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.03561073240371454 -0.004880643918047989 -0.0027919979118951332
 -0.004910862833767599 0.012275646587253414 0.007046207267646237
 -0.0022049924841401614 0.027249819753244753 -0.003575185282452459
 0.02277310191217996 -0.05221387045102846 -0.00443946932490305
 -0.004836914717532642 0.024547104191443875 0.02729335849089176
 -0.005720568875179161]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.0011067174046234807 0.004092855979765719 0.000574800862595426
 -0.005330623313154592 -0.010018177523261618 -0.007613600039364066
 -0.0007539511010326017 0.004094134301708824 0.004928100870141339
 -0.0010986472905240852 -0.0032910657075837235 0.0028236857590760722
 0.005274965321257985 0.0012091013271038897 0.003814450117240159
 0.002400687840655946]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0029734423152198985 0.004583481350142915 0.0003572242641384227
 -0.005240931976634555 0.0016482980780404 0.0035605245641870398
 0.004597309687781742 -0.009693976435986296 -0.002984857611715075
 0.002328525134181081 0.003285063004044686 -0.006608687364994925
 0.005010878116430528 -0.003954033190640083 0.000678130401032706
 -0.0005403903352290129]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0004842146487301635 0.0011775355712478897 0.002238774173063285
 0.00012443255715818835 0.0014613288543957603 0.0013861471004906756
 -0.0107441063992533 0.0012072453455876375 -0.00018056970143937034
 0.0002752375337479185 0.0003892683214526127 9.014445987332032e-06
 0.000453766120955712 0.00012712808514744878 0.0011709653750712756
 0.00041961796765666026]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.0021609680392818964 0.0004984651822548258 0.002538343483504235
 -0.0003272491296007207 -0.0008510109801687094 -0.00017480170902503533
 -0.0005614884648114382 0.001410807784436835 -0.0004896793214879125
 -0.001878807323883347 -0.00014396216131667972 -0.00027941880664933416
 -0.0011387806510842757 0.0004902809784101125 -0.00010382833296898597
 -0.001149838586890578]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.004162251424449787 -0.0034261086931168805 0.007467379135872421
 0.006420868421310538 -0.01452927137791818 -0.002779024875875613
 0.00365881234546353 -0.0013788419009296837 0.004033985029868514
 -0.0036915913178912074 -0.01579336355652125 0.005604521377307076
 0.004786048777887353 0.0029869934637246076 0.0005211292646716825
 0.001956212481696945]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.005944229499552811 -0.003437917189226092 -0.00772239704269817
 0.003457424094375272 0.002369620653547899 0.00013538083089931208
 -0.0015972144730141968 -0.009868341751201881 9.612996746483082e-06
 0.00023788790149767425 0.0015458969558942437 0.0010079905496452324
 0.004822875063356241 0.005154173183582494 0.0004496590482812035
 -0.002508880321238749]
result_tup: None
yhat_unstd_outtup_list: [None, None, None, None, None, None, None, None, None, None]
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 815, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node26475698-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node26475698-7:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 17, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.3343495678772967 -0.1256487483656346 -0.32943401924437055
 -0.05342659039177264 -0.1769293373676944 0.26303465812341414
 -0.2674731361142989 0.3242082408195323 -0.1578573430698925
 -0.11445828998466737 -0.29247941021307333 -0.22193486828792708
 0.292682754253064 -0.10159505450472703 0.26397098667559776
 0.3629905897951527]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.06311507285345899 0.028219211818758888 -0.21269757144400203
 0.08398127856066012 0.08306645025992307 0.06722229350802297
 0.052369280950162134 0.06347903101875998 -0.06744548755295182
 -0.021690268041408195 0.03708751933264079 -0.15799796891228024
 -0.15707603611014878 0.10538163531322259 0.05793624156032262
 -0.024950683115141037]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.04474429853396844 0.3877600198228919 0.1581797648401993
 -0.15406584323610137 -0.13079131751169032 0.054590847092703565
 0.26727832660832507 -0.025850372943138356 0.03678647994663392
 -0.2732883132874167 -0.11712030870823448 -0.25845708247049914
 0.13146129791106742 0.19341654703501224 -0.2473076858352277
 -0.0673366577984939]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.03600817114731558 0.16884885065482777 -0.06981922620041303
 -0.003398802076287344 -0.07643798893337767 -0.1663922524944254
 0.09856216515164432 -0.023484237737907754 0.2306225133366107
 -0.02176840947592129 -0.1842740922959047 0.2225610369078304
 -0.11475816251173443 0.11047118833885769 -0.10555934967397357
 -0.10118140413713997]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.4206563000213622 0.3440122666551416 -0.1105205992246408
 0.2936549456905095 0.34282467279919215 -0.4577884224306054
 0.17364789503772515 0.1934552325975591 -0.4202458634064594
 -0.4559821299205946 0.24968666648111487 -0.20405042581756033
 0.08894720906460848 -0.13957985032828546 0.17834857806770704
 0.34424612475595034]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.36103007430173284 -0.005438048813260071 0.054556473328575994
 -0.13160405486745935 -0.27132333266729525 -0.04566392308058029
 -0.10555767215339931 0.31316492664748313 -0.12415953113088773
 -0.3642161211058388 0.28703179339902946 0.036917958149048524
 0.34648288431858687 -0.021843507894013237 0.22463664962240631
 0.1680455805493364]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.11332879082724806 -0.14307831110844904 0.06721539098961421
 0.028217569269172182 0.23870817704398214 0.2255992274791767
 -0.09567954353373839 -0.08023922201676936 -0.0875236863492978
 -0.04502684971218027 0.10063307194001972 -0.11940030996647627
 -0.13716145726402768 0.11958226150558349 -0.07043323582936345
 0.11191570838000026]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.049433456606288256 -0.4006345068635868 0.20734453529359945
 0.3337405938335728 0.1909197551476648 0.14093355839059318
 -0.39125044293326733 0.25104530311830553 -0.2217597610165171
 -0.18754170380942617 0.3226617649881698 0.305345635327467
 -0.3799506229755859 -0.19072458054407926 0.28700688760549253
 -0.31656987216869015]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.21413415022907584 -0.13774775794047298 0.16415998584133615
 0.023988156075732264 -0.22503849015294417 -0.044836434672034214
 -0.15150713344014002 0.09315534513663024 0.19210781571555602
 0.1301931601775187 0.027634858777460997 0.12279385882889202
 -0.16198453674718188 -0.20901828062477185 0.19885279363256642
 0.19138080962092688]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.33457068487269714 0.29591921084272166 0.08228629532364903
 -0.006316107719083197 0.09601258709076946 0.3713469310480631
 -0.1834044627723899 -0.33533881536450005 0.3290730409859213
 -0.2720670503980753 0.09250550647024183 0.17709200008209727
 -0.23757182720267653 -0.11883203192637784 -0.3041035357245615
 -0.32117242560849757]
result_tup: None
yhat_unstd_outtup_list: [None, None, None, None, None, None, None, None, None, None]
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 815, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node26475698-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node26475698-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 16, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-1.0477579743235717 -0.7048857206838228 0.22535880072562378
 -0.41004526610545866 -0.13236730509458197 -0.6921793696541577
 -0.28959461115053425 -0.6973757313814162 -0.48787319717924915
 -0.8494039528492798 0.0370085401559208 -0.2798502502911935
 -0.6475099927193614 -0.6024226047240684 -0.9697509889700021
 -1.0768661368907062]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.42233154082905205 -0.33393958887533626 0.05376549608563751
 -0.2672746363372545 -0.2587163677468908 -0.3236318559678591
 -0.2517803097183443 -0.20105865532543876 -0.20018720667724973
 -0.23905119811325437 -0.29670997988956127 -0.012065953528420097
 -0.036686880170913 -0.24976048999330583 -0.3756822898889995
 -0.04698757242286225]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1826953544020928 -0.8459945316036842 0.3494271668695233
 1.5862573888013525 0.7977785674643005 0.47103429141113085
 0.0015707963266722788 0.7498952708461325 0.8058807165666477
 1.025627782693375 0.8119688295662414 1.3013466544897723
 1.2884239431010378 0.2874237980715033 1.0467138221523826
 0.8395246344220486]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.0308359377874683 0.62568922310661 0.7631327526578894 0.7497790995515095
 0.8171517329372749 0.9134836796614298 0.7352279471627248
 1.039971837802001 0.7449593245007942 0.8715139057670221
 1.0052324049349455 0.5075168186319091 0.8571451381939706
 0.5743847287446484 0.9301855949838612 1.1217379361724173]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.3845434037734685 -1.153831008527301 -1.088671951512143
 -1.0483934490262334 -1.1457917185623891 -0.34996830597829864
 -1.2868412246227197 -1.4408440433730187 -0.6401886666585468
 -0.5797919430357986 -1.0581217727276906 -1.5144117424326757
 -1.3602945320416748 -2.055831945971342 -1.0926755519852724
 -1.0949301456192027]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [1.1021740463314325 0.8543092059582873 0.6373699822877315
 0.9217714249796489 1.0216956276983151 0.9893995683064016
 1.5058672720622692 0.6231552519454036 0.9801184089205013
 1.1714238527276533 0.43194869438299754 0.9694518052116923
 0.5354280427058287 0.8322118940616171 0.6947720916225557
 0.5674506128011706]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.10895139842195778 0.23223644310084238 -0.09018515446914702
 0.08649605072041125 -0.19552528802535904 -0.2531585428101907
 0.1492829208684116 -0.0695902455976256 0.04426852450723435
 0.020159949955181982 -0.022649376507662758 0.21819173423895002
 0.11504775609138967 -0.05096920902925077 0.08775592929330642
 -0.01404525166543252]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6819169708789696 -0.40699952182880966 -0.8551175201941541
 -0.8930499179990935 -0.8074694964799807 -0.7160961387377238
 -0.4287033390485203 -0.7758989352675791 -0.590535566988594
 -0.5480904606745497 -0.8988342009270353 -0.8969764311879902
 -0.22437956674486237 -0.540182464471283 -0.9447154822022448
 -0.4793229629900332]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [0.2736825254583107 0.1315379295377531 -0.020558536198706095
 0.02521430375829231 0.20858495308591532 0.0325551800039432
 0.171359398563191 -0.02073038557277212 -0.17399859428194736
 -0.07782677423247417 -0.019216323271232252 -0.08543341138762084
 0.1704956091003828 0.19754514915004737 -0.16352741497708642
 -0.06882484034278458]
result_tup: None
type(yhat):<class 'numpy.ma.core.MaskedArray'>. yhat: [-0.6064211717145249 -0.15484208080139683 0.11186355234985243
 0.005562230932989562 0.023830500598356175 -0.33025230006593137
 0.0378131235025104 0.36578452064812766 -0.2943540835241366
 0.19296383673535192 -0.14835649432903159 -0.09870109907757532
 0.43662408918228013 0.19782006205527383 0.2508309521230271
 0.3076727967222497]
result_tup: None
yhat_unstd_outtup_list: [None, None, None, None, None, None, None, None, None, None]
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 815, in MY_KDEpredictMSE
    yhat_unstd,crosserrors=zip(*yhat_unstd_outtup_list)
TypeError: zip argument #1 must support iteration
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-6\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-6:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-5\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-5:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-3\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-3:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-4\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-4:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-7:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-9\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-9\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-9:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-9:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-50\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-50\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-50:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-50:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-81\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-81\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-81:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-81:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-64\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-64\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-64:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-64:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-10\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-10\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-10\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-11\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-11\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-11\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-11\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-11:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-11:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-11:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-11:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-9\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-9\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-9\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-9:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-9:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-9:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-7\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-7:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-7:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-8\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-8\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
optimizedict for node61138623-4:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.31]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-4:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.31]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-99:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-99:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-99:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-99:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-14\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-14\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-14\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-14\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-14\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-14\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-14\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-14:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-14:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-14:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-14:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-14:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-14:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-14:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-61\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-61\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-61\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-61:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-61:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-61:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-5:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01111111e-05, 1.01111111e-05]), 'x_bandscale': array([1.01111111, 1.01111111, 1.01111111, 1.01111111]), 'outer_x_bw': array([0.285]), 'outer_y_bw': array([0.30333333]), 'Ndiff_depth_bw': array([0.50555556]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-5:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01111111e-05, 1.01111111e-05]), 'x_bandscale': array([1.01111111, 1.01111111, 1.01111111, 1.01111111]), 'outer_x_bw': array([0.285]), 'outer_y_bw': array([0.30333333]), 'Ndiff_depth_bw': array([0.50555556]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-5:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01111111e-05, 1.01111111e-05]), 'x_bandscale': array([1.01111111, 1.01111111, 1.01111111, 1.01111111]), 'outer_x_bw': array([0.285]), 'outer_y_bw': array([0.30333333]), 'Ndiff_depth_bw': array([0.50555556]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-7\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-7\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-7\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-7:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-7:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-7:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-6\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-6\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-6\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-6\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-6:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-6:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-6:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-6:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-75:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.31]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-75:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.31]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-75:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.31]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-75:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.31]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-75:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.31]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'product', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.4255]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.4255]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.4255]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.4255]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-11:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01632653e-05, 1.01632653e-05]), 'x_bandscale': array([1.01632653, 1.01632653]), 'outer_x_bw': array([0.28071429]), 'outer_y_bw': array([0.30489796]), 'Ndiff_depth_bw': array([0.50816327]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-11:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01632653e-05, 1.01632653e-05]), 'x_bandscale': array([1.01632653, 1.01632653]), 'outer_x_bw': array([0.28071429]), 'outer_y_bw': array([0.30489796]), 'Ndiff_depth_bw': array([0.50816327]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-11:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01632653e-05, 1.01632653e-05]), 'x_bandscale': array([1.01632653, 1.01632653]), 'outer_x_bw': array([0.28071429]), 'outer_y_bw': array([0.30489796]), 'Ndiff_depth_bw': array([0.50816327]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-11:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01632653e-05, 1.01632653e-05]), 'x_bandscale': array([1.01632653, 1.01632653]), 'outer_x_bw': array([0.28071429]), 'outer_y_bw': array([0.30489796]), 'Ndiff_depth_bw': array([0.50816327]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-11:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01632653e-05, 1.01632653e-05]), 'x_bandscale': array([1.01632653, 1.01632653]), 'outer_x_bw': array([0.28071429]), 'outer_y_bw': array([0.30489796]), 'Ndiff_depth_bw': array([0.50816327]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 601, in _minimize_neldermead
    fxr = func(xr)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
optimizedict for node61138623-15:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 7.85731582e-06, -8.05754443e-06]), 'x_bandscale': array([3.31425447, 2.51268796]), 'outer_x_bw': array([-0.21353883]), 'outer_y_bw': array([0.95148868]), 'Ndiff_depth_bw': array([0.27973869]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-15:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 7.85731582e-06, -8.05754443e-06]), 'x_bandscale': array([3.31425447, 2.51268796]), 'outer_x_bw': array([-0.21353883]), 'outer_y_bw': array([0.95148868]), 'Ndiff_depth_bw': array([0.27973869]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-15:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 7.85731582e-06, -8.05754443e-06]), 'x_bandscale': array([3.31425447, 2.51268796]), 'outer_x_bw': array([-0.21353883]), 'outer_y_bw': array([0.95148868]), 'Ndiff_depth_bw': array([0.27973869]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-15:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 7.85731582e-06, -8.05754443e-06]), 'x_bandscale': array([3.31425447, 2.51268796]), 'outer_x_bw': array([-0.21353883]), 'outer_y_bw': array([0.95148868]), 'Ndiff_depth_bw': array([0.27973869]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-15:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 7.85731582e-06, -8.05754443e-06]), 'x_bandscale': array([3.31425447, 2.51268796]), 'outer_x_bw': array([-0.21353883]), 'outer_y_bw': array([0.95148868]), 'Ndiff_depth_bw': array([0.27973869]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-15:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 7.85731582e-06, -8.05754443e-06]), 'x_bandscale': array([3.31425447, 2.51268796]), 'outer_x_bw': array([-0.21353883]), 'outer_y_bw': array([0.95148868]), 'Ndiff_depth_bw': array([0.27973869]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-15:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 7.85731582e-06, -8.05754443e-06]), 'x_bandscale': array([3.31425447, 2.51268796]), 'outer_x_bw': array([-0.21353883]), 'outer_y_bw': array([0.95148868]), 'Ndiff_depth_bw': array([0.27973869]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-15:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 7.85731582e-06, -8.05754443e-06]), 'x_bandscale': array([3.31425447, 2.51268796]), 'outer_x_bw': array([-0.21353883]), 'outer_y_bw': array([0.95148868]), 'Ndiff_depth_bw': array([0.27973869]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
optimizedict for node61138623-16:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-16:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-16:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-16:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-16:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-16:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-16:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-16:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-16:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-79:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 9.32943853e-06, -1.77325226e-06]), 'x_bandscale': array([3.27846884, 2.66714301]), 'outer_x_bw': array([-0.48561597]), 'outer_y_bw': array([0.89881964]), 'Ndiff_depth_bw': array([0.00050489]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-79:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 9.32943853e-06, -1.77325226e-06]), 'x_bandscale': array([3.27846884, 2.66714301]), 'outer_x_bw': array([-0.48561597]), 'outer_y_bw': array([0.89881964]), 'Ndiff_depth_bw': array([0.00050489]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-79:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 9.32943853e-06, -1.77325226e-06]), 'x_bandscale': array([3.27846884, 2.66714301]), 'outer_x_bw': array([-0.48561597]), 'outer_y_bw': array([0.89881964]), 'Ndiff_depth_bw': array([0.00050489]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-79:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([ 9.32943853e-06, -1.77325226e-06]), 'x_bandscale': array([3.27846884, 2.66714301]), 'outer_x_bw': array([-0.48561597]), 'outer_y_bw': array([0.89881964]), 'Ndiff_depth_bw': array([0.00050489]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 585, in _minimize_neldermead
    fsim[k] = func(sim[k])
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-8\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-8\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-8\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-8\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-8\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-8:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'batch_crossval', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01428571e-05, 1.01428571e-05]), 'x_bandscale': array([1.01428571, 1.01428571]), 'outer_x_bw': array([0.285]), 'outer_y_bw': array([0.30428571]), 'Ndiff_depth_bw': array([0.50714286]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01428571e-05, 1.01428571e-05]), 'x_bandscale': array([1.01428571, 1.01428571]), 'outer_x_bw': array([0.285]), 'outer_y_bw': array([0.30428571]), 'Ndiff_depth_bw': array([0.50714286]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01428571e-05, 1.01428571e-05]), 'x_bandscale': array([1.01428571, 1.01428571]), 'outer_x_bw': array([0.285]), 'outer_y_bw': array([0.30428571]), 'Ndiff_depth_bw': array([0.50714286]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01428571e-05, 1.01428571e-05]), 'x_bandscale': array([1.01428571, 1.01428571]), 'outer_x_bw': array([0.285]), 'outer_y_bw': array([0.30428571]), 'Ndiff_depth_bw': array([0.50714286]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01428571e-05, 1.01428571e-05]), 'x_bandscale': array([1.01428571, 1.01428571]), 'outer_x_bw': array([0.285]), 'outer_y_bw': array([0.30428571]), 'Ndiff_depth_bw': array([0.50714286]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-12:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.01428571e-05, 1.01428571e-05]), 'x_bandscale': array([1.01428571, 1.01428571]), 'outer_x_bw': array([0.285]), 'outer_y_bw': array([0.30428571]), 'Ndiff_depth_bw': array([0.50714286]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf2', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'linear', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-89\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-89\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-89\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-89\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-89:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-89:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-89:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-89:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.3]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-10:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([1.e-05, 1.e-05]), 'x_bandscale': array([1., 1.]), 'outer_x_bw': array([0.3]), 'outer_y_bw': array([0.315]), 'Ndiff_depth_bw': array([0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'crossmse2', 'Ndiff_type': 'recursive', 'param_count': 2, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'own_n', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 2, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is C:\Users\DPatton\gits\kernelkernel\cluster_test\node61138623-13\condensed_model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
saved_filename is model_save, but does not seem to exist
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-13:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([0.3, 0.3]), 'x_bandscale': array([1., 1., 1., 1.]), 'outer_x_bw': array([2.7]), 'outer_y_bw': array([2.2]), 'Ndiff_depth_bw': array([0.5, 0.5]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'product', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 'no', 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('exp', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
error in mycluster
Traceback (most recent call last):
  File "C:\Users\DPatton\gits\kernelkernel\mycluster.py", line 581, in runnode
    my_optimizedict,my_datagen_dict,force_start_params=0)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 930, in run_model_as_node
    self.do_monte_opt(optimizedict,datagen_dict,force_start_params=force_start_params)
  File "C:\Users\DPatton\gits\kernelkernel\kernelcompare.py", line 45, in do_monte_opt
    mk.optimize_free_params(datagen_obj,optimizedict,savedir=self.kc_savedirectory,myname=self.name)
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 962, in __init__
    self.minimize_obj=minimize(self.MY_KDEpredictMSE, free_params, args=args_tuple, method=method, options=opt_method_options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\_minimize.py", line 588, in minimize
    return _minimize_neldermead(fun, x0, args, callback, **options)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 606, in _minimize_neldermead
    fxe = func(xe)
  File "C:\Users\DPatton\AppData\Local\Continuum\anaconda3\lib\site-packages\scipy\optimize\optimize.py", line 326, in function_wrapper
    return function(*(wrapper_args + args))
  File "C:\Users\DPatton\gits\kernelkernel\mykern.py", line 830, in MY_KDEpredictMSE
    assert maskcount==0,print(f'{maskcount} masked values found in all_y_err')
AssertionError: None
optimizedict for node61138623-88:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([7.73904026e-06, 6.89024163e-06]), 'x_bandscale': array([1.94948906, 1.67899957, 1.55229792, 0.70080076]), 'outer_x_bw': array([-0.1536858]), 'outer_y_bw': array([0.47730372]), 'Ndiff_depth_bw': array([0.44690061]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-88:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([7.73904026e-06, 6.89024163e-06]), 'x_bandscale': array([1.94948906, 1.67899957, 1.55229792, 0.70080076]), 'outer_x_bw': array([-0.1536858]), 'outer_y_bw': array([0.47730372]), 'Ndiff_depth_bw': array([0.44690061]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-88:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([7.73904026e-06, 6.89024163e-06]), 'x_bandscale': array([1.94948906, 1.67899957, 1.55229792, 0.70080076]), 'outer_x_bw': array([-0.1536858]), 'outer_y_bw': array([0.47730372]), 'Ndiff_depth_bw': array([0.44690061]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-88:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([7.73904026e-06, 6.89024163e-06]), 'x_bandscale': array([1.94948906, 1.67899957, 1.55229792, 0.70080076]), 'outer_x_bw': array([-0.1536858]), 'outer_y_bw': array([0.47730372]), 'Ndiff_depth_bw': array([0.44690061]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-88:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([7.73904026e-06, 6.89024163e-06]), 'x_bandscale': array([1.94948906, 1.67899957, 1.55229792, 0.70080076]), 'outer_x_bw': array([-0.1536858]), 'outer_y_bw': array([0.47730372]), 'Ndiff_depth_bw': array([0.44690061]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
optimizedict for node61138623-88:{'opt_settings_dict': {'method': 'Nelder-Mead', 'options': {'xatol': 0.5, 'fatol': 1, 'adaptive': True}, 'help_start': 1, 'partial_match': 1}, 'hyper_param_dict': {'Ndiff_exponent': array([7.73904026e-06, 6.89024163e-06]), 'x_bandscale': array([1.94948906, 1.67899957, 1.55229792, 0.70080076]), 'outer_x_bw': array([-0.1536858]), 'outer_y_bw': array([0.47730372]), 'Ndiff_depth_bw': array([0.44690061]), 'y_bandscale': array([1.])}, 'modeldict': {'loss_function': 'mse', 'Ndiff_type': 'recursive', 'param_count': 4, 'Ndiff_start': 1, 'max_bw_Ndiff': 2, 'normalize_Ndiffwtsum': 'none', 'NWnorm': 'across', 'xkern_grid': 'no', 'ykern_grid': 49, 'outer_kern': 'gaussian', 'Ndiff_bw_kern': 'rbfkern', 'outer_x_bw_form': 'one_for_all', 'regression_model': 'NW-rbf', 'product_kern_norm': 'none', 'hyper_param_form_dict': {'Ndiff_exponent': 'free', 'x_bandscale': 'non-neg', 'Ndiff_depth_bw': 'non-neg', 'outer_x_bw': 'non-neg', 'outer_y_bw': 'non-neg', 'y_bandscale': 'fixed'}, 'ykerngrid_form': ('even', 4)}, 'datagen_dict': {'validate_batchcount': 10, 'batch_n': 48, 'batchcount': 10, 'param_count': 4, 'seed': 1, 'ftype': 'quadratic', 'evar': 1, 'source': 'monte'}}
error in mycluster could not findmodel_save
error in mycluster could not findfinal_model_save
